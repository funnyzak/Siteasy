<document>
    <webMaster>f@zak.hk</webMaster>
    <webSite>http://localhost:816/</webSite>
    <updatePeri>80</updatePeri>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-147.aspx</link>
        <title>巨人网络抢注“全额宝”商标 疑涉足电子金融业</title>
        <description>站易建站</description>
        <text>北京商报讯（记者 张绪旺）北京商报记者昨日独家获悉，国家工商行政管理总局商标局日前接到了来自巨人网络的&amp;ldquo;全额宝&amp;rdquo;商标注册申请。此外，巨人网络还申请了&amp;ldquo;全额宝&amp;rdquo;相关域名及官方微博，这一消息已经得到巨人网络内部确认。巨人网络抢注&amp;ldquo;全额宝&amp;rdquo;商标 疑涉足电子金融业据北京商报记者了解，巨人网络抢注商标，源于正在酝酿一个名为&amp;ldquo;全额宝&amp;rdquo;的全新业务，巨人网络董事长史玉柱可能计划在网游行业推出类似于&amp;ldquo;余额宝&amp;rdquo;的电子金融业务。目前传出的信息显示，&amp;ldquo;全额宝&amp;rdquo;将涉及网络游戏消费与支付等功能的革新。也有坊间消息称，&amp;ldquo;全额宝&amp;rdquo;可能在常规网游交易之外涉及增值项目。昨日下午，巨人网络相关负责人在电话采访中并未否认&amp;ldquo;全额宝&amp;rdquo;业务的推出，但避谈涉足电子金融业务。此前，阿里巴巴旗下支付宝上线&amp;ldquo;余额宝&amp;rdquo;搅动网络理财一池春水。由支付宝与天弘基金联合推出的该理财增值服务，允许用户将闲散资金转入并向基金公司购买相应理财产品，通常能获得比银行活期存款利息更高的收益。与沉淀在电商领域的巨大资金相似，网游行业也有着可观的现金流。《2012中国网络游戏市场年度报告》显示，目前我国网络游戏市场收入 规模已超过600亿元，玩家通常会在账户中预存大量资金（主要是虚拟货币）。如果允许玩家能够通过网游中的类存款增值服务进行资金管理，那么全行业每年将 会产生亿元级额外收益，对厂商和玩家两方面的诱惑显而易见。不过，目前游戏行业都是&amp;ldquo;游戏点数&amp;rdquo;等虚拟货币形式，操作电子金融业务还会涉及虚拟货币变现、返现等环节，游戏公司也需要获得相应资质许可。值得注意的是，史玉柱与金融圈颇有渊源且关系密切，其多次对民生银行等银行的大手笔投资被人熟知。</text>
        <image>http://image.techweb.com.cn/upload/2013/0729/1375065695216.jpg</image>
        <keywords>站易建站</keywords>
        <author>张绪旺</author>
        <source>站易建站</source>
        <pubDate> 2013-07-29 19:37:46</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/video-145.aspx</link>
        <title>大鹏嘚吧嘚488期：中国大妈力压世界猛男</title>
        <description>站易建站</description>
        <text></text>
        <image>http://i1.itc.cn/20130725/5fb_4d12b016_ed2e_d266_4b8a_77fb0fc16528_1.jpg</image>
        <keywords>站易建站</keywords>
        <author>搜狐TV</author>
        <source>搜狐</source>
        <pubDate> 2013-07-28 19:58:46</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/video-144.aspx</link>
        <title>《植物大战僵尸：花园战争》预告片</title>
        <description>站易建站</description>
        <text>《植物大战僵尸：花园战争》预告片</text>
        <image>http://g3.ykimg.com/0100641f4651b63607b38f0182ecb016208d15-3a57-523c-c76d-3f4027948e36</image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>优酷</source>
        <pubDate> 2013-06-12 12:38:06</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/soft-143.aspx</link>
        <title>迅雷7 V7.2.13.3884 正式版</title>
        <description>站易建站</description>
        <text>【概括介绍】迅雷7是一款下载软件。【基本介绍】迅雷7是一款新型的基于多资源超线程技术的下载软件，作为&amp;ldquo;宽带时期的下载工具&amp;rdquo;，迅雷针对宽带用户做了特别的优化，能够充分利用宽带上网的特点，带给用户高速下载的全新体验！同时，迅雷推出了&amp;ldquo;智能下载&amp;rdquo;的全新理念，通过丰富的智能提示和帮助，让用户真正享受到下载的乐趣。这个版本解决了论坛及其他反馈渠道中收集到的大多数问题，稳定性将会有显著提升，并且右侧栏调整为不再自动切换。推荐各位雷友升级体验！迅雷7在UI界面和性能上有了巨大的改进和提升。在界面方面，提供了华丽的外观，用户可以自由的切换配色方案或者自定义自己的个性化配色，甚至可以自由的拖放入一张自己的图片，而迅雷7会自动提取背景图特征色的方式让整个界面的风格保持一致。迅雷7借助BOLT引擎实现了一套全新的皮肤系统，也就是说：您可以随意往迅雷拖入一张图片进入迅雷界面换肤，我们会通过提取背景图特征色的方式让整个界面的风格保持一致；您可以随意更换背景皮肤，随意自定义想要的配色方案；您可以精心裁剪图片，达到满意的效果；您可以调整界面的所有字体，换成您自己安装的或系统自带的华文琥珀、火星文、隶书等等。您可以随心调整主界面和任务列表透明度，配合着皮肤，调整出酷炫的效果，没有达不到，只有想不到。您可以在windows 7下享受玻璃效果。【软件特点】1、性能优异&amp;ldquo;迅雷7&amp;rdquo;配备了研发代号为&amp;ldquo;Bolt（意为：闪电）&amp;rdquo;的全新界面引擎，使&amp;ldquo;迅雷7&amp;rdquo;的综合性能获得显著提升。界面流畅度优化：&amp;ldquo;迅雷7&amp;rdquo;通过全新的异步化下载平台支持，更加合理地管理后台处理流程，极大地避免了界面被莫名&amp;ldquo;卡住&amp;rdquo;的情况，使各种功能操作更加顺畅。图形操作优化：&amp;ldquo;迅雷7&amp;rdquo;通过使用MMX,SSE指令集对图形操作进行了深度的优化。无需借助显卡加速，就能用较以往更少的CPU资源，实现整个界面中更加绚丽流畅的动画效果。内存占用优化：&amp;ldquo;迅雷7&amp;rdquo;通过&amp;ldquo;Bolt&amp;rdquo;引擎进行统一的内存管理，大大降低了发生内存泄漏的可能性，而且当下的内存占用，仍有很大的优化空间。任务管理优化：&amp;ldquo;迅雷7&amp;rdquo;抛弃了传统Windows列表控件及数据库组件，采用全新开发的高性能任务数据库管理组件，经测试验证，即使拥有150,000条任务记录，任务列表拖动浏览依然流畅自如。2、全新下载体验&amp;ldquo;迅雷7&amp;rdquo;重点挖掘了现有产品中可完善的各种细节。每一个功能点，我们都重新构思如何将其设计的更加易于使用，从而形成了一套全新的下载体验。与此同时在这套全新下载体验中，每个点滴都巧妙融入了简约而不失高效的动画效果。（迅雷7在很多细节上下了功夫，例如按钮的边框动画效果，以及下载区块的填充效果。其他的细节有待您的探索）3、智能的多彩主题&amp;ldquo;迅雷7&amp;rdquo;借助&amp;ldquo;Bolt&amp;rdquo;引擎实现了一套新的&amp;ldquo;皮肤、主题&amp;rdquo;系统。在主题系统中您可以随意往&amp;ldquo;迅雷7&amp;rdquo;界面中拖拽一张图片，&amp;ldquo;迅雷7&amp;rdquo;就会将其设为背景，并提取图片的主色调作为界面色调，让界面风格与背景图保持一致。（&amp;ldquo;主题&amp;rdquo;只是新的皮肤主题系统中的一部分，而更加强大的&amp;ldquo;皮肤&amp;rdquo;系统，将会给用户带来与众不同的体验）4、快速启动&amp;ldquo;迅雷7&amp;rdquo;通过&amp;ldquo;Bolt&amp;rdquo;界面引擎优化管理UI资源的打包及按需加载，大量的逻辑代码使用脚本语言编写，加上异步初始化任务管理等手段，使&amp;ldquo;迅雷7&amp;rdquo;的启动速度比迅雷5.9有大幅提升。5、稳定可靠&amp;ldquo;迅雷7&amp;rdquo;采用XML加Lua脚本语言的方式开发界面及插件，技术门槛低，稳定性好。即使&amp;ldquo;界面、插件&amp;rdquo;的代码执行发生问题，也不会导致整个程序崩溃，而是输出错误信息，更加便于开发人员定位。因此从原理上来看，&amp;ldquo;迅雷7&amp;rdquo;的崩溃率将会比迅雷历史上的任何一个版本都要低。6、开放自由&amp;ldquo;迅雷7&amp;rdquo;提供了一个真正意义上的开发平台，例如：&amp;ldquo;插件可以在不修改主程序代码的条件下自定义自己的加载逻辑，并且插件可以使用一致的方法调整界面中的任何元素。&amp;rdquo;在这个开放、自由的平台上，插件的发挥空间非常大。插件开发者甚至可以在&amp;ldquo;迅雷7&amp;rdquo;中开发&amp;ldquo;俄罗斯方块游戏&amp;rdquo;。</text>
        <image>http://img1.2345.com/duoteimg/softimg/soft/2054.jpg?1370946160</image>
        <keywords>站易建站</keywords>
        <author>迅雷</author>
        <source>多特</source>
        <pubDate> 2013-06-11 19:42:07</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-142.aspx</link>
        <title>JQuery选择器整理</title>
        <description>站易建站</description>
        <text>1.通过标签类型选择$(&amp;quot;p&amp;quot;) //选择所有的P标签$(&amp;quot;a&amp;quot;) //选择所有的a标签$(&amp;quot;div&amp;quot;) //选择所有的div标签2.通过class选择元素$(&amp;quot;.red&amp;quot;) //选择类名为red的类3.通过ID选择元素$(&amp;quot;#red&amp;quot;) //选择ID名为red的类4.使用联合选择器更加准确的选择$(&amp;quot;p.red&amp;quot;) //选择具有类名为red的p标签5.使用组合选择器$(&amp;quot;p,.red,#red&amp;quot;) //选择所有p标签 具有red类名的类 ID名为red的类6.层次选择器$(&amp;quot;body span&amp;quot;) //选择出body里面的所有span标签，包括被p包含的span标签$(&amp;quot;body&amp;gt;span&amp;quot;) //只选择body下直接含有的span标签，不包括那些被p包含的span标签7.选择不匹配某个选择器的元素 :not()$(&amp;quot;p:not(.foo)&amp;quot;); //选择所有类名不是foot的P标签元素8.第一个元素和最后一个元素 :first和:last选择第一个元素：$(&amp;quot;p:first&amp;quot;); //选择第一个P标签选择最后一个元素：$(&amp;quot;p:last&amp;quot;); //选择第二个P标签9.选择奇数偶数的元素 :even和:odd选择奇数：$(&amp;quot;p:even&amp;quot;);选择偶数：$(&amp;quot;p:odd&amp;quot;);10.选择特定索引的元素$(&amp;quot;p:eq(5)&amp;quot;) //选择第6个P标签注意：索引是从0开始，0代表第一个元素，1代表第二个，2代表第三个......11.内容过滤器 :contains() 区分大小写的，内容的大小写影响匹配$(&amp;quot;p:contains(哇塞，有头猪)&amp;quot;); //P标签里面含有“哇塞，有头猪”文本，才会被选中12.匹配包含特定元素的元素 :has()$(&amp;quot;p:has(span)&amp;quot;); //选择里面含有span标签的p元素13.选择空元素$(&amp;quot;:empty&amp;quot;); //不包含任何文本也不包含任何其他元素的空元素14.选择父元素 :parent 只匹配那些拥有子元素的元素，不管它包含的是其他元素，还是文本内容$(&amp;quot;p:parent&amp;quot;); //所有拥有子元素的P标签15.可见性过滤器 :hidden和:visible 分别用来选择被隐藏的元素和可看到的元素选择所有可见的段落：$(&amp;quot;p:visible&amp;quot;);选择所有不可见的段落：$(&amp;quot;p:hidden&amp;quot;);16.属性过滤器 属性是位于标签内部用来对标签做进一步描述的东西（如class、href、ID、title等①根据属性及属性的值选择元素要匹配拥有特定属性及属性值的元素，用下面的格式将属性和值放到方括号当中（[]）：[属性名=属性值]要选择拥有class foo的所有元素，在控制台执行以下代码：$(&amp;quot;[class=foo]&amp;quot;);②选择没有某个属性的元素或属性值不匹配的元素反之，要选择不匹配特定属性及其值的元素，在属性名和属性值之间的等号前插入一个感叹号（!）：[属性名!=属性值]运行下面的代码，选出没有foo class的全部段落：$(&amp;quot;p[class!=foo]&amp;quot;);17.子元素过滤器子元素过滤器是:even、:odd和:eq()的一种代用品。主要的区别在于这一套选择器起始索引为1而不是0匹配奇数索引值／偶数索引值／特定索引值的元素 :nth-child()４个参数选项：even、odd、index和equation这个过滤器的索引也是从1而不是0开始，这样第一个元素的索引就是1而不是0，第2个元素是2，以此类推选择第一个或最后一个子元素:first-child和:last-child返回的元素集合可能含有不止一个匹配元素$(&amp;quot;p span:last&amp;quot;); //找回段落内的最后一个span18.表单过滤器按表单元素配匹类型button、:checkbox、:file、:image、:input、:password、:radio、:submit和:text$(&amp;quot;input:radio&amp;quot;); //选择全部单选按钮按匹配可禁用的表单元素 enabled和:disabled$(&amp;quot;:disabled&amp;quot;); //选择所有被禁用表单元素匹配选中和未选中的表单元素 checked和:selected$(&amp;quot;:checked&amp;quot;); //当前选中的单选按钮原文出处：http://www.w3cfuns.com/thread-5594695-1-1.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>杨斌</author>
        <source>互联网</source>
        <pubDate> 2013-06-06 23:56:11</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/photo-141.aspx</link>
        <title>美宇航员在全球最大泳池接受失重训练</title>
        <description>站易建站</description>
        <text>英国《每日邮报》6月4日刊登了一组展示美国国家航空航天局(NASA)宇航员正在世界上最大的游泳池内艰苦地接受训练的照片。这一由美国太空总署打造的游泳池实际是无重力实验室(NBL)，是为了让宇航员模拟在失重条件下执行任务。</text>
        <image>http://img4.cache.netease.com/photo/0001/2013-06-06/90nghuom00ao0001.jpg</image>
        <keywords>站易建站</keywords>
        <author>杨斌</author>
        <source>网易</source>
        <pubDate> 2013-06-06 23:48:29</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/photo-140.aspx</link>
        <title>第42届洲际小姐中国大赛</title>
        <description>站易建站</description>
        <text>穿过世界知名的亚历山大广场和菩提树大街，聆听着众多文化下不同的声音，能感受到德国柏林这座古老文化名城的古典与现代、浪漫与严谨；种类齐全 的热带水果树木和成群的象龟，让&amp;ldquo;旅游者天堂&amp;rdquo;&amp;mdash;&amp;mdash;赛舍尔岛又有了更多值得炫耀的资本；稀有的火烈鸟和多民族融合、丰富多彩的文化让巴哈马的旅游产业蒸蒸日上&amp;hellip;&amp;hellip;留在每一届&amp;ldquo;洲际小姐&amp;rdquo;脑海中的活动和印象都不一样，但对自身素质的提高和当地旅游文化产业的贡献却都一样重要。洲际小姐(Miss Intercontinental &amp;reg;)属于世界选美组织WBO(World Beauty Organization)旗下的三大赛事之一。WBO还拥有洲际先生(Mister Intercontinental)和世界顶尖超级模特大赛(Top Model of the World &amp;reg;)的举办权。这似乎从一开始就注定了&amp;ldquo;洲际小姐&amp;rdquo;大赛的国际化视野和多方共赢的合作模式。&amp;ldquo;洲际小姐&amp;rdquo;始于1971年的阿鲁巴岛。最初以青少年选美大赛为开端，宣传当地旅游文化活动，发掘全球优秀女性的美丽与智慧。1971年，在阿鲁巴岛奥拉涅斯塔德举办的首届选美赛事就吸引了众多的目光。在持续两周的赛事期间，35位身披红色浴巾的佳丽体验了最美的沙滩、最精美的食物和最真实的社交界，也给所有观众奉献了一场美轮美奂的比赛。随后的慈善活动和各地的友好交流不但展现了优秀女性的自信、美丽、智慧和才华，还成为当地最热门的话题，成为当地旅游文化产业迅猛发展的强力催化剂。这些积极因素受到了电视评审的极力好评，后来直接成为一年一度的活动。在过去的41年里，洲际小姐的足迹走遍了世界各地。西班牙阿利坎特、哥伦比亚卡塔赫纳、德国柏林、塞舌尔岛马埃、白俄罗斯明斯克、巴哈马等地均留下了洲际小姐的倩影。41年以来，世界改变了很多，而&amp;ldquo;洲际小姐&amp;rdquo;大赛正见证了这些变化。被授予&amp;ldquo;洲际小姐&amp;rdquo;称号的那些女性，已经在政坛、经济、金融、电影业及时尚界等领域崭露头角，这些都是女性权力、魅力、义务和智慧的具体体现。世界选美组织将和举办国当地的公司一起举办洲际小姐的全球总决赛，此种形式的合作不仅保证了大赛固有的国际化元素，同时还能融入当地的文化特色，每届比赛中慈善活动筹集到的善款都将用来为举办国当地的公益项目服务，对当地旅游文化产业的促进作用和强大的宣传效果正是举办地和赞助商所希望看到的。每一年为争夺&amp;ldquo;洲际小姐&amp;rdquo;荣誉称号及其皇冠（&amp;ldquo;洲际小姐&amp;rdquo;的皇冠是所有选美赛事中最昂贵的）的参赛者已经增加到了70多个国家，并在逐年增加。大赛官网：http://www.inchina.org.cn/?action-mic</text>
        <image>http://www.inchina.org.cn/attachments/2012/08/1_2012080110395111yyx.jpg</image>
        <keywords>站易建站</keywords>
        <author>互联网</author>
        <source>大赛官方网站</source>
        <pubDate> 2013-06-06 11:57:21</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-138.aspx</link>
        <title>jQuery.extend()</title>
        <description>站易建站</description>
        <text>jQuery.extend( target, [ object1 ], [ objectN ] )返回：Object描述：合并两个或更多的对象的内容汇集成到第一个对象。version added:1.0jQuery.extend( target, [ object1 ], [ objectN ] )target一个对象，如果附加的对象被传递给这个方法将那么它将接收新的属性，如果它是唯一的参数将扩展jQuery的命名空间。object1一个对象，它包含额外的属性合并到第一个参数objectN包含额外的属性合并到第一个参数version added:1.1.4jQuery.extend( [ deep ], target, object1, [ objectN ] )deep如果是true，合并成为递归（又叫做深拷贝）。target对象扩展。这将接收新的属性。object1一个对象，它包含额外的属性合并到第一个参数objectN包含额外的属性合并到第一个参数当我们提供两个或多个对象给$.extend()，对象的所有属性都添加到目标对象。如果只有一个参数提供给$.extend()，这意味着目标参数被省略。在这种情况下，jQuery对象本身被默认为目标。这样，我们可以在jQuery的命名空间下添加新的功能。这可用于插件作者希望添加新的方法到jQuery。请记住，目标对象（第一个参数）将被修改，也将通过$.extend()返回。然而，如果我们想保留原对象，我们可以通过传递一个空对象作为目标：var object = $.extend({}, object1, object2);通过$.extend()合并执行默认不是递归的;如果第一个对象的属性本身是一个对象或数组，这将是完全用第二个对象相同的key重写一个属性。这些值是不合并。这可以看到在下面的例子通过检查香蕉的值。然而，true为第一个函数参数，对象将被递归合并。未定义的属性不会被复制。然而，从对象原型的继承属性将被复制。Examples:Example:Merge two objects, modifying the first.var object1 = {apple: 0,banana: {weight: 52, price: 100},cherry: 97};var object2 = {banana: {price: 200},durian: 100};$.extend(object1, object2);Result:object1 === {apple: 0, banana: {price: 200}, cherry: 97, durian: 100}Example:Merge two objects recursively, modifying the first.var object1 = {apple: 0,banana: {weight: 52, price: 100},cherry: 97};var object2 = {banana: {price: 200},lime: 100};$.extend(true, object1, object2);Result:object1 === {apple: 0, banana: {weight: 52, price: 200}, cherry: 97, lime: 100}Example:Merge settings and options, modifying settings.var settings = { validate: false, limit: 5, name: &amp;quot;foo&amp;quot; };var options = { validate: true, name: &amp;quot;bar&amp;quot; };jQuery.extend(settings, options);Result:settings == { validate: true, limit: 5, name: &amp;quot;bar&amp;quot; }Example:Merge defaults and options, without modifying the defaults. This is a common plugin development pattern.var empty = {}var defaults = { validate: false, limit: 5, name: &amp;quot;foo&amp;quot; };var options = { validate: true, name: &amp;quot;bar&amp;quot; };var settings = $.extend(empty, defaults, options);Result:settings == { validate: true, limit: 5, name: &amp;quot;bar&amp;quot; }empty == { validate: true, limit: 5, name: &amp;quot;bar&amp;quot; }</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>杨斌</author>
        <source>互联网</source>
        <pubDate> 2013-06-05 17:14:02</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-137.aspx</link>
        <title>百度起诉360抄袭站长平台文档内容格式 索赔50万</title>
        <description>站易建站</description>
        <text>导语：百度与360是宿敌了，在360推出搜索后，二者矛盾日渐尖锐，二者对簿公堂，明争暗斗升级。前一阵，百度公司向北京市第一中级人民法院提起360不正当竞争诉讼和侵犯商标的诉讼。北京一中院判决360败诉，要求360停止不正当竞争行为、连续15日在首页道歉声明，赔偿损失45万元；近日，百度诉360抄袭索赔50万，目前，此案正在进一步审理中。百度诉360抄袭索赔50万京华时报讯（记者裴晓兰）记者昨天获悉，北京百度网讯科技有限公司认为北京奇虎科技有限公司经营的360搜索网站，抄袭了百度站长平台的文档内容和格式，现已诉至北京西城法院要求索赔50万元。百度诉称，百度站长平台于2011年9月16日在百度网站正式上线，其中百度站长平台帮助文档、百度sitemap工具帮助文档是公司创作的，旨在帮助广大第三方网站经营者创建和提交sitemap数据给百度站长平台的参考信息，具有独创性，原告依法对上述两个文档作品享有著作权。2013年1月24日，北京奇虎科技有限公司经营的360搜索网站正式上线，在该平台使用帮助页面中，站长平台栏目项下的sitemap提交文档中，抄袭了百度站长平台帮助对应文档、百度sitemap工具帮助文档的文字内容和格式。原告认为，奇虎公司未经许可、授权，抄袭其创作的文档作品并通过信息网络向公众传播，构成了对原告著作权的侵权，由于原被告双方存在同业竞争，被告的侵权行为给原告造成了巨大经济损失。原告起诉要求被告停止侵权，刊登声明公开赔礼道歉、消除影响并赔偿经济损失50万元。目前，此案正在进一步审理中。</text>
        <image>http://image.techweb.com.cn/upload/2013/0606/1370483732329.jpg</image>
        <keywords>站易建站</keywords>
        <author>杨斌</author>
        <source>互联网</source>
        <pubDate> 2013-06-05 16:22:38</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/product-136.aspx</link>
        <title>Lenovo 联想 扬天 A4602t 台式电脑</title>
        <description>站易建站</description>
        <text>主体品牌Lenovo 联想型号A4602t颜色黑色商品高度41.5 厘米商品宽度17.5 厘米Display Size20 英寸显示最大分辨率1600&amp;times;900处理器CPU生产商IntelCPU运算速度2.9 GHz内存存储技术DDR3硬盘Hard Disk Size1 TB硬盘描述SATA显卡显卡描述集成显卡其它规格Optical Storage Device TypeDVD电源类型180W</text>
        <image>http://ec4.images-amazon.com/images/i/41fulddzvwl._sl500_.jpg</image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-04 09:43:42</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/product-135.aspx</link>
        <title>Lenovo 联想 Yoga13 笔记本电脑</title>
        <description>站易建站</description>
        <text>Lenovo 联想 Yoga13 笔记本电脑(英特尔&amp;reg;酷睿i5-3317U 4G 128G极速固态硬盘 摄像头 蓝牙 HDMI IPS广视角屏幕 支持十点触控 Win8 13.3英寸 日光橙)品牌简介联想是一家营业额近300亿美元的个人科技产品公司，客户遍布全球160多个国家。联想是全球第二大个人电脑厂商，名列《财富》世界500强，为全球前四大电脑厂商中增长最快。自1997年起，联想一直蝉联中国国内市场销量第一，占中国个人电脑市场超过三成份额。凭借创新的产品、高效的供应链和强大的战略执行，联想锐意为全球用户打造卓越的个人电脑和移动互联网产品。集团由联想及前IBM个人电脑事业部所组成，在全球开发、制造和销售可靠、优质、安全易用的技术产品及优质专业的服务。联想产品系列包括Think品牌商用个人电脑、Idea品牌的消费个人电脑、服务器、工作站，以及包括平板电脑、智能手机和智能电视在内的移动互联网终端产品。一流的世界级研发团队分驻于日本大和研究所、中国北京、上海、深圳及美国北卡罗莱纳州的罗利。在中国的北京、上海、成都、惠阳及深圳、印度的庞帝其利(Pondicherry)及墨西哥的蒙特雷(Monterrey)设有个人电脑制造基地，并于全球采用合同制造及OEM。全球员工约27,000名。联想在香港联合交易所上市(香港交易所股份编号：0992)，并且设有美国预托证券在美国进行买卖 (预托证券代码：LNVGY)。公司网站 www.lenovo.com使用说明使用前请仔细阅读说明书。售后信息售后信息标准文案：1.服务网点：联想在全国拥有两千多家服务网点，让用户无论身处何地都能轻松享受联想服务。关于联想服务网点信息点击查看2.联想服务官方微信：联想服务官方微信号为1131390901或LenovoServices(周一至周日9:00-21:00)3.保修政策：全国联保，享受三包服务。关于主机编号查看配置和保修信息详情请点击查看4.最新驱动：关于查看和下载本机的最新驱动点击查看5.客服电话：800-810-8888(9:00-18:00周一至周日)关于客服更多联系方式点击查看6.更多联想售后服务信息：关于联想服务网站点击查看包装清单笔记本主机 *1笔记本电池 *1电源适配器 *1笔记本电脑用户手册 *1电脑保修证书 *1</text>
        <image>http://ec4.images-amazon.com/images/i/41ugio0-5vl._sl500_.jpg</image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-04 09:21:47</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/product-134.aspx</link>
        <title>Apple MD093CH/A iMac 21.5英寸一体机</title>
        <description>站易建站</description>
        <text>商品描述全新 iMac锋锐设计，锋芒表现。令人惊叹的全新 iMac 一体机配备了经过彻底重新构架的 21.5 或 27 英寸的宽显示屏，绚丽出众，反光减少 75%。第三代四核 Intel Core 处理器和超快的 NVIDIA 图形处理器更令其成为性能超群的 iMac。它标配 8GB 内存、1TB 硬盘和先进的高速 I/O 传输技术（包括两个 Thunderbolt 端口和四个 USB 3 端口）。而一切精彩都集于超乎想象的锋锐外壳中，边缘处仅有 5 毫米。主要功能&amp;bull; 夺目的全新设计&amp;bull; 绚丽的宽显示屏经过重新构架，反光减少 75%&amp;bull; 全线配备第三代四核 Intel Core i5 处理器&amp;bull; 新一代 NVIDIA GeForce 图形处理器&amp;bull; 先进的高速 I/O 传输技术包括两个 Thunderbolt 端口、四个 USB 3 端口等&amp;bull; FaceTime HD 高清摄像头&amp;bull; Apple Wireless Keyboard&amp;bull; Apple Magic Mouse&amp;bull; OS X Mountain LionOS X Mountain Lion每台 Mac 都预装了 OS X Mountain Lion 这一了不起的先进操作系统的最新版本。它带来 200 项新功能，令 Mac 比以往更出色，同时让你的 Mac、iPhone、iPad 和 iPod touch 协作得更有默契。OS X Mountain Lion 功能&amp;bull; iCloud 让你的内容在你所有设备上保持更新。&amp;bull; 使用&amp;ldquo;信息&amp;rdquo;app 向 iPhone、iPad、iPod touch 或其他 Mac 的用户发送不限数量的消息。&amp;bull; &amp;ldquo;通知中心&amp;rdquo;为你显示所有提示信息，并且全都归整在一处。&amp;bull; 直接从你当前使用的 app 将内容共享到新浪微博、优酷及土豆网。&amp;bull; 使用直观的 Multi-Touch 手势与你的 Mac 互动。&amp;bull; 通过 Launchpad 和 Mission Control，快速轻松地玩转你的 Mac。法律声明商标及版权所有 &amp;copy; 2013 Apple Inc. 保留所有权利。</text>
        <image>http://ec4.images-amazon.com/images/i/515zwflbjvl._aa1500_.jpg</image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-04 09:16:56</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-133.aspx</link>
        <title>苹果原厂 iPad mini 16g wifi 银白色 港行原封</title>
        <description>站易建站</description>
        <text>温馨提示：本产品为港行苹果原厂原封商品，晴国店铺提供售后或与前往苹果售后店质保；主要功能:产品规格ipad mini wifi版采用802.11a/b/g/n WLAN 网络 (802.11n 时工作在 2.4GHz 和 5GHz) 和Bluetooth 4.0 无线技术；7.9 英寸 (对角线) LED 背光 Multi-Touch；显示屏，具有 IPS 技术 ；1024 x 768 像素分辨率，163 ppi ；采用防油渍防指纹涂层 ；FaceTime HD 高清摄像头120 万像素照片720p HD 高清视频通过 WLAN 网络或蜂窝网络进行 FaceTime 视频通话4面部检测背照式感光轻点控制视频或静态照片的曝光照片和视频地理标记功能iSight 摄像头500 万像素照片自动对焦面部检测背照式感光5 镜式镜头混合红外线滤镜?/2.4 光圈轻点对焦拍摄视频或照片轻点控制视频或静态照片的曝光照片和视频地理标记功视频拍摄1080p HD 高清摄像视频防抖动面部检测摄制过程中轻点对焦背照式感光内置 16.3Whr 可充电锂聚合物电池可持续通过 WLAN 网络浏览网页、观看视频或聆听音乐，长达 10 小时通过电源适配器或电脑 USB 充电三轴陀螺仪加速感应器环境光传感器WLAN 网络数字指南针</text>
        <image>http://ec4.images-amazon.com/images/i/41%2byrkfdl5l.jpg</image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-04 09:03:38</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/soft-132.aspx</link>
        <title>代码编辑器Notepad++ V6.3.2</title>
        <description>站易建站</description>
        <text>【概括介绍】微软视窗环境之下的一个免费的代码编辑器。【基本介绍】Notepad++ 是在微软视窗环境之下的一个免费的代码编辑器。为了产生小巧且有效率的代码编辑器,这个在GPL许可证下的自由软体开发专案采用 win32 api 和 STL 以 C++ 程式语言撰写成,并且选用功能强大的编辑模组 Scintilla。多亏它的轻巧与执行效率,Notepad++ 可完美地取代微软视窗的记事本。【软件特点】①、内置支持多达 27 种语法高亮度显示(囊括各种常见的源代码、脚本，值得一提的是，完美支持 .nfo 文件查看)，也支持自定义语言；②、可自动检测文件类型，根据关键字显示节点，节点可自由折叠/打开，代码显示得非常有层次感！这是此软件最具特色的体现之一；③、可打开双窗口，在分窗口中又可打开多个子窗口，允许快捷切换全屏显示模式(F11)，支持鼠标滚轮改变文档显示比例，等等；④、提供数个特色东东，如 邻行互换位置、宏功能，等等... 现在网上有很多文件编辑器，这个却是不可多得的一款，不论是日常使用还是手写编程代码，都能让你体会到它独有的优势和方便。</text>
        <image>http://img1.2345.com/duoteimg/softimg/soft/10265.jpg?1367583628</image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-04 08:48:15</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/soft-131.aspx</link>
        <title>谷歌浏览器(Google Chrome) V26.0.1410.43 稳定版</title>
        <description>站易建站</description>
        <text>【概括介绍】Google开发的一款设计简单、高效的Web浏览工具。【基本介绍】Google Chrome是由Google开发的一款设计简单、高效的Web浏览工具。Google Chrome的特点是简洁、快速。Google Chrome支持多标签浏览，每个标签页面都在独立的&amp;ldquo;沙箱&amp;rdquo;内运行，在提高安全性的同时，一个标签页面的崩溃也不会导致其他标签页面被关闭。此外，Google Chrome基于更强大的JavaScript V8引擎，这是当前Web浏览器所无法实现的。Google Chrome目前尚处在测试版阶段，在很多方面还需要进一步完善。它是一款开源软件，借鉴了苹果的WebKit(Safari使用的引擎)、Mozilla的Firefox及其他相关应用。Google官方声称将开放Google Chrome的全部源代码。【软件特性】&amp;middot;Chrome浏览器基于开源的Webkit，其中包含谷歌Gears。&amp;middot;Chrome提供了浏览器扩展框架，可以制作与Adobe-AIR类似的混合应用。&amp;middot;包含V8 Javascript虚拟机，这个多线程的虚拟机可以加速Javascript的执行。&amp;middot;具备隐私模式，可以让用户无需在本地机器上登录即可使用，这个功能与微软IE8中的Incognito类似。&amp;middot;浏览器将内置防止&amp;ldquo;网络钓鱼&amp;rdquo;及恶意软件功能。</text>
        <image>http://img1.2345.com/duoteimg/softimg/soft/3221.jpg?1367617139</image>
        <keywords>站易建站</keywords>
        <author>Google</author>
        <source>多特</source>
        <pubDate> 2013-05-04 08:45:36</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/soft-130.aspx</link>
        <title>Adobe Photoshop CS5 (PS) 官方中文正式原版</title>
        <description>站易建站</description>
        <text>【基本介绍】Adobe Photoshop CS5 Extended 是电影、视频和多媒体领域的专业人士, 使用 3D 和动画的图形和 Web 设计人员, 以及工程和科学领域的专业人士的理想选择。呈现 3D 图像并将它合并到 2D 复合图像中。轻松编辑视频图层上的动画图形, 让时间停下来。以及使用测量、计数和可视化工具, 探查您的图像。CS5中最闪亮的明星莫过于Photoshop CS5。作为Adobe的核心产品，Photoshop CS5历来最受关注，Adobe也在去年底发布了其测试版。选择Photoshop CS5的理由不仅仅是它会完美兼容Vista，更重要的是几十个激动人心的全新特性，诸如支持宽屏显示器的新式版面、集20多个窗口于一身的dock、占用面积更小的工具栏、多张照片自动生成全景、灵活的黑白转换、更易调节的选择工具、智能的滤镜、改进的消失点特性、更好的32位HDR图像支持，等等等等。另外，Photoshop从CS5首次开始分为两个版本，分别是常规的标准版和支持3D功能的Extended(扩展)版。【软件特点】1、Photoshop CS5最大的改变是工具箱，变成可伸缩的，可为长单条和短双条。2、工具箱上的快速蒙版模式和屏幕切换模式也改变了切换方法。3、工具箱的选择工具选项中，多了一个组选择模式，可以自己决定选择组或者单独的图层。4、工具箱多了快速选择工具Quick Selection Tool，应该魔术棒的快捷版本，可以不用任何快捷键进行加选， 按往不放可以像绘画一样选择区域，非常神奇。当然选项栏也有新、加、减三种模式可选，快速选择颜色差异大的图像会非常的直观、快捷。5、所有的选择工具都包含重新定义选区边缘(Refine Edge)的选项，比如定义边缘的半径，对比度，羽化程度等等，可以对选区进行收缩和扩充。另外还有多种显示模式可选，比如快速蒙版模式和蒙版模式等，非 常 方便。举例来说，您做了一个简单的羽化，可以直接预览和调整不同羽化值的效果。当然，选择菜单里熟悉 的羽化命令从此退出历史舞台。6、调板可以缩为精美的图标，有点儿像CorelDraw的泊坞窗，或者像Flash的面板收缩状态，不过相比之下这个更酷，两层的收缩，感觉超棒！7、多了一个&amp;ldquo;克隆（仿制）源&amp;rdquo;调板，是和仿制图章配合使用的，允许定义多个克隆源（采样点），就好像Word有多个剪贴版内容一样。另外克隆源可 以进行重叠预览，提供具体的采样坐标，可以对克隆源进行移位缩放、旋转、混合等编辑操作。克隆源可以是针对一个图层，也可以是上下两个，也可以是所有图 层，这比之前的版本多了一种模式。8、在Adobe Bridge的预览中可以使用放大镜来放大局部图像，而且这个放大镜还可以移动，还可以旋转。如果同 时选中了多个图片，还可以一起预览，真是酷毙了。9、Adobe Bridge添加了Acrobat Connect功能，用来开网络会议的，前身是Macromedia的降将Breeze。10、Bridge可以直接看Flash FLV格式的视频了，另外Bridge启动感觉好快，比CS2和CS两个版本都要快，没有任 何拖累感和&amp;ldquo;死机感&amp;rdquo;。11、在Bridge中，选中多个图片，按下Ctrl+G可以堆叠多张图片，当然随时可以单击展开，这个用来节省空间12、新建对话框添加了直接建立网页、视频和手机内容的尺寸预设值。比如常用的网页Banner尺寸，再比如常见的手机屏幕尺寸等等&amp;hellip;&amp;hellip;</text>
        <image>http://img1.2345.com/duoteimg/softimg/soft/808.jpg?1367627348</image>
        <keywords>站易建站</keywords>
        <author>Adobe</author>
        <source>多特</source>
        <pubDate> 2013-05-04 08:40:03</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/soft-129.aspx</link>
        <title>WPS Office 2012 V8.1.0.3405 抢鲜版</title>
        <description>站易建站</description>
        <text>【概括介绍】金山出品的免费Office办公软件。【基本介绍】WPS Office是一款老牌的办公软件套装，可以实现办公软件最常用的文字、表格、演示等多种功能。内存占用低，运行速度快，体积小巧。具有强大插件平台支持，免费提供海量在线存储空间及文档模板，支持阅读和输出PDF文件，全面兼容微软Office97-2010格式（doc/docx/xls/xlsx/ppt/pptx等）。WPS 2012的三大产品线：办公软件，金山演示和金山表格软件的LOGO分别是W、P、S，他们重新构成了金山的LOGO&amp;mdash;&amp;mdash;WPS。【软件特点】自定义快速访问工具栏2012界面支持工具栏自定义，操作更自由功能入口：2012界面，快速访问工具栏新增界面配色新增界面配色，界面换装更自由。功能入口：2012界面，程序右上角&amp;ldquo;更改界面&amp;rdquo;图标经典界面，常用工具栏&amp;ldquo;更改界面&amp;rdquo;图标备份管理改进备份管理，更易找到异常退出文档功能入口：2012界面，文件菜单 | &amp;ldquo;备份管理&amp;rdquo;经典界面，快捷键：Ctrl+F1，打开窗格，切换到备份管理演示转文字格式新增WPS演示转换为WPS文字格式功能功能入口：2012界面：文件菜单 | 另存为 | 转为WPS文字文档幻灯片缩略图-点击鼠标右键-转为WPS文字文档添加水印功能可添加水印，还可自定义水印样式。功能入口：2012界面，&amp;ldquo;插入&amp;rdquo;选项卡 | &amp;ldquo;水印&amp;rdquo;经典界面，&amp;ldquo;插入&amp;rdquo;菜单 | &amp;ldquo;水印&amp;rdquo;支持文档并排比较并排窗口，支持同步滚动，比较文档更方便功能入口：2012界面，&amp;ldquo;视图&amp;rdquo;选项卡 | &amp;ldquo;并排窗口&amp;rdquo;函数分类。函数分类展示，方便查找函数功能入口：2012界面，&amp;ldquo;公式&amp;rdquo;选项卡 | &amp;ldquo;函数库&amp;rdquo;功能区WPS表格快速选择当前列内容WPS表格中，右键快速选择当前列已输入过的内容功能入口：单击鼠标右键 | 从下拉列表中选择改进用户反馈WPS文字任务栏实时查看文档字数连续输入3个=、-、~，按回车，直接产生相应分隔线新增快捷键：Shift+F5定位到上次关闭文档时的光标所在位置优化表格对象上4个浮动控件图标样式及调整行列时分隔线颜色</text>
        <image>http://img1.2345.com/duoteimg/softimg/soft/42909.jpg?1367585663</image>
        <keywords>站易建站</keywords>
        <author>金山软件</author>
        <source>多特</source>
        <pubDate> 2013-05-04 08:35:14</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/soft-128.aspx</link>
        <title>2345好压解压缩软件 V3.2 Build 9263 正式版</title>
        <description>站易建站</description>
        <text>【概括介绍】完全免费的新一代压缩软件。【基本介绍】2345好压压缩软件(HaoZip)是强大的压缩文件管理器，是完全免费的新一代压缩软件，相比其它压缩软件占用更少的系统资源用，有更好的兼容性，压缩率比较高！它提供了对ZIP、7Z和TAR文件的完整支持，能解压RAR、JAR、XPI、BZ2、BZIP2、TBZ2、TBZ、GZ、GZIP、TGZ、TPZ、LZMA、Z、TAZ、LZH、LZA、WIM、SWM、CPIO、CAB、ISO、ARJ、XAR、RPM、DEB、DMG、HFS等多达49种格式文件，这是同类软件无法比拟的！2345好压压缩软件(HaoZip)的功能包括强力压缩、分卷、加密、自解压模块、智能图片转换、智能媒体文件合并等功能。完美支持鼠标拖放及外壳扩展！2345好压压缩软件(HaoZip)使用非常简单方便，配置选项不多，仅在资源管理器中就可以完成你想做的所有工作，并且具有估计压缩功能，你可以在压缩文件之前得到用ZIP、7Z两种压缩工具各三种压缩方式下的大概压缩率；还有强大的历史记录能；而资源占用相对较少，强大的固实压缩、智能图片压缩和多媒体文件处理功能是大多压缩工具所不具备的。【软件特点】一.卓越的压缩体验压缩率更高经过多次试验证明，2345好压压缩软件的压缩效果一般要比同类压缩软件高出10%～30%的压缩率！ 独创过滤列表独创的压缩文件过滤列表，智能处理压缩比不高的文件，大幅提高了压缩速度！ 针对多媒体文件有独特的智能算法2345好压压缩软件(HaoZip)还提供了可选择的、针对多媒体数据的智能压缩算法。减少您压缩的时间！ 鼠标自由拖拽执行压缩解压支持目录树/文件浏览界面相互拖拽，执行如压缩，解压，复制等常用的操作, 显著提高了工作效率！二.优秀的兼容性能解压多种格式的压缩包2345好压压缩软件(HaoZip)可以支持 RAR、ARJ、CAB、LZH、ACE、GZ、UUE、BZ2、JAR、ISO 等多达49种算法和类型文件的解压，远超同类其他压缩软件支持的解压格式，通用性更强！ 能完善地支持ZIP、7Z 和 TAR 格式2345好压压缩软件(HaoZip)不需外挂程序支持就可直接建立ZIP、7Z 和 TAR 格式的压缩文件，所以我们不必担心离开了WinZIP 如何处理 ZIP 格式的问题。并且支持zip格式最新标准，完美解决了zip格式压缩4GB以上大文件的问题； 优秀的兼容性2345好压压缩软件(HaoZip)支持win2000以上全部32/64位系统，并且完美支持windows 7； 卓越的通用性2345好压完全支持行业标准，使用2345好压软件生成的压缩文件，同类软件仍可正常识别，保证了通用性！三.强大的压缩辅助功能对受损压缩文件的修复能力极强网上下载的压缩包往往因头部受损的问题导致不能打开，而使用2345好压后，只须单击界面中的&amp;ldquo;修复&amp;rdquo;按钮就可轻松修复，成功率极高！ 针对7Z格式独创注释功能2345好压压缩软件(HaoZip)针对7z格式，独创了7z文件注释功能，并与同类软件保持良好的兼容性！ 支持MD5码校验2345好压压缩软件(HaoZip)支持文件md5编码，可以让你方便的核对文件的MD5码工业标准 AES-256 加密！ 能生成论坛专用分卷使用分卷压缩时，可以勾选&amp;ldquo;生成论坛专用分卷&amp;rdquo;，解决论坛上传限制只能是后缀名 .zip 或 .7z的局限。 提供多种文件处理小工具2345好压压缩软件(HaoZip)提供了字符替换，文件批量重命名等众多实用工具，让您管理文件更方便！ 能建立多种方式的自解包我们知道不能建立多卷自解包是WinZIP的一大缺陷，而2345好压压缩软件(HaoZip)处理这种工作却是游刃有余，而且对自解包文件还可加上密码加以保护！四.更个性、更安全炫酷皮肤选择您可以个性化定义2345好压压缩软件图标，皮肤样式，让您的压缩软件界面与众不同，独一无二！ 压缩配置自由选择，支持导入导出2345好压压缩软件(HaoZip)配置选项简单易懂，操作便捷，只需三秒即可配置完成，并且支持配置的导入导出！ 支持汉字的全方位加密方式2345好压压缩软件支持汉字加密，安全性更高！ 压缩痕迹自动清除自主清理程序，删除操作记录，帮助您提升电脑速度，保护个人隐私，节省存储空间。 无广告永久免费2345好压压缩软件(HaoZip)没有任何插件，无广告，永久免费，安全高效，您可以放心使用！ 在线升级功能2345好压压缩软件(HaoZip)拥有在线升级功能，第一时间让你使用到更多的新功能！【更新日志】2345好压解压缩软件 V3.2 Build 9263 正式版更新：1、提升ISO格式兼容性，修复部分蓝光格式解压崩溃的问题。2、优化MD5校验，对比时忽略大小写。3、优化压缩自解压文件，重名时自动重命名。4、修正win7中部分机器启动不了好压的bug。5、修正虚拟光驱会被拦截安装失败的问题。6、修正解压缩图片时显示磁盘不足的问题。7、优化图片浏览推荐方式，用户体验提升。</text>
        <image>http://img1.2345.com/duoteimg/softimg/soft/3384.jpg</image>
        <keywords>站易建站</keywords>
        <author>好压</author>
        <source>多特</source>
        <pubDate> 2013-05-04 08:29:49</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/soft-127.aspx</link>
        <title>美图秀秀 V3.8.1 多特专版拥有一键P图 美容 场景 超炫闪图等强大功能</title>
        <description>站易建站</description>
        <text>【概括介绍】好用且非常流行的的国产免费图片处理软件。软件的操作和程序相对于专业图片处理软件如光影魔术手、Photoshop比较简单。【基本介绍】中国最流行的图片软件&amp;mdash;&amp;mdash;美图秀秀是一款很好用的免费图片处理软件，不用学习就会用，比PS简单100倍！美图秀秀独有的图片特效、美容、拼图、场景、边框、饰品等功能，加上每天更新的精选素材，可以让你1分钟做出影楼级照片！美图秀秀支持一键发到新浪微博、人人网、腾讯微博&amp;hellip;&amp;hellip;已有8000万人正在使用美图秀秀，你还没安装吗？赶快下载试试吧！获得奖项：更新内容：软件介绍：中国最流行的图片软件&amp;mdash;&amp;mdash;美图秀秀是一款很好用的免费图片处理软件，不用学习就会用，比PS简单100倍！美图秀秀独有的图片特效、美容、拼图、场景、边框、饰品等功能，加上每天更新的精选素材，可以让你1分钟做出影楼级照片！美图秀秀支持一键发到新浪微博、人人网、腾讯微博&amp;hellip;&amp;hellip;已有8000万人正在使用美图秀秀，你还没安装吗？赶快下载试试吧！【美图秀秀 3.8.1 六大亮点】1．不需要基础的P图软件&amp;ldquo;美图秀秀&amp;rdquo;界面直观，操作简单，比同类软件更好用。每个人都能轻松上手，从此做图不求人。2．神奇的人像美容功能独有磨皮祛痘、瘦脸、瘦身、美白、眼睛放大等多种强大美容功能，让用户轻松拥有天使面容。3．风格各异的图片特效拥有时下最热门、最流行的图片特效，不同特效的叠加令图片个性十足。4．随心所欲的拼图功能自由拼图、模版拼图、图片拼接三种经典拼图模式，多张图片一次晒出来。5. 专属动感图片DIY轻松几步制作个性GIF动态图片、搞怪QQ表情，精彩瞬间动起来。6．囊括主流分享渠道一键将美图分享至新浪微博、腾讯微博、人人网&amp;hellip;&amp;hellip;即时与好友分享美好生活。【更新日志美图秀秀 V3.8.1 多特专版1.艺术分类新增&amp;ldquo;蜡笔&amp;rdquo;特效2.艺术分类新增&amp;ldquo;漫画&amp;rdquo;特效3.优化拼图体验4.新增海报拼图功能</text>
        <image>http://img1.2345.com/duoteimg/softimg/soft/14700.jpg</image>
        <keywords>站易建站</keywords>
        <author>美图秀秀</author>
        <source>多特软件站</source>
        <pubDate> 2013-05-04 08:22:02</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-126.aspx</link>
        <title>乔布斯：遗失的访谈_中英双语字幕版</title>
        <description>站易建站</description>
        <text>乔布斯：遗失的访谈_中英双语字幕版</text>
        <image>http://res.mfs.ykimg.com/05010000518390126714c049f4090b9e</image>
        <keywords>站易建站</keywords>
        <author>七印部落</author>
        <source>优酷</source>
        <pubDate> 2013-05-04 00:34:49</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-125.aspx</link>
        <title>强悍女最牛砍价 征服店主</title>
        <description>站易建站</description>
        <text>服装店老板遭遇超牛屌丝女疯狂砍价</text>
        <image>http://vi0.ku6img.com/data1/p2/ku6video/2013/3/11/14/1368212091138_46113552_46113552/8.jpg</image>
        <keywords>站易建站</keywords>
        <author>ku6网友</author>
        <source>ku6</source>
        <pubDate> 2013-05-04 00:26:44</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-124.aspx</link>
        <title>微電影【回到舊堀江 The Dream Of Kuchan】</title>
        <description>站易建站</description>
        <text>一個老人運用科技想回到過去尋找他的初戀情人..主演：林維彥導演：簡辰帆製片：林家宇攝影：楊秉儒燈光：徐得家</text>
        <image>http://choppers-jp.com/wp-content/uploads/2012/01/news_large_ktv_boogiedays021.jpg</image>
        <keywords>站易建站</keywords>
        <author>老地方工作室</author>
        <source>土豆</source>
        <pubDate> 2013-05-04 00:21:48</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-123.aspx</link>
        <title>泰国纯爱小清新:初恋这件小事</title>
        <description>站易建站</description>
        <text>《初恋这件小事》讲述的是一个小小的初恋故事：小水是一位初中一年级最最平凡小女孩，她的功课一般，体育也一般，更要命的是她的长相平凡得让人过目就忘。但这位平凡的女孩偏偏爱上了学校中最优秀，最善良，也最帅气的高一男生阿亮。身为校园中的风云人物，阿亮从来就是女孩们的焦点，无论是功课好的，体育优的，还是长得美的，全校的女生都为他疯狂。小水明白自己根本无法与那些优秀的女孩们竞争，她从不奢望自己能和阿亮交往，她只有一个小小的愿望，那就是阿亮经过她的身边时，能回头看她一眼。于是她做了很多傻傻的小事，只为吸引他的目光。她不惜在晚会中扮丑只为听到阿亮的笑声；申请加入舞蹈社却在筛选时被学长羞辱；练习吹奏管乐只为能靠阿亮再近一点。这些小小的努力让她在初三之时成为学校名副其实的风云人物。她变成了男孩们眼中最可爱，最温柔，和最值得追的校花级女孩。但小水心中依然收藏着她那小小的愿望......</text>
        <image>http://i.gtimg.cn/qqlive/images/20130503/i1367550380_1.jpg</image>
        <keywords>站易建站</keywords>
        <author>腾讯</author>
        <source>互联网</source>
        <pubDate> 2013-05-04 00:19:08</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-122.aspx</link>
        <title>七朵组合《落花情》舞蹈练习室</title>
        <description>站易建站</description>
        <text>[56红人馆：七朵组合 ]《落花情》，继《咏春》之后诚心之作，四季主题首播单曲，以悲悸动华丽开篇~《落花情》舞蹈练习室，不同于&amp;ldquo;咏春&amp;rdquo;中的简洁轻快，落花情舞蹈中包含大量的手部动作，将&amp;ldquo;流水`、`落花`的意境添加其中，通过更多细节动作，将花的多彩，水的灵动一一展现，更显整支舞蹈的细腻和柔婉，也更为跳跃，更富有层次。由于舞蹈动作更为细致繁复，整体掌控更难，对于团体要求也更为严苛，而七朵经历近一年的磨练，歌曲演绎及舞蹈掌握日渐成熟，对于整支&amp;rdquo;落花情&amp;ldquo;舞蹈的掌控也驾轻就熟。</text>
        <image>http://c1.56img.com/huodong/14/12/index_support_20130503101053_61057.jpg</image>
        <keywords>站易建站</keywords>
        <author>七朵组合</author>
        <source>56</source>
        <pubDate> 2013-05-04 00:16:16</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-121.aspx</link>
        <title>感人电影：忠犬八公的故事</title>
        <description>站易建站</description>
        <text>理察-基尔饰演的大学教授帕克在小镇在车站上偶遇一只可怜的小秋田犬，它孤苦无依的身影惹起他的怜 悯，虽然妻子（琼-艾伦饰）极力反对，并想尽办法要把它送走，但看到丈夫和女儿对它无微不至照顾和由衷喜爱，终于决定让它成为家庭一员，帕克为它取名&amp;ldquo;八公&amp;rdquo;。</text>
        <image>http://i1.itc.cn/20130423/2f4b_4aca7ce7_355f_ad63_8c3f_9ec2865a01f2_1.jpg</image>
        <keywords>站易建站</keywords>
        <author>互联网</author>
        <source>互联网</source>
        <pubDate> 2013-05-04 00:13:04</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-120.aspx</link>
        <title>Lenovo 联想 Y400 笔记本电脑(英特尔®Ivy Bridge酷睿i5-3230M )</title>
        <description>站易建站</description>
        <text>主体品牌Lenovo 联想型号Y400颜色灰色Display Size14 英寸处理器CPU生产商IntelCPU运算速度2.6 GHz内存存储技术DDR3硬盘Hard Disk Size1 TB硬盘描述SATA显卡Graphics CoprocessorGT750M显示芯片品牌NVIDIA显卡描述独立显卡图形随机尺寸 1 - 图形随机尺寸 22 GB其它规格电源类型100~240V宽电压电源适配器操作系统Windows 8电池类型高性能6芯锂离子电池电池包装类型电池是包含在该商品的包装内，但没有装配在该商品内商品描述商品描述Lenovo 联想 Y400 笔记本电脑(英特尔&amp;reg;Ivy Bridge酷睿i5-3230M 4G 1TB 2G独显 DVD刻录 摄像头 HDMI Win8 14英寸)品牌简介联想是一家营业额近300亿美元的个人科技产品公司，客户遍布全球160多个国家。联想是全球第二大个人电脑厂商，名列《财富》世界500强，为全球前四大电脑厂商中增长最快。自1997年起，联想一直蝉联中国国内市场销量第一，占中国个人电脑市场超过三成份额。凭借创新的产品、高效的供应链和强大的战略执行，联想锐意为全球用户打造卓越的个人电脑和移动互联网产品。集团由联想及前IBM个人电脑事业部所组成，在全球开发、制造和销售可靠、优质、安全易用的技术产品及优质专业的服务。联想产品系列包括Think品牌商用个人电脑、Idea品牌的消费个人电脑、服务器、工作站，以及包括平板电脑、智能手机和智能电视在内的移动互联网终端产品。一流的世界级研发团队分驻于日本大和研究所、中国北京、上海、深圳及美国北卡罗莱纳州的罗利。在中国的北京、上海、成都、惠阳及深圳、印度的庞帝其利(Pondicherry)及墨西哥的蒙特雷(Monterrey)设有个人电脑制造基地，并于全球采用合同制造及OEM。全球员工约27,000名。联想在香港联合交易所上市（香港交易所股份编号：0992），并且设有美国预托证券在美国进行买卖 (预托证券代码：LNVGY)。公司网站 www.lenovo.com使用说明使用前请仔细阅读说明书。售后信息售后信息标准文案：1.服务网点：联想在全国拥有两千多家服务网点，让用户无论身处何地都能轻松享受联想服务。关于联想服务网点信息点击查看2.联想服务官方微信：联想服务官方微信号为1131390901或LenovoServices（周一至周日9:00-21:00）3.保修政策：全国联保，享受三包服务。关于主机编号查看配置和保修信息详情请点击查看4.最新驱动：关于查看和下载本机的最新驱动点击查看5.客服电话：800-810-8888（9:00-18:00周一至周日）关于客服更多联系方式点击查看6.更多联想售后服务信息：关于联想服务网站点击查看包装清单笔记本主机 *1笔记本电池 *1电源适配器 *1笔记本电脑用户手册 *1电脑保修证书 *1</text>
        <image>http://ec4.images-amazon.com/images/i/41hmgwx-cxl._sl500_.jpg</image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-03 23:46:21</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-119.aspx</link>
        <title>Canon 佳能 EOS 650D 数码单反套机(EFs 18-55mm/f3.5-5.6ISII镜头)</title>
        <description>站易建站</description>
        <text>Canon 佳能 EOS 650D 数码单反套机(EFs 18-55mm/f3.5-5.6ISII镜头)最高约5张/秒高速连拍与直观触控EOS 650D追求小型轻量、易操作，搭载媲美中级机型的先进功能。有效像素约1800万新型CMOS图像感应器与新DIGIC 5数字影像处理器实现了高画质、高感光度低噪点。中央八向双十字全9点十字型自动对焦+最高约5张/秒的高速连拍带来出色捕捉力，不错过决定性快门时机。EOS系列首次搭载支持触控的可旋转液晶监视器。融合高捕捉力与便捷触控的EOS 650D引领轻松摄影新时代。高画质 - 新型CMOS图像感应器与新DIGIC 5实现高画质、高感光度、低噪点新DIGIC 5数字影像处理器对新开发约1800万像素CMOS图像感应器输出的高品质数据进行高速、高画质的图像处理。高像素带来细致表现力和平滑的层次表现。常用感光度ISO 100-12800，扩展时可设置为ISO 25600拍摄。降噪效果出色，高感光度拍摄也能得到清晰的高画质。捕捉力 - 中央八向双十字全9点十字型自动对焦+最高约5张/秒的高速连拍针对数码单反相机光学取景器拍摄、实时显示拍摄、短片拍摄的多样化发展，EOS 650D综合强化了自动对焦性能。具备中央八向双十字全9点十字型自动对焦、Hybrid CMOS AF、短片伺服自动对焦等功能，在多种场景中都能准确捕捉被摄体。智慧 - 识别拍摄场景和被摄体，拍摄理想照片的先进功能搭载&amp;ldquo;EOS场景分析系统&amp;rdquo;。高速高性能的DIGIC 5数字影像处理器以高性能的&amp;ldquo;63区双层测光感应器&amp;rdquo;等相机内各感应器的信息为基础，对被摄体状况进行综合分析，根据分析结果控制多项功能的自动化，得到适合的拍摄设置。操作性 - 可旋转触控液晶监视器使拍摄更自由EOS系列首次搭载对应触摸操作的液晶监视器。只需用手指触摸想要合焦的位置即可对焦拍摄。通过触摸还能快速进行回放和拍摄设置的操作。像智能手机那样直观、顺畅的操作性实现了更轻松便捷的拍摄。创造性 - 拍摄中或拍摄后，追求作品效果的各种功能没有三脚架也能手持拍摄夜景的&amp;ldquo;手持夜景&amp;rdquo;模式和逆光等场景下补偿高光溢出、暗部缺失的&amp;ldquo;HDR逆光控制&amp;rdquo;模式等丰富功能，可以帮助用户轻松挑战严苛拍摄条件。为所拍图像添加多种效果的创意滤镜等激发拍摄者创造性的功能也很充实。短片拍摄 - 在影片拍摄中可以进行自动对焦追踪的全高清画质EOS短片美丽虚化、纯净的高感光度画质、丰富EF镜头群带来多彩影像表现的EOS短片更加进化。新搭载了短片拍摄期间可进行自动对焦追踪的短片伺服自动对焦功能，拓展了数码单反相机的影像世界。拓展性 - EOS系统的充实附件使用超过60款的高画质高性能EF镜头群、闪光量和传输方式多样的闪光灯等丰富EOS系统附件，可实现更高级拍摄。包装清单详细参数类型 具有内置闪光灯的自动对焦/自动曝光单镜头反光式数码相机记录媒体 SD存储卡、SDHC存储卡、SDXC存储卡* 兼容UHS-I图像感应器尺寸 约22.3x14.9毫米兼容镜头 佳能EF系列镜头（包括EF-S系列镜头）（35毫米换算焦距约为镜头焦距的1.6倍）镜头卡口 佳能EF卡口图像感应器类型 CMOS图像感应器有效像素 约1800万像素长宽比 3:2除尘功能 自动、手动、添加除尘数据记录系统记录格式 相机文件系统设计规则2.0（Design rule for Camera File System 2.0）图像类型 JPEG、RAW （14位，佳能原创）可以同时记录RAW+JPEG大记录像素L（大）：约1790万像素（5184 x 3456）M（中）：约800万像素（3456 x 2304）S1（小1）：约450万像素（2592 x 1728）S2（小2）：约250万像素（1920 x 1280）S3（小3）：约35万像素（720 x 480）RAW ：约1790万像素（5184 x 3456）拍摄期间的图像处理照片风格 自动、标准、人像、风光、中性、可靠设置、单色、用户定义1-3基本+ 按选择的氛围效果拍摄，根据照明或场景类型拍摄白平衡 自动、预设（日光、阴影、阴天、钨丝灯、白色荧光灯、闪光灯）、用户自定义具备白平衡矫正和白平衡包围曝光功能* 具备闪光色温信息传输降噪 可应用于长时间曝光和高ISO感光度拍摄自动图像亮度矫正 自动亮度优化高光色调优先 具备镜头像差校正 周边光量校正、色差校正取景器类型 眼平五面镜视野率 垂直/水平方向约为95%（眼点约为19毫米）放大倍率 约0.85倍（-1 m-1，使用50mm镜头对无限远处对焦）眼点 约19毫米（自目镜透镜中央起-1 m-1）内置屈光度调节 约-3.0 ～ +1.0 m-1（dpt）对焦屏 固定式、精确磨砂反光镜 快回型景深预览 具备自动对焦类型 TTL辅助影像重合，相位检测自动对焦点 9点（全部为对应F5.6的十字型，中央为对应F2.8的双十字型自动对焦）对焦亮度范围 EV -0.5 ～ 18 （23 ℃、ISO 100）对焦模式 单次自动对焦、人工智能伺服自动对焦、人工智能自动对焦、手动对焦自动对焦辅助光 由内置闪光灯发出的短促连续闪光曝光控制测光模式63区TTL全开光圈测光・评价测光（与所有自动对焦点联动）・局部测光（取景器中央约9%的面积）・点测光（取景器中央约4%的面积）・中央重点平均测光测光范围 EV 1 - 20（23℃、使用EF 50mm f/1.4 USM镜头、ISO 100）曝光控制程序自动曝光（场景智能自动、闪光灯禁用、创意自动、人像、风光、微距、运动、夜景人像、手持夜景、HDR逆光控制、程序）、快门优先自动曝光、光圈优先自动曝光、手动曝光ISO感光度（推荐的曝光指数）基本拍摄区模式：在ISO 100 - 6400之间自动设置*人像：ISO 100、手持夜景：在ISO 100- 12800之间自动设置创意拍摄区模式：在ISO 100 - 12800之间手动设置（1级为单位）、自动在ISO 100 - 6400之间设置、ISO自动时可设置最大ISO感光度、或ISO扩展为&amp;ldquo;H&amp;rdquo;（相当于ISO 25600）曝光补偿手动：在&amp;plusmn;5级间以1/3或1/2级为单位调节自动包围曝光：在&amp;plusmn;2级间以1/3或1/2级为单位调节（可与手动曝光补偿组合使用）自动曝光锁 自动：在使用评价测光的单次自动对焦模式下合焦时应用手动：通过自动曝光锁按钮快门类型 电子控制焦平面快门快门速度 1/4000至1/60秒（场景智能自动模式）、闪光同步速度为1/200秒（使用广角镜头时，快门速度可能为1/60秒以下或更低）1/4000至30秒、B门（总快门速度范围。可用范围随拍摄模式各异）闪光灯内置闪光灯可收回、自动弹起式闪光灯闪光指数：约13（ISO 100，以米为单位）闪光覆盖范围：约17mm镜头视角回电时间约3秒具备无线主控功能外接闪光灯 EX系列闪光灯（能用相机设置闪光灯功能）闪光测光 E-TTL II自动闪光闪光曝光补偿 &amp;plusmn;2级间以1/3或1/2级为单位调节闪光曝光锁 具备PC端子 无驱动系统驱动模式 单拍、连拍、10秒延时或2秒延时自拍以及10秒延时连拍连拍速度 最高约5张/秒最大连拍数量JPEG大/优：约22张（约30张）RAW：约6张（约6张）RAW+JPEG大/优：约3张（约3张）* 数字基于使用8GB存储卡的佳能测试标准（ISO 100和&amp;ldquo;标准&amp;rdquo;照片风格）* 括号中的数值适用于基于佳能测试标准的UHS-I兼容8GB存储卡实时显示拍摄长宽比设置 3:2、4:3、16:9、1:1对焦方式 Hybrid CMOS AF（面部+追踪、自由移动多点、自由移动1点）、相差检测方式（快速模式）手动对焦（可进行约5倍、10倍放大确认）触摸快门 具备连续自动对焦 具备测光模式 使用图像感应器进行评价测光（315区）、局部测光（实时显示画面的约8.8%）、点测光（实时显示画面的约2.8%）、中央重点平均测光测光范围 EV 0 ～ 20 （23℃、使用EF 50mm f/1.4 USM镜头、ISO 100）显示网格线 两种类型短片拍摄短片压缩 MPEG-4 AVC/H.264可变（平均）比特率音频记录格式 线性PCM记录格式 MOV记录尺寸和帧频1920x1080（全高清）：30p/25p/24p1280x720（高清）：60p/50p640x480（标清）：30p/25p* 30p：29.97帧/秒，25p：25.00帧/秒，24p：23.976帧/秒，60p：59.94帧/秒，50p：50.00帧/秒文件尺寸1920x1080（30p/25p/24p）：约330MB/分钟1280x720（60p/50p）：约330MB/分钟640x480（30p/25p）：约82.5MB/分钟对焦方式 Hybrid CMOS AF（面部+追踪、自由移动多点、自由移动1点）手动对焦（可进行约5倍、10倍放大确认）伺服自动对焦 具备测光模式 使用图像感应器进行中央重点平均测光和评价测光* 由对焦模式自动设置测光范围 EV 0 - 20 （23℃、使用EF 50mm f/1.4 USM镜头、ISO 100）曝光控制 短片用程序自动曝光和手动曝光曝光补偿 在&amp;plusmn;3级间以1/3级为单位调节（静止图像为&amp;plusmn;5级）ISO感光度（推荐的曝光指数）使用自动曝光拍摄时：自动在ISO 100 - 6400之间设置使用手动曝光拍摄时：自动/手动在ISO 100 - 6400之间设置、可扩展到&amp;ldquo;H&amp;rdquo;（相当于ISO 12800）视频快照 可设置为2秒/4秒/8秒录音具备内置立体声麦克风外接立体声麦克风端子可调节录音电平、具备风声抑制功能、具备衰减器功能显示网格线 两种类型液晶监视器类型 TFT彩色液晶监视器监视器尺寸和点数 宽屏，3.0&amp;quot;（3:2），约104万点角度调节 可以亮度调节 手动（7级）界面语言 25种（含简体中文）触摸屏技术 静电容量方式功能介绍 可显示回放图像显示格式 单张图像显示、单张图像+信息显示（基本信息、拍摄信息、柱状图）、4张图像索引、9张图像索引、可旋转图像放大显示 约1.5 倍 - 10倍图像浏览方法 单张图像、跳转（按10或100张图像、拍摄日期、文件夹、短片、静止图像、评分）高光警告 曝光过度的高光区域闪烁评分 具备短片回放 允许（液晶监视器、视频/音频输出、HDMI输出）内置扬声器图像保护 可以幻灯片播放 全部图像、以日期、文件夹、短片、静止图像或评分可选择5种过渡效果背景音乐 可以为幻灯片播放和短片回放选择图像的后期处理创意滤镜 颗粒黑白、柔焦、鱼眼效果、油画效果，水彩画效果、玩具相机效果、微缩景观效果调整尺寸 可以直接打印兼容打印机 兼容PictBridge的打印机可打印图像 JPEG和RAW图像打印命令 兼容DPOF1.1版自定义功能自定义功能 8种注册我的菜单 具备版权信息 可输入和包含该信息接口音频/视频输出/数码端子 模拟视频（与NTSC/PAL兼容）/立体声音频输出用于计算机通讯和直接打印（相当于Hi-Speed USB）HDMI mini 输出端子 C型（自动切换分辨率）、CEC兼容外接麦克风输入端子 3.5毫米直径立体声微型插孔遥控端子 用于快门线RS-60E3无线遥控 遥控器RC-6电源电池 电池LP-E8 （1节）* 可以通过交流电适配器套装ACK-E8使用交流电* 安装电池盒兼手柄BG-E8时，可以使用5号（AA/LR6）电池电池拍摄能力（基于CIPA测试标准）使用取景器拍摄：23℃时约440张、0℃时约400张使用实时显示拍摄：23℃时约180张、0℃时约150张短片拍摄时间23℃时约1小时40分钟0℃时约1小时20分钟（使用充满电的电池LP-E8）尺寸和重量尺寸（宽&amp;times;高&amp;times;厚） 约133.1 x 99.8 x 78.8毫米重量 约575克（CIPA方针）约520克（仅机身）操作环境工作温度范围 0 ℃ ～ 40℃工作湿度范围 85％或更小电池LP-E8类型 可充电锂电池额定电压 7.2 V DC电池容量 1120毫安时工作温度范围 充电期间：6 ℃ ～ 40℃拍摄期间：0 ℃ ～ 40℃工作湿度范围 85％或更小尺寸（宽&amp;times;高&amp;times;厚） 约37.1 x 15.4 x 55.2毫米重量 约52克电池充电器LC-E8C兼容电池 电池LP-E8充电时间 约2个小时（23℃时）输入电压 100 - 240 V AC（50/60 Hz）输出电压 8.4 V DC/720m A工作温度范围 6 ℃ ～ 40℃工作湿度范围 85％或更小尺寸（宽&amp;times;高&amp;times;厚） 约69&amp;times;28&amp;times;87.5毫米重量 约82克使用说明使用前请仔细阅读说明书。供电电源的电压必须与本产品上所述的一致。</text>
        <image>http://ec4.images-amazon.com/images/i/41k2w0av3%2bl._sl500_.jpg</image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-03 23:33:05</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-118.aspx</link>
        <title>转让个人99新超频新款ThinkPad四核全国联保笔记本,本本装有鲁大师检测工具</title>
        <description>站易建站</description>
        <text>主要配置： 酷睿i7 / 8G内存 / 500GB硬盘 / 14英寸屏幕 / 双显卡 正常使用没有出过任何问题。本本配置很高，质量很稳定，还在保修内。全国联保，绝对让你没有后顾之忧。14.1寸LED高清晰透亮屏，看着很保护眼睛；独有的高触感悬浮式键盘。炫耀黑色金属观看上去时尚大方高贵。转让原因：主要还是个人原因吧!联想高端处理器24.80GHz内存8G支持升级到16G高速硬盘1OOOG 14寸高清晰屏幕电池使用5个小时以上dvd刻录光驱，系统自带作曲，绘画等软件功能能非常丰富双显卡切换（独立＋集成） NVIDIA Quadro NVS 3100M＋Intel GMA HD显卡，2G玩游戏作图都畅通无比 可根据个人需求切换，已充分发挥电脑的性能。翻遍二手市场你也找不到如高性价比的笔记本,不要犹豫赶紧联系</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-03 23:06:11</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-117.aspx</link>
        <title>上海地区招聘高级网页设计师</title>
        <description>站易建站</description>
        <text>岗位职责简述：1．负责客户网站和公司网站的视觉创意；2．负责前台页面设计制作,并优化精简静态网页代码；3．积极配合网站开发工程师,完成相关任务。岗位要求：1．具有良好的审美，独特的创意，有扎实美术功底，能良好运用色彩搭配,有较强的平面设计和网页设计创意能力；2．精通html、div+css、javascript能够独立完成网站的规划和静态页面制作,实现网页特效,页面制作符合W3C标准；3．精通Photoshop、Fireworks、dreamweaver、Flash等网页设计与图形设计软件；4．熟悉网页(UE)者优先；5．良好的团队合作精神,有较强的自学能力及吃苦耐劳的工作精神；6．有优秀的沟通能力，理解并善于表现要传达的理念；7．工作认真负责,积极乐观,有较强亲和力；8．应聘者需大专以上学历,具备两年以上的工作经历。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-03 23:05:47</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-116.aspx</link>
        <title>山西地区招聘网站编辑</title>
        <description>站易建站</description>
        <text>岗位职责：1．负责网站内容编辑与更新；2. 负责文档撰写、归类、整理；岗位要求：1．大学本科及以上学历，且写作能力优良；2．熟悉HTML；3．熟练操作dreamweaver、(photoshop/fireworks)二者之一、office系列办公软件；4．熟练应用互联网查找资料,文字录入速度不低于70字/分钟；；5．善于学习,具有良好的文字功底；6．热爱互联网工作，工作勤奋踏实、有耐心、认真负责；注：有意且符合相关条件者请先投递简历至cf@vicgu.com,如需面试,我公司会在三天内予以通知。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-03 23:05:23</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-115.aspx</link>
        <title>招聘网络运营推广优化专员</title>
        <description>站易建站</description>
        <text>熟练掌握办公软件，熟悉网络推广，网站SEO优化等。公司包食宿。考核内容：业绩考核1.能否正确理解工作内容，制定适当的工作计划；2.是否能够及时与同事及合作者沟通，使工作顺利进行；3.规定期间内的任务完成量是否达到标准或计划内要求，工作的速度或时效的把握情况如何。能力考核1.是否了解本职工作的要求、方法、系统、设备；2.是否对自己的业务有独到的见解并有创新能力；3.是否能积极主动地努力工作，不断改进工作方法。态度考核1.对分工内的工作主动计划、落实和改进。是否能及时、独立完成工作任务；2.在职权范围内，是否能进行自我管理，能自主、自立、自信地处理业务；3.是否能遵守有关规定、条例、标准或上级的指示，忠于职守，表里如一，有序地工作。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2013-05-03 23:02:54</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-105.aspx</link>
        <title>我的这把刀可是涂满了毒药的毒刃哦</title>
        <description>站易建站</description>
        <text>我的这把刀可是涂满了毒药的毒刃哦,很搞笑</text>
        <image>http://v156.56img.com/images/6/21/bd-24960927i56olo56i56.com_sc_135137799183hd.jpg</image>
        <keywords>站易建站</keywords>
        <author>未知</author>
        <source>互联网</source>
        <pubDate> 2013-04-09 19:33:28</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-102.aspx</link>
        <title>巧用SQL server临时表</title>
        <description>站易建站</description>
        <text>　　SQL server临时表是经常需要用到的，下面就教您如何使用SQL server临时表解决防止用户重复登录问题，供您参考。在我们开发商务软件的时候，常常会遇到这样的一个问题：怎样防止用户重复登录我们的系统?特别是对于银行或是财务部门，更是要限制用户以其工号身份多次登入。可能会有人说在用户信息表中加一字段判断用户工号登录的状态，登录后写1，退出时写0，且登录时判断其标志位是否为1，如是则不让该用户工号登录。但是这样那势必会带来新的问题：如发生象断电之类不可预知的现象，系统是非正常退出，无法将标志位置为0，那么下次以该用户工号登录则不可登入，这该怎么办呢?或许我们可以换一下思路：有什么东西是在connection断开后可以被系统自动回收的呢?对了，SQL Server临时表具备这个特性!但是我们这里的这种情况不能用局部SQL server临时表，因为局部临时表对于每一个connection来说都是一个独立的对象，因此只能用全局临时表来达到我们的目的。好了，情况已经明朗话了，我们可以写一个象下面这样简单的存储过程:createproceduregp_findtemptable /*寻找以操作员工号命名的全局临时表 *如无则将out参数置为0并创建该表,如有则将out参数置为1 *在connection断开连接后,全局临时表会被SQLServer自动回收 *如发生断电之类的意外,全局临时表虽然还存在于tempdb中, 但是已经失去活性 *用object_id函数去判断时会认为其不存在. */ @v_useridvarchar(6),--操作员工号 @i_outintout--输出参数0:没有登录1:已经登录 as declare@v_sqlvarchar(100) ifobject_id(&amp;#39;&amp;#39;&amp;#39;&amp;#39;tempdb.dbo.##&amp;#39;&amp;#39;&amp;#39;&amp;#39;+@v_userid)isnull begin set@v_sql=&amp;#39;&amp;#39;&amp;#39;&amp;#39;createtable##&amp;#39;&amp;#39;&amp;#39;&amp;#39;+@v_userid+ &amp;#39;&amp;#39;&amp;#39;&amp;#39;(useridvarchar(6))&amp;#39;&amp;#39;&amp;#39;&amp;#39; exec(@v_sql) set@i_out=0 end else set@i_out=1在这个过程中，我们看到如果以用户工号命名的全局临时表不存在时过程会去创建一张并把out参数置为0，如果已经存在则将out参数置为1。这样，我们在我们的应用程序中调用该过程时，如果取得的out参数为1时，我们可以毫不客气地跳出一个message告诉用户说&amp;rdquo;对不起，此工号正被使用!&amp;rdquo;</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2013-03-13 15:29:38</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-114.aspx</link>
        <title>站易专题测试3.图片为主</title>
        <description>站易建站</description>
        <text> 名称：桑迪；登陆时间：美国东部时间29日晚8时许(北京时间30日上午8时许)；登陆地点：美国新泽西州海岸；影响范围：从28日开始影响美国本土，并在30日登陆美国东海岸。目前，首都华盛顿特区、纽约州、弗吉尼亚州、马里兰州、宾夕法尼亚州都已宣布进入紧急状态；灾情损失：飓风桑迪已导致美国数百万人断水断电，逾百人死亡。[详细]登陆时间：美国东部时间29日晚8时许(北京时间30日上午8时许)；影响范围：从28日开始影响美国本土，并在30日登陆美国东海岸。目前，首都华盛顿特区、纽约州、弗吉尼亚州、马里兰州、宾夕法尼亚州都已宣布进入紧急状态；灾情损失：飓风桑迪已导致美国数百万人断水断电，逾百人死亡。[详细]</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>杨斌</author>
        <source>站易建站</source>
        <pubDate> 2012-12-31 13:58:47</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-113.aspx</link>
        <title>站易专题测试2.红色</title>
        <description>站易建站</description>
        <text>电视剧《生死依托》创作研讨会在京召开5月7日上午,中国电视艺术家协会在京召开电视剧《生死依托》创作研讨会。《生死依托》将医生与病人、生与死、爱情与亲情都搬上了频幕，以农村医疗制度改革的发展为线索，围绕主人公山丹医科大学毕业，立志成长为一名合格农村医生的故事展开，从新的角度用新的思考把新农村建设和农民的生活变迁呈现给观众。该剧由曾创作过《青春童话》《王昭君》等多部央视热播大戏的剧作家林海鸥编剧，由曾执导过《清凌凌的水蓝莹莹的天》《离开雷锋的日子》等多部热播影视剧的康宁担任导演，由老戏骨杨立新、马少骅、曹力、严晓频和杨梅、李梦男、哈斯高娃、李颖、何明翰、高斯等当红演员联袂出演，并特邀香港著名影视艺人郑则士友情加盟。研讨会上,林海鸥、康宁分别对本剧进行了阐述介绍；仲呈祥、李准、曾庆瑞、詹新华、王一川、赵彤等专家分别作了主题发言。......</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>杨斌</author>
        <source>站易建站</source>
        <pubDate> 2012-12-30 08:53:18</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-112.aspx</link>
        <title>中视网维(北京)有限公司招聘PHP开发工程师</title>
        <description>站易建站</description>
        <text>公司名称 佰邦达科技（北京）有限公司职位名称 PHP开发工程师招聘人数 10工作地点 北京海淀区薪水待遇 面议职位描述 计算机相关专业本科以上学历，一年以上开发工作经验；丰富的web开发经验，熟练掌握HTML/XHTML、CSS、Javascript;精通PHP，具备在Linux或者Unix平台下使用PHP开发网站的经验；熟悉数据库，精通SQL和数据结构，具有MySQL开发经验；有良好的团队合作能力，善于沟通，热爱开发事业；熟悉ucenter原理和相关康盛创想产品者优先;请将简历发送到liuzhi@bbdtek.com。联系人 刘先生联系电话 62557688电子邮箱 liuzhi@bbdtek.comQQ/MSN -公司网址 -公司介绍 建立时间：佰邦达科技（北京）有限公司成立于2006年，公司系由国内IT行业的战略投资人投资设立。使命与任务：为企业客户提供基本互联网的应用软件产品及整体解决方案；为企业客户提供互联网应用托管服务与信息服务。公司致力于不断创新产品与服务，提升企业客户运营效率，降低企业客户的IT投资成本。服务宗旨：创新科技，创新生活。公司相信科技根植于人，改善人的生活。致使公司将推出的所有产品与服务都注重于人性设计与环境保护。人文观念：公司致力于为自己的员工提供一个良好的工作环境。工作于斯，乐于斯。 待遇从优，欢迎业内高手加盟。请将简历发到邮箱 </text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>站易建站</author>
        <source>站易建站</source>
        <pubDate> 2012-12-19 20:55:13</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-111.aspx</link>
        <title>飓风桑迪袭击美国</title>
        <description>站易建站</description>
        <text> 名称：桑迪；登陆时间：美国东部时间29日晚8时许(北京时间30日上午8时许)；登陆地点：美国新泽西州海岸；影响范围：从28日开始影响美国本土，并在30日登陆美国东海岸。目前，首都华盛顿特区、纽约州、弗吉尼亚州、马里兰州、宾夕法尼亚州都已宣布进入紧急状态；灾情损失：飓风桑迪已导致美国数百万人断水断电，逾百人死亡。[详细]登陆时间：美国东部时间29日晚8时许(北京时间30日上午8时许)；影响范围：从28日开始影响美国本土，并在30日登陆美国东海岸。目前，首都华盛顿特区、纽约州、弗吉尼亚州、马里兰州、宾夕法尼亚州都已宣布进入紧急状态；灾情损失：飓风桑迪已导致美国数百万人断水断电，逾百人死亡。[详细]</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>杨斌</author>
        <source>站易建站</source>
        <pubDate> 2012-12-13 10:56:36</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-110.aspx</link>
        <title>以色列山林大火 约40人死亡</title>
        <description>站易建站</description>
        <text>以色列北部2日上午发生山火，造成约40人死亡，数千人紧急疏散。目前火势仍未得到有效控制。</text>
        <image>http://img3.cache.netease.com/photo/0001/2010-12-03/900x600_6mvgicbd00ao0001.jpg</image>
        <keywords>站易建站</keywords>
        <author>互联网</author>
        <source>网易</source>
        <pubDate> 2012-12-10 16:30:06</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-109.aspx</link>
        <title>NASA宣布发现新种地球微生物</title>
        <description>站易建站</description>
        <text>当地时间12月2日，美国宇航局当日在华盛顿举行的新闻发布会上宣布，在地球上发现一种新的微生物，能够利用剧毒的砷进行新陈代谢，其细胞化学元素中砷替代了通常所见的磷元素。</text>
        <image>http://img3.cache.netease.com/photo/0001/2010-12-03/900x600_6mvjv77g00ao0001.jpg</image>
        <keywords>站易建站</keywords>
        <author>互联网</author>
        <source>中新网</source>
        <pubDate> 2012-12-10 16:28:15</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-108.aspx</link>
        <title>美国国家地理评2010年最佳太空图片</title>
        <description>站易建站</description>
        <text></text>
        <image>http://img3.cache.netease.com/photo/0001/2010-12-03/900x600_6mvi0h0105rq0001.jpg</image>
        <keywords>站易建站</keywords>
        <author>互联网</author>
        <source>网易</source>
        <pubDate> 2012-12-10 16:14:39</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-107.aspx</link>
        <title>国外成熟完善的廉租公寓</title>
        <description>站易建站</description>
        <text>居民在雅加达北约蓬安区一个廉租公寓区的网吧活动。这个公寓的公共区设有各种小店，方便居民生活。雅加达目前共有13处这样的廉租公寓，可供1万个家庭居住。这样的数量远不能满足低收入人群的需要，仍有大批贫困人口住在自行搭建的棚户区。</text>
        <image>http://img4.cache.netease.com/photo/0001/2011-01-21/900x600_6qtrusnj05rq0001.jpg</image>
        <keywords>站易建站</keywords>
        <author>互联网</author>
        <source>网易</source>
        <pubDate> 2012-12-10 16:08:37</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-106.aspx</link>
        <title>国际空间站俄罗斯宇航员成功完成太空作业</title>
        <description>站易建站</description>
        <text>1月21日，俄罗斯地面飞行控制中心发布消息说，国际空间站的两名俄罗斯宇航员奥列格&amp;middot;斯克里波奇卡和德米特里&amp;middot;孔德拉季耶夫在成功完成太空作业任务后，已于当天顺利返回国际空间站。</text>
        <image>http://img3.cache.netease.com/photo/0001/2011-01-23/900x600_6r2v7odg00ao0001.jpg</image>
        <keywords>站易建站</keywords>
        <author>互联网</author>
        <source>中新网</source>
        <pubDate> 2012-12-10 16:04:53</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-104.aspx</link>
        <title>莫言赴瑞典领取诺贝尔文学奖</title>
        <description>站易建站</description>
        <text>12月5日，2012年诺贝尔文学奖得主莫言携家人及朋友从北京首都国际机场出发，前去瑞典领取诺贝尔文学奖。</text>
        <image>http://img3.cache.netease.com/photo/0001/2012-12-05/900x600_8hv5s6mj00an0001.jpg</image>
        <keywords>站易建站</keywords>
        <author>互联网</author>
        <source>中新网</source>
        <pubDate> 2012-12-09 18:42:02</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/soft-103.aspx</link>
        <title>腾讯QQ2013 Beta1下载</title>
        <description>站易建站</description>
        <text>QQ2012正式版新功能介绍2012年8月30日发布QQ2012正式版，新增功能如下：1、会话窗口显示会员年费标识；2、会话窗口合并后显示的界面更加美观；3、在QQ聊天对话框新增推荐表情；4、支持双击好友窗口直接关闭，支持拖动文字复制给另外好友，支持win7系统任务栏好友窗口预览；5、2012正式版QQ软件普通用户除系统自带的&amp;ldquo;我的好友&amp;rdquo;、&amp;ldquo;陌生人&amp;rdquo;、&amp;ldquo;黑名单&amp;rdquo;、&amp;ldquo;企业好友&amp;rdquo;外，还可以额外创建15个分组；会员用户除系统自带的&amp;ldquo;我的好友&amp;rdquo;、&amp;ldquo;陌生人&amp;rdquo;、&amp;ldquo;黑名单&amp;rdquo;、&amp;ldquo;企业好友&amp;rdquo;外，可以额外创建30个分组。</text>
        <image>http://news.myfiles.com.cn/img/20081101/05544335.png</image>
        <keywords>站易建站</keywords>
        <author>腾讯</author>
        <source>腾讯网</source>
        <pubDate> 2012-12-09 14:32:22</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-99.aspx</link>
        <title>SQL Server游标实例演示不得不看</title>
        <description>站易建站</description>
        <text>　　以下的文章主要描述的是SQL Server游标实例，假如你在实际操作中遇SQL Server游标实例，但是你却不知道对其如何正确应用，那么以下的文章对你而言一定是良师益友，希望会给你带来一些帮助在此方面。
　　SQL Server游标实例:
DeclareMyCusrorCursorScroll ForSelect*FromMaster_GoodsOrderByGoodsID OpenMyCursor FetchnextFromMyCursor Into@GoodsCode,@GoodsName While(@@Fetch_Status=0) Begin Begin Select@GoodsCode=Convert(Char(20),@GoodsCode) Select@GoodsName=Convert(Char(20),@GoodsName) PRINT@GoodsCode+':'+@GoodsName End FetchnextFromMyCursor Into@GoodsCode,@GoodsName End CloseMyCursor DeallocateMyCursor
　　修改当前游标的数据方法如下:

　　UpDateMaster_GoodsSetGoodsName='php100'WhereCurrentOfMyCursor 
　　删除当前游标行数据的方法如下:

DeleteFromMaster_GoodsWhereCurrentOfMyCursor
　　Select @@CURSOR_ROWS 可以得到当前游标中存在的数据行数。注意：此变量为一个连接上的全局变量，因此只对应最后一次打开的游标。
　　打开游标
　　全局游标：Open Global MyCursor
　　局部游标: Open MyCursor
　　以上的相关内容就是对SQL Server游标实例的介绍，望你能有所收获。
      </text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:33</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-100.aspx</link>
        <title>SQL Server数据库的高性能优化经验总结...</title>
        <description>站易建站</description>
        <text>　　小编以前在做ASP及.NET的时候经常用到SQL SERVER，现在用PHP虽然大多数时候用MYSQL，但不泛有些客户要在原来SQL的平台上升级或兼容开发，值得庆幸的是PHP无所不能，基本上所有的数据库它都能连接并支持，本文主要向大家介绍的是正确优化SQL Server数据库的经验总结，其中包括在对其进行优化的实际操作中值得大家注意的地方描述，以及对SQL语句进行优化的最基本原则，以下就是文章的主要内容描述。
　　优化数据库的注意事项：
　　1、关键字段建立索引。
　　2、使用存储过程，它使SQL变得更加灵活和高效。
　　3、备份数据库和清除垃圾数据。
　　4、SQL语句语法的优化。(可以用Sybase的SQL Expert，可惜我没找到unexpired的序列号)
　　5、清理删除日志。
　　SQL语句优化的基本原则：
　　1、使用索引来更快地遍历表。
　　缺省情况下建立的索引是非群集索引，但有时它并不是最佳的。在非群集索引下，数据在物理上随机存放在数据页上。合理的索引设计要建立在对各种查询的分析和预测上。
　　一般来说：
　　①.有大量重复值、且经常有范围查询(between, &amp;gt;,&amp;lt; ，&amp;gt;=,&amp;lt; =)和order by、group by发生的列，可考虑建立群集索引
　　②.经常同时存取多列，且每列都含有重复值可考虑建立组合索引;
　　③.组合索引要尽量使关键查询形成索引覆盖，其前导列一定是使用最频繁的列。
　　2、IS NULL 与 IS NOT NULL
　　不能用null作索引，任何包含null值的列都将不会被包含在索引中。即使索引有多列这样的情况下，只要这些列中有一列含有null，该列就会从索引中排除。也就是说如果某列存在空值，即使对该列建索引也不会提高性能。任何在where子句中使用is null或is not null的语句优化器是不允许使用索引的。
　　3、IN和EXISTS
　　EXISTS要远比IN的效率高。里面关系到full table scan和range scan。几乎将所有的IN操作符子查询改写为使用EXISTS的子查询。
　　4、在海量查询时尽量少用格式转换。
　　5、当在SQL SERVER 2000中
　　如果存储过程只有一个参数，并且是OUTPUT类型的，必须在调用这个存储过程的时候给这个参数一个初始的值，否则会出现调用错误。
　　6、ORDER BY和GROPU BY
　　使用ORDER BY和GROUP BY短语，任何一种索引都有助于SELECT的性能提高。注意如果索引列里面有NULL值，Optimizer将无法优化。
　　7、任何对列的操作都将导致表扫描，它包括SQL Server数据库函数、计算表达式等等，查询时要尽可能将操作移至等号右边。
　　8、IN、OR子句常会使用工作表，使索引失效。如果不产生大量重复值，可以考虑把子句拆开。拆开的子句中应该包含索引。
　　9、SET SHOWPLAN_ALL&amp;gt;10、谨慎使用游标
　　在某些必须使用游标的场合，可考虑将符合条件的数据行转入临时表中，再对临时表定义游标进行操作，这样可使性能得到明显提高。
　　注释：所谓的优化就是WHERE子句利用了索引，不可优化即发生了表扫描或额外开销。经验显示，SQL Server数据库性能的最大改进得益于逻辑的数据库设计、索引设计和查询设计方面。反过来说，最大的性能问题常常是由其中这些相同方面中的不足引起的。
　　其实SQL优化的实质就是在结果正确的前提下，用优化器可以识别的语句，充份利用索引，减少表扫描的I/O次数，尽量避免表搜索的发生。其实SQL的性能优化是一个复杂的过程，上述这些只是在应用层次的一种体现，深入研究还会涉及SQL Server数据库层的资源配置、网络层的流量控制以及操作系统层的总体设计。
      </text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:33</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-101.aspx</link>
        <title>详解SQLServer如何链接远程MySQL数据库...</title>
        <description>站易建站</description>
        <text>　最近遇到&amp;ldquo;SQL如何链接远程MySQL&amp;rdquo;这个问题，现在问题终于解决，特把方法贴出来：(我所用的操作系统是Win7，数据库是SQL2005。)1、在SQL SERVER服务器上安装MYSQL ODBC驱动;http://dev.mysql.com/downloads/mirror.php?id=376346(下载地址)2、安装好后,在管理工具-ODBC数据源-系统DSN-添加-选择 MYSQL ODBC 3.51 DRIVER-完成会跳出来MYSQL连接参数.Data Source Name:数据源名称Decription:描述,随便写Server:MYSQL服务器的IPPort:MYSQL的端口,默认的是3306.可以改的.User:连接账号(在mysql上授权的账号，同时给予相应权限)Password:密码Database:选择链接的数据库填好之后,点下test.成功了则会如图跳出提示框.成功之后：3,打开SQL数据库,找到链接服务器.创建链接服务器,大家都会的,所以我就把参数发一下.如图,常规选项的其他的就不用填了.确定就行了.这里，需要注意：访问接口要选择&amp;ldquo;Microsoft OLE DB Provider for ODBC Drivers&amp;rdquo;。数据源：选择之前已创建好的ODBC接口。4、测试一下：(查询语句)SELECT * FROM OPENQUERY(MYSQL, &amp;quot;select * from table &amp;quot; )(插入语句)Insert openquery(MYSQL, &amp;quot;select * from table&amp;quot;) (id,name,password) values(8,&amp;quot;齐达内&amp;quot;,&amp;quot;99999&amp;quot;)</text>
        <image>http://www.alixixi.com/program/uploadpic/2011-1/2011128175729531.png</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:33</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-95.aspx</link>
        <title>在SQL Server开发中融入极限编程技术</title>
        <description>站易建站</description>
        <text>极限编程潜在的中心前提就是两种思想比一种要好。两个程序员并排坐在一起，一个编程，另一个逐块逐行地挑刺。这样做的原因很明显，如果在键盘上操作的人是司机的话，那么他旁边的人就是领航员。当中没有谁是上司&amp;mdash;&amp;mdash;他们的地位是平等的，角色是相辅相成的。极限编程让人震惊的地方就是实际起作用的技术。
由于有回报，极限编程已经在前端开发圈里站稳了脚跟。把两个身价不菲的开发者安排在一台机器上，似乎看起来是很荒谬的，但是事实证明并非如此。在极限编程中，大部分的程序缺陷在产生之前就被扼杀了;在编写低速代码时，最优化就出现了;知识相互交流;并且团队关系也就产生了。
依我的经验，这种现象还没有渗透到数据库层的开发中。我注意到在有的团队中，一个人编写存储过程，第二个人编写数据传输系统(DTS)，第三个做体系机构，而第四个人为中间设备界面做评注。每个人都孤立地创作所需的对象，而且几乎不会对代码进行检查。也许设计师规定Sproc98765接受特定的参数，并返回某个结果;然后团队中的其他成员就与之相对应。在任何一个严谨的开发组织中，检查代码和再因子分解是一个项目不可或缺的部分，但是由于某些奇怪的原因，它们并没有延伸到数据库中。
我无法理解这点。也许我们共同蒙蔽了管理者，让他们认为我们对数据库已经无所不知了。或者我们服务的定价太高，以至于会计人员都因为核算每个星期再因子分解和极限编程的花销而气喘如牛了。
举个例子来说，在一个包含了400个表格和1,600个存储过程的数据库中，我得到的每一个结果都是正确的几率是多大呢?即使有时候会出现那样的情况，那么下一次一个部门或客户需要知道某个表中的新加的列，我就必须重新访问不计其数的程序、用户自定义函数(UDF)和查看&amp;mdash;&amp;mdash;而且这只说明了表格结构的变化。
如果可能的话，我鼓励您尝试用极限编程方法去解决当前面临的SQLServer中的问题。对于这种方法，可供选择的包括一个复杂存储过程的最新进展，对一个低速程序再次进行因子分解和使一个查看最优化。至少尝试一下，然后让我知道它是怎么为您所用的。

      </text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:32</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-96.aspx</link>
        <title>体验MS SQL备份新版本6.1</title>
        <description>站易建站</description>
        <text>压缩，加密和加固MS SQL服务器备份&amp;Oslash; 创建健全的备份--使用网络还原和其他特征加固您的备份&amp;Oslash; 节省时间和空间--压缩数据库备份高达95%&amp;Oslash; 保护数据--使用多达256位AES加密技术(SQL Backup 专业版)&amp;Oslash; 监视备份--图形化呈现识别工作冲突行为网络还原使得SQL备份专业版6处于备份工具列表的首要位置，佼佼者，而且我强烈推荐使用在SQL服务器2008本地备份基础上的SQL备份。SQL备份是一个成熟且备受赞誉的用来创建，压缩和加固SQL服务器备份的工具。SQL备份兼容2000，2005和2008的特点使得你的备份更加迅速、小巧与强健。如果通过网络输入或者复制备份，SQL备份专业版的新网络还原能力能确保您的备份操作在一个临时网络断线发生时不被中断。备份操作由于网络断线而被中断时也能智能地从停止的地方恢复，因此因网络断线而浪费的时间将大大减少。对于日志传送过程中的长时间网络断线，此恢复能力也将被提供。MS SQL 6.1 备份在备份向导中配置网络还原 安装网络还原使日志传送具有自我修复力SQL备份有两个版本：专业版和简化版。通过特征比较表可以观察两个版本的不同。最简单的了解SQL备份如何发挥作用的方法就是使用它。你可以在你的评估期内下载一个免费的，14天有效期的且可以利用它全部功能的专业版试验版本。</text>
        <image>http://www.alixixi.com/program/uploadpic/2011-1/2011128175739588.jpg</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:32</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-97.aspx</link>
        <title>深讨 SQL Server 2008</title>
        <description>站易建站</description>
        <text>　　早在08年随着微软推出Windows Server 2008、Visual Studio 2008面世半年多之后，微软新一代服务器产品阵线的另一成员SQL Server 2008也正式出炉。可以说，SQL Server 2008在数据库领域里给予微软很大的信心，这样的数据库不免让IT管理深感兴趣，看到它在各方面都有了显著的进步，这些都有可能极大地影响企业的采购意向。
　　作为微软一个重大的产品版本，SQL Server 2008除了许多新的特性和关键的改进，使得它成为至今为止的最强大和最全面的SQL Server版本外，SQL Server 2008中的新功能也是其一大亮点，提供了一个可靠的智能化数据平台，功能包括：Resource Governor管理并发工作负载;通过Policy-Based Management在企业范围内加强了策略的兼容性;在SQL Server Reporting Services中利用虚拟化技术与Office 2007高度集成。
　　


　　对此，用户不仅要问，如此功能强大的新一代数据库系统SQL Server 2008，功能的改进和新特性的增加，究竟对与企业用户带来怎样的变化?
　　一个新产品的诞生，一定有其市场的需求，SQL Server 2008的发布正是在严峻经济形势下，几乎所有行业、所有公司，无论规模大小，都试图竭尽全力降低成本，同时把握可能增加收入的机会。在这种情况下，企业对于降低成本和提高效率，从现有和新增的系统中获取最大价值，使之更好的面临大的挑战。
　　那么，SQL Server 2008是如何降低成本的呢?如下列出了目前八种利用SQL Server可以为企业节省时间和成本的方法。
　　最大化长期投资回报率
　　从免费的SQL Server Express with Advanced Services版本(包括管理工具、全文搜索和报表服务)到全面的SQL Server 企业版(包括完整的商业智能和集成平台以及企业级的数据库引擎)都提供了最有价值的数据库平台。
　　成本是企业的敏感因素，有比较才有价值。SQL Server 2008提供了大量关键功能，而这些功能在Oracle中则必须支付额外费用。此外SQL Server的初始投资成本也比Oracle要低，下面显示了在同等功能、性能和规模条件下二者的价格比较：
　　


　　总体而言，SQL Server 2008提供了极具吸引力的投资回报率，可直接节省成本，提高生产力。
　　确保零宕机，增强系统稳定性
　　避免因计划和计划外的停工时间造成收益损失和生产力下降。SQL Server 2008提供一系列技术支持确保零宕机，包括16节点集群、数据库镜像、对等复制和日志传送。这些功能结合热插拔硬件支持、联机备份和还原功能，让SQL Server成为任务关键型应用程序的绝佳选择。
　　减少数据漏洞，帮助数据保护
　　数据是企业最重要的资产之一，在任何应用程序基础结构中，安全都是一个关键考虑因素。SQL Server 2008从根本上被设计为一个强化安全性的数据库平台。默认情况下，SQL Server在最小的外围应用范围内操作，减少了遭受攻击和意外损失数据的机会。进而也减少了由于敏感数据泄漏或者恢复损失数据所需的意外停机时间所导致的收益损失风险。
　　

      </text>
        <image>http://www.alixixi.com/program/uploadpic/2011-1/2011128175736444.jpg</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:32</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-98.aspx</link>
        <title>浅谈如何优化SQL Server服务器</title>
        <description>站易建站</description>
        <text>　　1.数据和日志文件分开存放在不同磁盘上　　数据文件和日志文件的操作会产生大量的I/O。在可能的条件下，日志文件应该存放在一个与数据和索引所在的数据文件不同的硬盘上以分散I/O，同时还有利于数据库的灾难恢复。　　2.tempdb数据库单独存放在不同磁盘上　　tempdb数据库是其他所有数据库都有可能使用的临时数据库。当使用select into、在没建立索引的列上执行Orderby时就会在tempdb数据库中产生临时表来存储中间数据。由于建立和填充临时表会严重降低系统性能，所以在尽可能的情况下应该为要排序的列建立索引。同时，tempdb数据库是为所有的用户和应用程序共享，所以如果一个用户占据了tempdb数据库的所有空间，则其他数据库将不能再使用。在可能的情况下，tempdb数据库应该单独放置在一个速度更快的硬盘或者RAID阵列上。分离tempdb数据库的I/O操作以加快性能。tempdb数据库应该有适当的容量，以满足用户的需要。应该允许tempdb数据库的空间自动增长。如果设置为不允许自动增长，当查询操作建立了超过tempdb数据库容量的临时表时，操作将无法完成。　　适当设置tempdb数据库的增长幅度，过小的增长幅度会产生更多的外部碎片，会占用更多的资源。　　3.避免热点数据的发生　　在SQLServer7.0之前，对于没有聚集索引的表(堆集表)，新插入的数据行总是放置在磁盘中表的物理结尾处。如果并发的用户很多，同时在对表执行插入或者更新数据的操作，这将使得十分繁忙的表的末尾有可能产生数据热点。并发的I/O操作集中对少数页面进行操作，将导致数据库性能的下降。　　在SQLServer中，新的数据行的物理存储空间的分配是通过PFS页面来进行的。PFS页面的管理算法将插入操作进行分散来尽量避免产生数据热点。　　在设计应用系统和数据库时，要避免在自然增长的列上建立主键，这样有可能导致热点数据的发生。　　4.数据类型要少　　在设计表时，尽可能少用数据类型。这样一个数据页面上可以保存最多的信息。数据页面就少，检索数据页面的I/O操作就少，所以效率会高。　　5.监控和整理空间碎片　　文件空间的自动增长提高了自动管理性，但可能导致空间碎片。物理空间与数据的逻辑空间不再连续。定期的监控和空间碎片整理有利于提高I/O性能。　　6.使用主数据文件和次要数据文件　　每个数据库的一个主数据文件属于主文件组。对于1GB左右规模的数据库，一个数据文件就够了，如果有次要数据文件，主数据文件中有管理次要数据文件的指针。　　采用多个数据文件时，主数据文件用于存储系统对象和表，次要数据文件用于存储用户数据和索引。在可能的情况下，主数据文件和次要数据文件可以单独存放在不同的磁盘上以分散I/O。　　如果采用多个数据文件，推荐主数据文件存储系统数据，次要数据文件存放用户数据和索引，这样会有助于提高I/O性能。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:32</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-93.aspx</link>
        <title>SQL Server允许重复空字段不空字段值唯...</title>
        <description>站易建站</description>
        <text>
今天同学向我提了一个问题，我觉得蛮有意思，现记录下来大家探讨下。问题是：在一个表里面，有一个允许为空的字段，空是可以重复的，但是不为空的值需要唯一。
表结构如下面代码创建


    
        
            
            以下为引用的内容：
            CREATETABLEtest_tb(TestIdintnotnullidentity(1,1)primarykey,Captionnvarchar(100)null);GO
            
        
    


解决方案1：
对于这个问题，大家的第一个想法可能是：在Caption这个字段上面加一个唯一键不就可以了吗？好，我们按着这个思路做下去，先创建唯一索引。


    
        
            
            以下为引用的内容：
            CREATEUNIQUENONCLUSTEREDINDEXun_test_tbONtest_tb(Caption)GO
            
        
    


索引创建好了，我们来测试下效果


    
        
            
            以下为引用的内容：
            INSERTINTOtest_tb(Caption)VALUES(null)GOINSERTINTOtest_tb(Caption)VALUES(null)GO
            
        
    


运行之后我们会收到下面的错误信息：


    
        
            
            以下为引用的内容：
            
            消息2601，级别14，状态1，第1行不能在具有唯一索引'un_test_tb'的对象'dbo.test_tb'中插入重复键的行。语句已终止。
            
            
        
    


所以该解决方案是不行的。
解决方案2：
添加约束，让SQL Server在插入数据的时候，先验证下已有数据中是否有现在要插入的这个值。由于这个约束不是简单的一个运算，因此我们先创建一个函数，然后再在约束中调用这个函数。
创建验证逻辑函数：


    
        
            
            以下为引用的内容：
            CREATEFUNCTION[dbo].[fn_CK_test_tb_Caption]()RETURNSBITASBEGINIF(EXISTS(SELECT1FROMtest_tbASaWHERE(CaptionISNOTNULL)ANDEXISTS(SELECT1ASExpr1FROMtest_tbWHERE(CaptionISNOTNULL)AND(Caption=a.Caption)AND(a.TestId&amp;lt;&amp;gt;TestId))))RETURN0RETURN1ENDGO
            
        
    


在约束中引用函数：


    
        
            
            以下为引用的内容：
            ALTERTABLEtest_tbADDCONSTRAINTCK_test_tb_CaptionCHECK(dbo.fn_CK_test_tb_Caption()=1)GO
            
        
    


现在来测试下效果。先来测试NULL值


    
        
            
            以下为引用的内容：
            INSERTINTOtest_tb(Caption)VALUES(null)GOINSERTINTOtest_tb(Caption)VALUES(null)GOSELECT*FROMtest_tbGO
            
        
    


可以成功运行，而且也出了多行为NULL的情况。现在再来测试不为空的插入情况。


    
        
            
            以下为引用的内容：
            
            INSERTINTOtest_tb(Caption)VALUES(N'AAA')GOINSERTINTOtest_tb(Caption)VALUES(N'BBB')GOINSERTINTOtest_tb(Caption)VALUES(N'BBB')GOSELECT*FROMtest_tbGO
            
            
        
    


结果是在第三条语句的时候报错了，表中的Caption字段也有&amp;lsquo;AAA&amp;rsquo;和&amp;lsquo;BBB&amp;rsquo;了，这也正好是我们要的结果。
所以解决方案2是正确的。但是为了这么一个小小功能，就写这么长一段东西是不是太繁琐了呢？我们来看下面的解决方案。
解决方案3：（只适用于SQL Server 2008）
SQL Server 2008中有了一个优雅的解决方案，那就是筛选索引。筛选索引是一种经过优化的非聚集索引，尤其适用于涵盖从定义完善的数据子集中选择数据的查询。筛选索引使用筛选谓词对表中的部分行进行索引。有了筛选索引，我们只需要写一条语句就达到上面的效果。


    
        
            
            以下为引用的内容：
            CREATEUNIQUENONCLUSTEREDINDEXun_test_tbONtest_tb(Caption)WHERECaptionisnotnullGO
            
        
    


再用上面的一些测试语句来测试的话，会发现完全是达到了我们的要求。这个方案的唯一缺点就是该语句只有SQL Server 2008支持。不知道各位有没有又优雅又适用于各个版本的SQL Server的解决方案，望不胜赐教。（来源：博客园）</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:31</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-92.aspx</link>
        <title>SQL Server复制功能要避开缺陷的干扰</title>
        <description>站易建站</description>
        <text>
SQL Server具有强大的复制功能，除了将数据和数据库对象从一个数据库复制并准确分发的另一个数据库中，还要实行数据库之间的同步。SQL Server的复制分为三种，下面介绍一下这三种复制技术及其存在的一些缺陷，大家在使用时可以根据具体的情境选择适用的复制方法，避开这些缺陷的干扰。
1. 快照复制
A每隔一段时间将B中的相应表中的数据全部删除，然后将自己相应表中的全部插到B中。此种方式显然不适合我们的应用，不予考虑。
2. 事务复制
对A中的每一个满足复制条件的事务，每隔一定时间A都应用到B上，反之亦然。SQL Server 通过把数据传给三个存储过程（插入，删除，修改）进行数据的修改，我们可以根据自己的应用改写此存储过程。
存在缺陷：如果从A到B的复制条件和从B到A复制条件相同的话，会产生&amp;ldquo;踢皮球&amp;rdquo;的循环现象。既一系列事务应用于A，A会把这些事务应用于B，B收到这一系列事务后，又会把它应用于A，&amp;hellip;&amp;hellip;如此循环。
3. 合并复制
每隔一段时间，复制将会把数据库A，B中需要复制的数据合并一下，使得AB中的数据完全一样，数据都是AB数据库中数据的全体数据。如果A和B中数据主键有冲突，则根据优先级只选其中一条数据。
需要注意：为了区分数据来自于哪个地点，SQL Server会将每一个需要复制的表中另加一个字段，在编程时应该注意。
存在缺陷：
SQL Server 每隔一定时间进行一次复制，如果找不到另一台Server（比如因为网络故障，或是另一台SQL Server没有启动），经过n（默认为10）次连接后，它的复制功能将会down掉，直至有人将复制功能启动。 需要复制的表中如果在复制之前就有数据，在建立复制时比较麻烦（SQL Server不提供此类问题的解决方法，需要手动完成）。因此，需要复制的表在使用过程中不能经常变动表结构。（文/张梦强）</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:31</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-94.aspx</link>
        <title>MSSQL SERVER2000 安全配置 删除所有危...</title>
        <description>站易建站</description>
        <text>MSSQL SERVER2000 安全配置

将有安全问题的SQL过程删除.比较全面.一切为了安全!
删除了调用shell，注册表，COM组件的破坏权限

MS SQL SERVER2000
使用系统帐户登陆查询分析器
运行以下脚本:
use master
exec sp_dropextendedproc 'xp_cmdshell'
exec sp_dropextendedproc 'xp_enumgroups'
exec sp_dropextendedproc 'xp_loginconfig'
exec sp_dropextendedproc 'xp_enumerrorlogs'
exec sp_dropextendedproc 'xp_getfiledetails'
exec sp_dropextendedproc 'Sp_OACreate'
exec sp_dropextendedproc 'Sp_OADestroy'
exec sp_dropextendedproc 'Sp_OAGetErrorInfo'
exec sp_dropextendedproc 'Sp_OAGetProperty'
exec sp_dropextendedproc 'Sp_OAMethod'
exec sp_dropextendedproc 'Sp_OASetProperty'
exec sp_dropextendedproc 'Sp_OAStop'
exec sp_dropextendedproc 'xp_regaddmultistring'
exec sp_dropextendedproc 'xp_regdeletekey'
exec sp_dropextendedproc 'xp_regdeletevalue'
exec sp_dropextendedproc 'xp_regenumvalues'
exec sp_dropextendedproc 'xp_regremovemultistring'
exec sp_dropextendedproc 'xp_regwrite'
drop procedure sp_makewebtask
go
删除所有危险的扩展:
exec sp_dropextendedproc 'xp_cmdshell' [删除此项扩展后,将无法远程连接数据库]
以下3个存储过程会在SQL SERVER恢复备份时被使用,非必要请勿删除
#exec sp_dropextendedproc 'xp_dirtree' [删除此项扩展后,将无法新建或附加数据库]
#exec sp_dropextendedproc 'Xp_regread' [删除此项扩展后, 还原数据库辅助]
#exec sp_dropextendedproc 'xp_fixeddrives' [删除此项扩展后,将无法还原数据库]

恢复脚本
use master
EXEC sp_addextendedproc xp_cmdshell ,@dllname ='xplog70.dll'
EXEC sp_addextendedproc xp_enumgroups ,@dllname ='xplog70.dll'
EXEC sp_addextendedproc xp_loginconfig ,@dllname ='xplog70.dll'
EXEC sp_addextendedproc xp_enumerrorlogs ,@dllname ='xpstar.dll'
EXEC sp_addextendedproc xp_getfiledetails ,@dllname ='xpstar.dll'
EXEC sp_addextendedproc Sp_OACreate ,@dllname ='odsole70.dll'
EXEC sp_addextendedproc Sp_OADestroy ,@dllname ='odsole70.dll'
EXEC sp_addextendedproc Sp_OAGetErrorInfo ,@dllname ='odsole70.dll'
EXEC sp_addextendedproc Sp_OAGetProperty ,@dllname ='odsole70.dll'
EXEC sp_addextendedproc Sp_OAMethod ,@dllname ='odsole70.dll'
EXEC sp_addextendedproc Sp_OASetProperty ,@dllname ='odsole70.dll'
EXEC sp_addextendedproc Sp_OAStop ,@dllname ='odsole70.dll'
EXEC sp_addextendedproc xp_regaddmultistring ,@dllname ='xpstar.dll'
EXEC sp_addextendedproc xp_regdeletekey ,@dllname ='xpstar.dll'
EXEC sp_addextendedproc xp_regdeletevalue ,@dllname ='xpstar.dll'
EXEC sp_addextendedproc xp_regenumvalues ,@dllname ='xpstar.dll'
EXEC sp_addextendedproc xp_regremovemultistring ,@dllname ='xpstar.dll'
EXEC sp_addextendedproc xp_regwrite ,@dllname ='xpstar.dll'
EXEC sp_addextendedproc xp_dirtree ,@dllname ='xpstar.dll'
EXEC sp_addextendedproc xp_regread ,@dllname ='xpstar.dll'
EXEC sp_addextendedproc xp_fixeddrives ,@dllname ='xpstar.dll'
go
全部复制到&amp;quot;SQL查询分析器&amp;quot;

点击菜单上的--&amp;quot;查询&amp;quot;--&amp;quot;执行&amp;quot;，就会将有安全问题的SQL过程删除。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:31</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-91.aspx</link>
        <title>SQL Server数据库对于应用程序的关系</title>
        <description>站易建站</description>
        <text>
　　以下的文章主要是介绍SQL Server数据库与其实际应用元数据，我前两天在相关网站看见SQL Server数据库与其实际应用元数据的资料，觉得挺好，就拿出来供大家分享，希望会给大家带来一些帮助在此方面。
　　我常被问到如何把驻留在物理服务器/SQL 实例上的SQL Server数据库转变为它们相应的应用程序名称。在准备计划好的服务器停机通知时，这种需要就产生了，但在我的组织内与IT经理或非技术人员沟通时，这也是有价值的。如果你不是数据
　　我常被问到如何把驻留在物理服务器/SQL 实例上的数据库转变为它们相应的应用程序名称。在准备计划好的服务器停机通知时，这种需要就产生了，但在我的组织内与IT经理或非技术人员沟通时，这也是有价值的。
　　如果你不是数据库管理员或特定数据库的应用分析师，你通常会无视数据库的命名规则，而这些数据库支持着你每日依赖的应用程序。这就是为什么当需要产生时在适当的位置上由元数据库来提供转化很重要。
　　专家解答
　　大部分数据库管理员拥有某种形式的数据库元SQL Server数据库，他们依赖其来跟踪范围很广的Microsoft SQL Server环境。我利用连接的服务器和分布式数据库访问来建立一个已经在我的环境中使用了七年的元数据库。它不是漂亮的，但它是功能性很强的。
　　跟很多IT开发者和数据库管理员一样，即使它有自身的不足我还是为自己的创造感到骄傲。它很慢，不像它可以的那样最新型，也不像它应该的那样安全。
　　自从读了2007年5月和6月Rodney Landrum在SQL Server杂志上发表的关于SQL Server集成服务(SSIS)和数据库管理员知识库(DBA Repositories)的文章，我知道是时候采取别人的解决方法了。这对于我的环境来说是完美的，而一些改动也是容易采纳的。
　　2008年2月，一篇后续文章在SQL Server杂志上发表，在这篇文章里，Rodney更新了他的解决方法。我下载了代码，在我的测试环境里审核，并迅速把它纳入产品中。当大家普遍地为这个解决方法所提供的而感到高兴时，在它包中缺少的一方面是把数据库关联到应用程序的能力。
　　通过在他的解决方法中增加两张额外的表，我可以在我的&amp;ldquo;土生土长&amp;rdquo;元数据库中增加应用程序元数据到我现在使用的SQL Server杂志的方法中。
　　增加到我数据库中的应用元数据包括创建两张表：dbo.Applications，专为存储所有程序的应用名称，而这些程序在我的环境中依赖于SQL Server数据库，还有
　　dbo.Database_Applications，它保存SQL 实例、SQL Server数据库和应用程序之间的关系。
　　Applications Table CREATE TABLE [dbo].[Applications] (
　　[AppID] [int] IDENTITY(154,1) NOT NULL,
　　[ApplicationName] [varchar](100) NOT NULL, )
　　Database_Applications Table
　　CREATE TABLE [dbo].[Database_Applications] (
　　[DB_AppID] [int] IDENTITY(1,1) NOT NULL,
　　[ServerName] [varchar](50) NOT NULL,
　　[DatabaseName] [varchar](100) NOT NULL,
　　[ApplicationName] [varchar](100) NULL )
　　你可能注意到，我没有规范化dbo.Database_Applications表。如果我规范化，我会只存储两个区域：一个与存储我的应用元数据的表有关的外键，和一个与我的元数据库相对应的外键。我有自己的原因：
　　我没有处理大量的数据：我有大概800个数据库，这些SQL Server数据库在我的环境里发布80个实例。虽然这对于一个数据库管理员来说是个很大的环境，但是它既不转变成在我的元数据表里的大量纪录，也不转变成数据库的巨大字节。
　　不是通过dbo.Applications表的主键，而是包含表中的应用程序名，我可以通过只访问dbo.Database_Applications表产生我的主要应用程序元数据报告(key Application Metadata report)。
　　我的环境中的SQL元数据库使用&amp;ldquo;焦土政策&amp;rdquo;人口处理方法，除了SQL Agent Job History和Backup History，其他的表都被每天删除和重新载入。我发现在
　　dbo.Database_Applications表中保存信息可以使我的生活变得很容易。
　　每日从我的环境中载入数据后，我可以通过以下脚本得到在我的环境中产生的任何新的数据库的良好的陈述。
　　SELECT D.[Server], D.DatabaseName FROM dbo.Databases D LEFT JOIN dbo.Database_Applications DA ON D.DatabaseName = DA.DatabaseName AND D.[Server] = DA.[ServerName] WHERE DA.DB_AppID IS NULL ORDER BY D.[Server], D.DatabaseName 这个查询的结果提供任何数据库的清单，这些SQL Server数据库产生于上次我更新应用元数据和服务器时，它不仅是跨域的数据库创建活动的通知，也是致力于更新两个数据库来符合应用程序信息的数据清单。这个查询也适合SQL Server Reporting Services报告的数据表，而当我不在办公室时，SQL Server Reporting Services报告也为我提供了一个新的数据库到我的黑莓(BlackBerry)的日常通知。
　　最后，我创建了以下存储程序，由此用任何新的数据库信息来合并dbo.Applications表和dbo.Database_Applications 表。它接受三个参数：服务器，数据库和应用程序。如果应用程序已经不存在于dbo.Applications表中，它就会被补充。然后一个记录被插入到服务器/数据库/应用程序关系中的dbo.Applications表。
　　CREATE PROCEDURE [dbo].[pAdd_Application]
　　@ServerName varchar(50),
　　@DatabaseName varchar(100),
　　@ApplicationName varchar(100)
　　AS --Add any new databases created,
　　but not recorded in the repository, to the repository
　　UPDATE dbo.Database_Applications
　　SET ApplicationName = @ApplicationName
　　WHERE ServerName = @ServerName
　　AND DatabaseName = @DatabaseName
　　AND ApplicationName IS NULL
　　--Determine if there is already an application
　　for this database in the repository, if not, then add it
　　IF (SELECT COUNT(*) FROM dbo.Applications
　　WHERE ApplicationName = @ApplicationName) = 0
　　BEGIN INSERT INTO dbo.Applications (ApplicationName)
　　VALUES (@ApplicationName)
　　PRINT 'Added new Application: '
　　+ @ApplicationName + ' to Applications table'
　　SELECT * FROM dbo.Applications
　　WHERE ApplicationName = @ApplicationName
　　END --List the new record in the repository
　　SELECT ServerName, DatabaseName, ApplicationName
　　FROM dbo.Database_Applications
　　WHERE ServerName = @ServerName
　　AND DatabaseName = @DatabaseName
　　AND ApplicationName = @ApplicationName
　　虽然我可以很容易地把这个存储程序的执行整合为SQL Server集成服务(SSIS)程序包中的最后一步，而这个程序包能够组装我的存储数据库，但我选择不这样做，这是为了在我的环境里，我能密切关注围绕新的SQL Server数据库创造而展开的活动。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:31</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-90.aspx</link>
        <title>微软SQL Server数据库的两种请求游标</title>
        <description>站易建站</description>
        <text>　　【IT168  技术】游标(cursor)是系统为用户开设的一个数据缓冲区，存放SQL语句的执行结果。每个游标区都有一个名字。用户可以用SQL语句逐一从游标中获取记录，并赋给主变量，交由主语言进一步处理。
　　关系数据库中的操作会对整个行集起作用。由 SELECT 语句返回的行集包括满足该语句的 WHERE  子句中条件的所有行。这种由语句返回的完整行集称为结果集。应用程序，特别是交互式联机应用程序，并不总能将整个结果集作为一个单元来有效地处理。这些应用程序需要一种机制以便每次处理一行或一部分行。游标就是提供这种机制的对结果集的一种扩展。
　　游标通过以下方式来扩展结果处理：
　　允许定位在结果集的特定行。
　　从结果集的当前位置检索一行或一部分行。
　　支持对结果集中当前位置的行进行数据修改。
　　为由其他用户对显示在结果集中的数据库数据所做的更改提供不同级别的可见性支持。
　　提供脚本、存储过程和触发器中用于访问结果集中的数据的 Transact-SQL 语句。
　　请求游标
　　MicrosoftSQL Server 支持两种请求游标的方法：
　　Transact-SQL
　　Transact-SQL 语言支持在 ISO 游标语法之后制定的用于使用游标的语法。
　　数据库应用程序编程接口(API)游标函数
　　SQL Server 支持以下数据库 API 的游标功能：
　　ADO(Microsoft ActiveX 数据对象)
　　OLE DB
　　ODBC(开放式数据库连接)
　　应用程序不能混合使用这两种请求游标的方法。已经使用 API 指定游标行为的应用程序不能再执行 Transact-SQL DECLARE CURSOR  语句请求一个 Transact-SQL 游标。应用程序只有在将所有的 API 游标特性设置回默认值后，才可以执行 DECLARE CURSOR。
　　如果既未请求 Transact-SQL 游标也未请求 API 游标，则默认情况下 SQL Server  将向应用程序返回一个完整的结果集，这个结果集称为默认结果集。
　　游标进程
　　Transact-SQL 游标和 API 游标有不同的语法，但下列一般进程适用于所有 SQL Server 游标：
　　1、将游标与 Transact-SQL 语句的结果集相关联，并且定义该游标的特性，例如是否能够更新游标中的行。
　　2、执行 Transact-SQL 语句以填充游标。
　　3、从游标中检索您想要查看的行。从游标中检索一行或一部分行的操作称为提取。执行一系列提取操作以便向前或向后检索行的操作称为滚动。
　　4、根据需要，对游标中当前位置的行执行修改操作(更新或删除)。
　　5、关闭游标。
      </text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 13:05:15</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-87.aspx</link>
        <title>C#过滤器HttpModule</title>
        <description>站易建站</description>
        <text>C#过滤器HttpModule的使用，如下代码示例：
usingSystem;usingSystem.Web;publicclassHttpModule:IHttpModule{publicvoidDispose(){}publicvoidInit(HttpApplicationapplication){application.BeginRequest+=newEventHandler(Application_BeginRequest);application.EndRequest+=newEventHandler(Application_EndRequest);}voidApplication_BeginRequest(Objectsource,EventArgse){HttpApplicationapplication=(HttpApplication)source;HttpContextcontext=application.Context;context.Response.Write(&amp;quot;自定义模块&amp;quot;);}voidApplication_EndRequest(Objectsource,EventArgse){HttpApplicationapplication=(HttpApplication)source;HttpContextcontext=application.Context;context.Response.Write(&amp;quot;自定义模块&amp;quot;);}}/**在配置文件中配置*&amp;lt;system.web&amp;gt;*&amp;lt;httpModule&amp;gt;*&amp;lt;addname=&amp;quot;HttpModule&amp;quot;type=&amp;quot;HttpModule&amp;quot;/&amp;gt;*&amp;lt;/httpModule&amp;gt;*&amp;lt;/system.web&amp;gt;*/</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:36</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-86.aspx</link>
        <title>C#实现数组元素的交集和并集运算</title>
        <description>站易建站</description>
        <text>编写一个类实现数组元素的交集和并集运算
要求：
 1、要有构造函数对数组初始化
 2、包含交集和并集两个单独的方法
 3、要有一个打印数组元素的方法
 4、编写一个测试类测试数组
 5、要求控制台中要分别输出两个原数组以及将交集和并集运算结果输出
代码：
usingSystem;usingSystem.Collections.Generic;usingSystem.Text;namespaceConsoleApplication4{classProgram{staticvoidMain(string[]args){int[]A={65,42,11,8,-4};int[]B={2,90,2,11,33,8};Console.WriteLine(&amp;quot;合并前的元素集A：&amp;quot;);foreach(intxinA){Console.Write(&amp;quot;{0}&amp;quot;,x);}Console.WriteLine(&amp;quot;\n合并前的元素集B：&amp;quot;);foreach(intxinB){Console.Write(&amp;quot;{0}&amp;quot;,x);}Sets=newSet(A,B);if(s.SetA!=null&amp;&amp;s.SetB!=null){Console.WriteLine(&amp;quot;\n合并为：&amp;quot;);foreach(intxins.GetUnion()){Console.Write(&amp;quot;{0}&amp;quot;,x);}Console.WriteLine(&amp;quot;\n交集为：&amp;quot;);foreach(intxins.GetIntersection()){Console.Write(&amp;quot;{0}&amp;quot;,x);}}Console.ReadKey();}}}classSet{privateint[]setA;privateint[]setB;publicint[]SetA{get{returnsetA;}set{if(IsRepeated(value)){Console.WriteLine(&amp;quot;\nA数组中有重复元素！&amp;quot;);//Application.Exit();//Console.WriteLine(IsRepeated(value));}else{setA=value;}}}publicint[]SetB{get{returnsetB;}set{if(IsRepeated(value)){Console.WriteLine(&amp;quot;\nB数组中有重复元素！&amp;quot;);//Application.Exit();//Console.WriteLine(IsRepeated(value));}else{setB=value;}}}//构造函数publicSet(int[]setA,int[]setB){SetA=setA;SetB=setB;}//判断数组中是否有元素重复，返回true表示有重复privateboolIsRepeated(int[]array){boolflag=false;for(inti=0;i&amp;lt;array.Length;i++){for(intj=0;j&amp;lt;array.Length;j++){if((array[i]==array[j])&amp;&amp;(i!=j)){flag=true;break;}}}returnflag;}//判断element是否在setA中privateboolIsInSetA(intelement){boolflag=false;foreach(inteleinsetA){if(ele==element){flag=true;}}returnflag;}//求两个集合的交集publicint[]GetIntersection(){//找出不同元素的个数intcount=0;intaLength=0;intbLength=0;aLength=setA.Length;bLength=setB.Length;//intlen=setA.Length;for(intj=0;j&amp;lt;bLength;j++){if(IsInSetA(setB[j])){count++;}}int[]c=newint[count];intlen=0;for(inti=0;i&amp;lt;aLength;i++){for(intj=0;j&amp;lt;bLength;j++){if(setA[i]==setB[j]){c[len++]=setB[j];}}}returnc;}//求两个集合的并集publicint[]GetUnion(){intaLength=0;intbLength=0;aLength=setA.Length;bLength=setB.Length;//找出不同元素的个数intcount=0;//intlen=setA.Length;for(intj=0;j&amp;lt;bLength;j++){if(IsInSetA(setB[j])){count++;}}//建一个新的数组，存放合并后的元素intx=aLength+bLength-count;intlen=aLength;int[]c=newint[x];//把A数组中的元素先存入数组cfor(inti=0;i&amp;lt;len;i++){c[i]=setA[i];}//在数组B中找出数组A中没有的元素，并放入数组C中for(inti=0;i&amp;lt;bLength;i++){intj;for(j=0;j&amp;lt;aLength;j++){if(setA[j]==setB[i]){break;}}if(j==aLength){c[len++]=setB[i];}}returnc;}}</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:36</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-88.aspx</link>
        <title>C#对象序列化和反序列化</title>
        <description>站易建站</description>
        <text>C#对象序列化和反序列化，如下代码示例：usingSystem;usingSystem.Text;usingSystem.Collections.Generic;usingSystem.IO;usingSystem.Runtime.Serialization.Formatters.Binary;classSerializableOperate{privatestaticvoidObjectSerializable(objectobj,stringfilePath){FileStreamfs=null;try{fs=newFileStream(filePath,FileMode.Create);BinaryFormatterbf=newBinaryFormatter();bf.Serialize(fs,obj);}catch(IOExceptionex){Console.WriteLine(&amp;quot;序列化是出错！&amp;quot;);}finally{if(fs!=null){fs.Close();}}}privatestaticobjectObjectUnSerializable(stringfilePath){FileStreamfs=null;objectobj=null;try{fs=newFileStream(filePath,FileMode.OpenOrCreate);BinaryFormatterbf=newBinaryFormatter();obj=bf.Deserialize(fs);}catch(IOExceptionex){Console.WriteLine(&amp;quot;反序列化时出错！&amp;quot;);}finally{if(fs!=null){fs.Close();}}returnobj;}staticvoidMain(String[]args){List&amp;lt;string&amp;gt;list=newList&amp;lt;string&amp;gt;{&amp;quot;张三&amp;quot;,&amp;quot;李四&amp;quot;,&amp;quot;王五&amp;quot;,&amp;quot;赵柳&amp;quot;,&amp;quot;刘备&amp;quot;};stringfilePath=&amp;quot;c:\\log.log&amp;quot;;Console.WriteLine(&amp;quot;开始序列化集合！请稍等...&amp;quot;);SerializableOperate.ObjectSerializable(list,filePath);Console.WriteLine(&amp;quot;开始反序列化集合！请稍等...&amp;quot;);list=(List&amp;lt;String&amp;gt;)SerializableOperate.ObjectUnSerializable(filePath);foreach(stringstrinlist){Console.WriteLine(str);}}}</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:36</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-89.aspx</link>
        <title>深讨 SQL Server 2008</title>
        <description>站易建站</description>
        <text>C#生成桌面快捷方式，如下代码：WindowsShortcut.Shortcutsc=newWindowsShortcut.Shortcut();sc.Path=this.currentDir+&amp;quot;/平台启动器.exe&amp;quot;;sc.WorkingDirectory=this.currentDir;sc.Description=&amp;quot;平台启动器&amp;quot;;stringDesktopPath=System.Environment.GetFolderPath(System.Environment.SpecialFolder.Desktop);//得到桌面文件夹sc.Save(DesktopPath+&amp;quot;/平台启动器.lnk&amp;quot;);</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:36</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-84.aspx</link>
        <title>asp.net控件Repeater说明</title>
        <description>站易建站</description>
        <text>asp.net控件Repeater说明


在 .aspx 页面中创建一个 Repeater 控件。&amp;lt;HeaderTemplate&amp;gt; 元素中的内容在输出中仅出现一次，而 &amp;lt;ItemTemplate&amp;gt; 元素的内容会对应 DataSet 中的 &amp;quot;record&amp;quot;  重复出现，最后，&amp;lt;FooterTemplate&amp;gt;  的内容在输出中仅出现一次。
在 &amp;lt;ItemTemplate&amp;gt;  元素后添加 &amp;lt;AlternatingItemTemplate&amp;gt;  元素，这样就可以描述交替行的外观了。
&amp;lt;SeparatorTemplate&amp;gt;  元素能够用于描述每个记录之间的分隔符。
示例:

&amp;lt;formrunat=&amp;quot;server&amp;quot;&amp;gt;&amp;lt;asp:Repeaterid=&amp;quot;cdcatalog&amp;quot;runat=&amp;quot;server&amp;quot;&amp;gt;&amp;lt;HeaderTemplate&amp;gt;&amp;lt;tableborder=&amp;quot;1&amp;quot;width=&amp;quot;100%&amp;quot;&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;Title&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Artist&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Country&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Company&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Price&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Year&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/HeaderTemplate&amp;gt;&amp;lt;ItemTemplate&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;title&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;artist&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;country&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;company&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;price&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;year&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/ItemTemplate&amp;gt;&amp;lt;AlternatingItemTemplate&amp;gt;&amp;lt;trbgcolor=&amp;quot;#e8e8e8&amp;quot;&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;title&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;artist&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;country&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;company&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;price&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%#Container.DataItem(&amp;quot;year&amp;quot;)%&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/AlternatingItemTemplate&amp;gt;&amp;lt;SeparatorTemplate&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;tdcolspan=&amp;quot;6&amp;quot;&amp;gt;&amp;lt;hr/&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/SeparatorTemplate&amp;gt;&amp;lt;FooterTemplate&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/FooterTemplate&amp;gt;&amp;lt;/asp:Repeater&amp;gt;</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:35</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-83.aspx</link>
        <title>file控件和image控件实现图片预览</title>
        <description>站易建站</description>
        <text>两种方式：1.用js实现
 2.直接在控件的事件处理函数中添加语句（相当于将js的函数代码直接写在此处，如注释处所写）
 注意：此处可以用&amp;lt;input type='file'&amp;gt;也可以用&amp;lt;asp:FileUpload&amp;gt;实现，虽然后者没有onchange事件，但是强行使用的时候，虽然提示[validation (asp.net)：attribute 'onchange' is not a valid attribute of element 'Fileupload']，但是需要的效果还是可以达到的。

&amp;lt;body&amp;gt;&amp;lt;scripttype=&amp;quot;text/javascript&amp;quot;&amp;gt;functionch(val) { document.getElementById('Image1').src=val;  } &amp;lt;/script&amp;gt;&amp;lt;formid=&amp;quot;form1&amp;quot;runat=&amp;quot;server&amp;quot;&amp;gt;&amp;lt;div&amp;gt;&amp;lt;asp:ImageID=&amp;quot;Image1&amp;quot;runat=&amp;quot;server&amp;quot;Width=&amp;quot;135px&amp;quot;/&amp;gt;&amp;lt;%--&amp;lt;inputid=&amp;quot;File1&amp;quot;type=&amp;quot;file&amp;quot;onchange=&amp;quot;document.getElementById('Image1').src=this.value&amp;quot;/&amp;gt;--%&amp;gt;&amp;lt;inputid=&amp;quot;File1&amp;quot;type=&amp;quot;file&amp;quot;onchange=&amp;quot;ch(this.value);&amp;quot;/&amp;gt;&amp;lt;asp:FileUploadID=&amp;quot;FileUpload1&amp;quot;runat=&amp;quot;server&amp;quot;onchange=&amp;quot;document.getElementById('Image1').src=this.value&amp;quot;/&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;/body&amp;gt;</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:35</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-85.aspx</link>
        <title>ASP.NET控件的执行生命周期</title>
        <description>站易建站</description>
        <text>
    
        
            
            阶段
            
            
            控件需要执行的操作
            
            要重写的方法或事件
            
        
        
            初始化
            
            初始化在传入Web请求生命周期内所需的设置。
            
            Init事件（OnInit方法）
            
        
        
            加载视图状态
            
            在此阶段结束时，就会自动填充控件的ViewState属性，控件可以重写LoadViewState方法的默认实现，以自定义状态还原。
            
            LoadViewState方法
            
        
        
            处理回发数据
            
            处理传入窗体数据，并相应地更新属性。
            注意：只有处理回发数据的控件参与此阶段。
            
            LoadPostData方法（如果已实现IPostBackDataHandler）
            
        
        
            加载
            
            执行所有请求共有的操作，如设置数据库查询。此时，树中的服务器控件已创建并初始化、状态已还原并且窗体控件反映了客户端的数据。
            
            Load事件（OnLoad方法）
            
        
        
            发送回发更改通知
            
            引发更改事件以响应当前和以前回发之间的状态更改。
            注意：只有引发回发更改事件的控件参与此阶段。
            
            RaisePostDataChangedEvent方法（如果已实现IPostBackDataHandler）
            
        
        
            处理回发事件
            
            处理引起回发的客户端事件，并在服务器上引发相应的事件。
            注意：只有处理回发事件的控件参与此阶段。
            
            RaisePostBackEvent方法（如果已实现IPostBackEventHandler）
            
        
        
            预呈现
            
            在呈现输出之前执行任何更新。可以保存在预呈现阶段对控件状态所做的更改，而在呈现阶段所对的更改则会丢失。
            
            PreRender事件（OnPreRender方法）
            
        
        
            保存状态
            
            在此阶段后，自动将控件的ViewState属性保持到字符串对象中。此字符串对象被发送到客户端并作为隐藏变量发送回来。为了提高效率，控件可以重写SaveViewState方法以修改ViewState属性。
            
            SaveViewState方法
            
        
        
            呈现
            
            生成呈现给客户端的输出。
            
            Render方法
            
        
        
            处置
            
            执行销毁控件前的所有最终清理操作。在此阶段必须释放对昂贵资源的引用，如数据库链接。
            
            Dispose方法
            
        
        
            卸载
            
            执行销毁控件前的所有最终清理操作。控件作者通常在Dispose中执行清除，而不处理此事件。
            
            UnLoad事件（On UnLoad方法）
            
        
    
</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:35</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-80.aspx</link>
        <title>.NET中的动态编译</title>
        <description>站易建站</description>
        <text>代码的动态编译并执行是一个.NET平台提供给我们的很强大的工具用以灵活扩展（当然是面对内部开发人员）复杂而无法估算的逻辑，并通过一些额外的代码来扩展我们已有 的应用程序。这在很大程度上给我们提供了另外一种扩展的方式（当然这并不能算是严格意义上的扩展，但至少为我们提供了一种思路）。
动态代码执行可以应用在诸如模板生成，外加逻辑扩展等一些场合。一个简单的例子，为了网站那的响应速度，HTML静态页面往往是我们最好的选择，但基于数据驱动的网站往往又很难用静态页面实现，那么将动态页面生成html的工作或许就是一个很好的应用场合。另外，对于一些模板的套用，我们同样可以用它来做。另外这本身也是插件编写的方式。
最基本的动态编译
.Net为我们提供了很强大的支持来实现这一切我们可以去做的基础，主要应用的两个命名空间是：System.CodeDom.Compiler和Microsoft.CSharp或Microsoft.VisualBasic。另外还需要用到反射来动态执行你的代码。动态编译并执行代码的原理其实在于将提供的源代码交予CSharpCodeProvider来执行编译（其实和CSC没什么两样），如果没有任何编译错误，生成的IL代码会被编译成DLL存放于于内存并加载在某个应用程序域（默认为当前）内并通过反射的方式来调用其某个方法或者触发某个事件等。之所以说它是插件编写的一种方式也正是因为与此，我们可以通过预先定义好的借口来组织和扩展我们的程序并将其交还给主程序去触发。一个基本的动态编译并执行代码的步骤包括：
1.将要被编译和执行的代码读入并以字符串方式保存
2.声明CSharpCodeProvider对象实例
3.调用CSharpCodeProvider实例的CompileAssemblyFromSource方法编译
4.用反射生成被生成对象的实例（Assembly.CreateInstance）
5.调用其方法
以下代码片段包含了完整的编译和执行过程：
//getthecodetocompile stringstrSourceCode=this.txtSource.Text; //1.CreateanewCSharpCodePrivoderinstance CSharpCodeProviderobjCSharpCodePrivoder=newCSharpCodeProvider(); //2.SetstheruntimecompilingparametersbycratinganewCompilerParametersinstance CompilerParametersobjCompilerParameters=newCompilerParameters(); objCompilerParameters.ReferencedAssemblies.Add(&amp;quot;System.dll&amp;quot;); objCompilerParameters.ReferencedAssemblies.Add(&amp;quot;System.Windows.Forms.dll&amp;quot;); objCompilerParameters.GenerateInMemory=true; //3.CompilerResults:Complilethecodesnippetbycallingamethodfromtheprovider CompilerResultscr=objCSharpCodePrivoder.CompileAssemblyFromSource(objCompilerParameters,strSourceCode); if(cr.Errors.HasErrors) { stringstrErrorMsg=cr.Errors.Count.ToString()+&amp;quot;Errors:&amp;quot;; for(intx=0;x&amp;lt;cr.Errors.Count;x++) { strErrorMsg=strErrorMsg+&amp;quot;\r\nLine:&amp;quot;+ cr.Errors[x].Line.ToString()+&amp;quot;-&amp;quot;+ cr.Errors[x].ErrorText; } this.txtResult.Text=strErrorMsg; MessageBox.Show(&amp;quot;Therewerebuilderros,pleasemodifyyourcode.&amp;quot;,&amp;quot;CompilingError&amp;quot;); return; } //4.InvokethemethodbyusingReflection AssemblyobjAssembly=cr.CompiledAssembly; objectobjClass=objAssembly.CreateInstance(&amp;quot;Dynamicly.HelloWorld&amp;quot;); if(objClass==null) { this.txtResult.Text=&amp;quot;Error:&amp;quot;+&amp;quot;Couldn'tloadclass.&amp;quot;; return; } object[]objCodeParms=newobject[1]; objCodeParms[0]=&amp;quot;Allan.&amp;quot;; stringstrResult=(string)objClass.GetType().InvokeMember(&amp;quot;GetTime&amp;quot;,BindingFlags.InvokeMethod,null,objClass,objCodeParms); this.txtResult.Text=strResult; 
</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:34</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-81.aspx</link>
        <title>.net(c#) 简单的软件注册功能的实现</title>
        <description>站易建站</description>
        <text>主要思路：获取机器的CPU序列号，得到机器码。通过对机器码进行MD5运算之后得到注册码。将注册码写进注册表或系统目录。
//1.在程序的入口处（winform）检测注册文件是否存在，如果不存在
//则提示用户注册文件损坏或者用户未注册，如果注册文件存在，则读取文件内容，判断注册码是否正确。
//在程序的入口函数所在的文件要引用 using System.IO;来进行文件操作。

usingSystem; usingSystem.Collections.Generic; usingSystem.Windows.Forms; usingSystem.IO; namespaceLoginWindowTest { staticclassProgram { ///&amp;lt;summary&amp;gt; ///应用程序的主入口点。 ///&amp;lt;/summary&amp;gt; [STAThread] staticvoidMain() { StringsysFolder=System.Environment.SystemDirectory;//获取系统安装目录如：c:\windows\system32 Regrg=newReg();//此类里有几个函数（获取CPU序列号，对字符串进行MD5运算等） Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); if(!File.Exists(sysFolder+&amp;quot;file://sixi.ini/&amp;quot;)) { //如果注册文件不存在。注册失败 //创建注册文件 File.Create(sysFolder+&amp;quot;file://sixi.ini/&amp;quot;); MessageBox.Show(&amp;quot;请注册！&amp;quot;); Application.Run(newRegForm());//进入注册界面。 } else{//如果注册文件存在，读取文件内容跟密码比较 byte[]arry=newbyte[32]; stringstr=&amp;quot;&amp;quot;; FileInfofi=newFileInfo(sysFolder+&amp;quot;file://sixi.ini/&amp;quot;); FileStreamfs=fi.OpenRead(); inti=fs.Read(arry,0,32); fs.Close(); str=System.Text.Encoding.ASCII.GetString(arry); if(str==rg.getMd5(rg.GetCpuID()).Trim())//如果注册文件里的字符串和经过MD5运算过的注册码相同，则注册成功 { MessageBox.Show(&amp;quot;软件已经成功注册！&amp;quot;); Application.Run(newMainForm());//进入软件主界面 } else{ MessageBox.Show(&amp;quot;请注册软件！&amp;quot;); Application.Run(newRegForm());//进入注册界面。 } } } } } 
</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:34</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-82.aspx</link>
        <title>.Net Framework 数据提供程序错误</title>
        <description>站易建站</description>
        <text>析构函数中调用SqlConnection对象的Dispose()方法就会出现这个异常，但是在其他地方不会。搜索MSDN的资源可以找到答案： 
http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=473449&amp;SiteID=1 
以下是关于SqlDataReader.CLose()方法的解释： 
http://msdn2.microsoft.com/en-us/library/system.data.sqlclient.sqldatareader.close.aspx 
注意这段文字： 
Do not call Close or Dispose on a Connection, a DataReader, or any other managed object in the Finalize method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a Finalize method in your class definition. 
不要再析构函数中调用Connection, DataReader,或其他托管对象的Close()或Dispose()方法，析构函数中应当只是放类的非托管成员，如果类中不包含非托管成员不要创建析构函数。 

这类问题通常由于跨线程访问了非线程安全的对象，即便你没有显示声明一个线程，但是CLR内部会有独立的线程。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:34</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-79.aspx</link>
        <title>gridview列内容自动换行的方法</title>
        <description>站易建站</description>
        <text>在RowCreated事件中添加
e.Row.Cells[6].Attributes.Add(&amp;quot;style&amp;quot;, &amp;quot;word-break :break-all ; word-wrap:break-word&amp;quot;);
这样则会让你选定的列自动换行了 不过前提是要给列设置宽度
&amp;lt;asp:BoundField DataField=&amp;quot;Memo&amp;quot; HeaderText=&amp;quot;备注&amp;quot; &amp;gt;
&amp;lt;ItemStyle Width=&amp;quot;20%&amp;quot; Wrap=&amp;quot;True&amp;quot; /&amp;gt;
&amp;lt;/asp:BoundField&amp;gt;
前台这样写。 注意： Wrap=&amp;quot;True&amp;quot; </text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 12:59:03</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-76.aspx</link>
        <title>ItemCategoriesContent</title>
        <description>站易建站</description>
        <text>#ItemCategoriesContent{font-size:14px;width:100%;float:right;color:#015A44;background-color:#DCF1EC;}#ItemCategoriesContentA{color:#015A44;}#ItemCategoriesContentUL{font-size:12px;margin:0px;padding:0px;}#ItemCategoriesContentULLI{list-style-type:none;word-break:break-all;}
   本文链接http://www.cxybl.com/html/wyzz/CSS/20121123/34209.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:16:22</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-77.aspx</link>
        <title>齿轮转动:CSS3：转动的齿轮</title>
        <description>站易建站</description>
        <text>body{background:#2C91AE;}.wrap{width:600px;height:400px;padding:50px;margin:20pxauto;position:relative;}.gear{border-radius:100px;border:1px solid #8C8C8A;width:200px;height:200px;position:relative;background-color:#FFFFFF;}.gear span{border:1px solid #8C8C8A;display:block;width:20px;height:30px;position:absolute;border-right:none;background-color:#FFFFFF;}.c1{left:8px;top:12px;-webkit-transform:rotate(41deg);}.c2{left:60px;top:-21px;-webkit-transform:rotate(75deg);}.c3{left:125px;top:-19px;-webkit-transform:rotate(110deg);}.c4{left:177px;top:20px;-webkit-transform:rotate(144deg);}.c5{left:198px;top:84px;-webkit-transform:rotate(181deg);}.c6{left:176px;top:150px;-webkit-transform:rotate(216deg);}.c7{left:125px;top:187px;-webkit-transform:rotate(250deg);}.c8{left:55px;top:188px;-webkit-transform:rotate(288deg);}.c9{left:0px;top:147px;-webkit-transform:rotate(325deg);}.c10{left:-19px;top:80px;-webkit-transform:rotate(2deg);}.gear em{background-color:#2C91AE;border-radius:20px;border:1px solid #8C8C8A;width:40px;height:40px;display:block;position:absolute;left:80px;top:80px;}.gear{-webkit-animation-name:run;-webkit-animation-duration:5s;-webkit-animation-timing-function:linear;-webkit-animation-delay:0s;-webkit-animation-iteration-count:infinite;-webkit-animation-direction:normal;}.s{position:absolute;left:700px;top:156px;zoom:0.7;-webkit-animation-duration:3s;}@-webkit-keyframes run{from{-webkit-transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);}}.line{border-width:3px 0 3px 3px;border-color:#FFFFFF;border-style:solid;width:117px;height:234px;border-radius:120px 0 0 120px;position:absolute;top:31px;left:30px;}.line div{position:relative;border-color:#FFFFFF;border-style:solid;}.la{border-width:3px 0 0;top:30px;left:112px;width:432px;-webkit-transform:rotate(9deg);}.lb{border-width:3px 0 0;top:227px;left:110px;width:420px;-webkit-transform:rotate(-1deg);}.lc{border-width:3px 3px 3px 0;width:75px;border-radius:0 79px 79px 0;height:160px;left:531px;top:61px;-webkit-transform:rotate(5deg);}&amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;gear&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;grear_r&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;c1&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c2&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c3&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c4&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c5&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c6&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c7&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c8&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c9&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c10&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;em&amp;gt;&amp;lt;/em&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;gear s&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;grear_r&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;c1&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c2&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c3&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c4&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c5&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c6&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c7&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c8&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c9&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;c10&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;em&amp;gt;&amp;lt;/em&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;line&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;la&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;lb&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;lc&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:16:22</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-78.aspx</link>
        <title>css3 选择器:CSS选择器</title>
        <description>站易建站</description>
        <text>以前看jQuery的时候一直看不懂，为什么$()这个工厂方法能做那么多事， 里面对DOM的选择功能太强大了！今天看了《CSS入门经典》这本书，原来CSS本身就有这么多选择器，之前看jQuery的代码，一直没搞明白jQuery怎么解析里面的参数。从中总结了一个经验：基础不好不要去看那些框架，越看越糊涂。言归正传：1, 类选择器.planet{position: absolute;top:0;left:0;bottom:15px;}用一个点开头，后面接类名本身，类名不能有空格在页面文件中，假设有这么一段：&amp;lt;div class=&amp;quot;planet&amp;quot;&amp;gt; this is a class Demo&amp;lt;/div&amp;gt;样式表中的属性就会应用到这段div中在样式表中也可以这样写：div .planet{position: absolute;top:0;left:0;bottom:15px;}对一个标签应用多个class可以这样写：&amp;lt;div class=&amp;quot;class1 class2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;中间用一个空格隔开。2，ID选择器#planet{position: absolute;top:0;left:0;bottom:15px;}ID选择器以#开头，接ID的名称，在每个文档中ID应该只定义一次，所以ID选择符具有唯一性。Demo：&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt;&amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot; lang=&amp;quot;zh-CN&amp;quot;&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Class and ID Selectors&amp;lt;/title&amp;gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;classAndId.css&amp;quot; /&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;p class=&amp;quot;container&amp;quot;&amp;gt;PMS是随着工业化生产由&amp;ldquo;生产&amp;rdquo;为中心转变为&amp;ldquo;消费者&amp;rdquo;为中心而产生的，对企业来说，根本目的就是在资源有限的情况下生产出&amp;ldquo;适销对路&amp;rdquo;的产品，并保持长久的盈利和发展。&amp;lt;/p&amp;gt;&amp;lt;p class=&amp;quot;container box&amp;quot;&amp;gt;PMS是随着工业化生产由&amp;ldquo;生产&amp;rdquo;为中心转变为&amp;ldquo;消费者&amp;rdquo;为中心而产生的，对企业来说，根本目的就是在资源有限的情况下生产出&amp;ldquo;适销对路&amp;rdquo;的产品，并保持长久的盈利和发展。&amp;lt;/p&amp;gt;&amp;lt;p class=&amp;quot;container tank&amp;quot;&amp;gt;PMS是随着工业化生产由&amp;ldquo;生产&amp;rdquo;为中心转变为&amp;ldquo;消费者&amp;rdquo;为中心而产生的，对企业来说，根本目的就是在资源有限的情况下生产出&amp;ldquo;适销对路&amp;rdquo;的产品，并保持长久的盈利和发展。&amp;lt;/p&amp;gt;&amp;lt;p class=&amp;quot;container&amp;quot; id=&amp;quot;container-1234&amp;quot;&amp;gt;PMS是随着工业化生产由&amp;ldquo;生产&amp;rdquo;为中心转变为&amp;ldquo;消费者&amp;rdquo;为中心而产生的，对企业来说，根本目的就是在资源有限的情况下生产出&amp;ldquo;适销对路&amp;rdquo;的产品，并保持长久的盈利和发展。&amp;lt;/P&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;css：body{font-family: sans-self;}p.container{border:1px solid rgb(29,179,82);background:rgb(202,222,245);padding:10px;width:245px;height:245px;float:left;margin:10px;}p.box{border:1px solid rgb(69,199,115);background:rgb(164,201,245);}p.tank{border:1px solid rgb(107,214,145);background:rgb(124,180,245);clear:left;}p#container-1234{border:1px solid rgb(154,232,181);background:rgb(82,157,245);}结果：3，通用选择器很简单：*，这就是通用选择器*{border:1px solid black;}4，后代选择器后代选择器是基于一个元素是否是另一个元素的后代来决定是否应用样式。在CSS中，&amp;ldquo;后代&amp;rdquo;表示一个元素是另一个元素的儿子、孙子、曾孙等，浅显一点就是在代码中：里层的元素是外层元素的后代。在样式表中，选择器之间的空格表示祖先与后代的关系，祖先在前，后代在后。以上表示：在文档中有个ID为body的div，对这个div中一个类名为inline-code的span应用样式：font-family:monospace以上选择器可以应用&amp;lt;body&amp;gt;&amp;lt;div id=&amp;quot;body&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;inline-code&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;也可以应用于：&amp;lt;body&amp;gt;&amp;lt;div id=&amp;quot;body&amp;quot;&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span class=&amp;quot;inline-code&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;5，直接子选择器直接子选择器与后代选择器很相似，不同在于直接子选择器只应用与元素的直接子元素用一个&amp;ldquo;&amp;gt;&amp;rdquo;相隔也可以根据需要加入任意多个元素到直接子选择器链中也可以与后代选择器混合使用6，相邻选择器相邻选择器选择的是一个元素的下一个元素，中间用一个&amp;ldquo;+&amp;rdquo;相隔h1 + p{background:lightyellow;color:darkkhaki;border:1px solid darkkhaki;}h1 + p + p{background:yellowgreen;color:green;border:1px solid green;}第一个选择的是：直接跟在&amp;lt;h1&amp;gt;元素后的&amp;lt;p&amp;gt;元素第二个选择的是：一个&amp;lt;p&amp;gt;元素直接相邻于另一个&amp;lt;p&amp;gt;元素，并且后者也直接相邻于一个&amp;lt;h1&amp;gt;元素。完整的一个例子：body{font:12px sans-serif;}p{padding:5px;}h1 + p{background:lightyellow;color:darkkhaki;border:1px solid darkkhaki;}h1 + p + p{background:yellowgreen;color:green;border:1px solid green;}&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt;&amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot; lang=&amp;quot;zh-CN&amp;quot;&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;相邻选择器&amp;lt;/title&amp;gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;SiblingSelector.css&amp;quot;/&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Next Sibling Selectors&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Ajax用于描述存在已久的技术：JavaScript代码、XML、以及能够通过HTTP进行异步调用的对象。Ajax常用于避免提交并重新加载整个网页，特别是在用户执行的动作不需要重新加载整个网页时。在过去几年中，支持Ajax的站点在不断的完善，作为此类站点的开发工具，Ajax的应用也越来越广泛。使用本文的实践通过Ajax和JavaScript来构建更优的Web应用程序 本文链接http://www.cxybl.com/html/wyzz/CSS/20121128/34564.html</text>
        <image>http://www.alixixi.com/web/uploadpic/2012-12/201212211336101.gif</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:16:22</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-75.aspx</link>
        <title>css常用:CSS常用总结</title>
        <description>站易建站</description>
        <text>CSS索引一.CSS样式选择器 21.通用选择器——{font-family:&amp;quot;宋体&amp;quot;;declaration2;...declarationN} 22.类型选择器——p{font-family:&amp;quot;宋体&amp;quot;;}或p1，p2{font-family:&amp;quot;宋体&amp;quot;;}逗号代表或者的意思。23.Class——p.code{font-family:&amp;quot;宋体&amp;quot;;} 24.ID——#code{font-family:&amp;quot;宋体&amp;quot;;} 2二.样式表 21.行内样式表 22.内部样式表 23.外部样式表 24.样式表优先级——就近原则 3三.属性 31.文字 32.文本 33.背景属性 44.超链接 45.边距属性 46.边框属性 4四.CSS布局 51.DIV标记（分块标记）——&amp;lt;divstyle=&amp;quot;color:#00FF00&amp;quot;&amp;gt;***&amp;lt;/div&amp;gt; 52.span标记（行标记）——&amp;lt;spanstyle=&amp;quot;***&amp;quot;&amp;gt;***&amp;lt;/span&amp;gt; 63.DIV&amp;span区别 64.display属性 65.@import合并央视文件 6一.CSS样式选择器1.通用选择器——{font-family:&amp;quot;宋体&amp;quot;;declaration2;...declarationN}2.类型选择器——p{font-family:&amp;quot;宋体&amp;quot;;}或p1，p2{font-family:&amp;quot;宋体&amp;quot;;}逗号代表或者的意思。3.Class——p.code{font-family:&amp;quot;宋体&amp;quot;;}td.fancy{color:#f60;background:#666;}在上面的例子中，类名为fancy的表&amp;#26684;单元将是带有灰色背景的橙色。&amp;lt;tdclass=&amp;quot;fancy&amp;quot;&amp;gt;4.ID——#code{font-family:&amp;quot;宋体&amp;quot;;}#sidebarp{font-style:italic;text-align:right;margin-top:0.5em;}二.样式表1.行内样式表&amp;lt;pstyle&amp;#43;&amp;quot;color=Blue&amp;quot;;&amp;gt;&amp;lt;/p&amp;gt;2.内部样式表&amp;lt;head&amp;gt;&amp;lt;styletype=&amp;quot;text/css&amp;quot;&amp;gt;hr{color:sienna;}p{margin-left:20px;}body{background-image:url(&amp;quot;images/back40.gif&amp;quot;);}&amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;3.外部样式表当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用&amp;lt;link&amp;gt;标签链接到样式表。&amp;lt;link&amp;gt;标签在（文档的）头部：&amp;lt;head&amp;gt;&amp;lt;linkrel=&amp;quot;stylesheet&amp;quot;type=&amp;quot;text/css&amp;quot;href=&amp;quot;mystyle.css&amp;quot;/&amp;gt;&amp;lt;/head&amp;gt;4.样式表优先级——就近原则三.属性1.文字&amp;lt;styletype=&amp;quot;text/css&amp;quot;&amp;gt;.font1{font-family:verdana;font-style:italic;font-variant:small-caps;font-weight:lighter;font-size:18pt;color:red}.code{font-size:16pt;color:red}&amp;lt;/style&amp;gt;2.文本属性描述color设置文本颜色direction设置文本方向。line-height设置行高。letter-spacing设置字符间距。text-align文本对齐。text-decoration向文本添加修饰。text-indent首行缩进。text-transform控制元素中的字母。word-spacing设置字间距。&amp;lt;styletype=&amp;quot;text/css&amp;quot;&amp;gt;.text1{word-spacing:4;letter-spacing:4;text-decoration:blink;font-size:18pt;color:red}&amp;lt;/style&amp;gt;3.背景属性&amp;lt;styletype=&amp;quot;text/css&amp;quot;&amp;gt;.p1{background-image:url(images/02.jpg);background-repeat:no-repeat;}&amp;lt;/style&amp;gt;4.超链接A:link未访问时的状态A:visited访问过后的状态A:active鼠标点中不放时的状态A:hover鼠标划过时的状态&amp;lt;styletype=&amp;quot;text/css&amp;quot;&amp;gt;/*我是注释*/a:link{color:green;text-decoration:none}a:active{color:blue;text-decoration:none}a:visited{color:orange;text-decoration:none}a:hover{color:red;text-decoration:underline}&amp;lt;/style&amp;gt;5.边距属性&amp;lt;styletype=&amp;quot;text/css&amp;quot;&amp;gt;.p1{background-image:url(images/02.jpg);background-repeat:no-repeat;margin-left:5em}&amp;lt;/style&amp;gt;6.边框属性&amp;lt;styletype=&amp;quot;text/css&amp;quot;&amp;gt;p{border:10pxdoublepurple}&amp;lt;/style&amp;gt;四.CSS布局1.DIV标记（分块标记）——&amp;lt;divstyle=&amp;quot;color:#00FF00&amp;quot;&amp;gt;***&amp;lt;/div&amp;gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h3&amp;gt;Thisisaheader&amp;lt;/h3&amp;gt;&amp;lt;p&amp;gt;Thisisaparagraph.&amp;lt;/p&amp;gt;&amp;lt;divstyle=&amp;quot;color:#00FF00&amp;quot;&amp;gt;&amp;lt;h3&amp;gt;Thisisaheader&amp;lt;/h3&amp;gt;&amp;lt;p&amp;gt;Thisisaparagraph.&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;2.span标记（行标记）——&amp;lt;spanstyle=&amp;quot;***&amp;quot;&amp;gt;***&amp;lt;/span&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span&amp;gt;sometext.&amp;lt;/span&amp;gt;someothertext.&amp;lt;/p&amp;gt;3.DIV&amp;span区别Div会造成换行，span不会。4.display属性display属性规定元素应该生成的框的类型。p.inline{display:inline;}Inline在同一行中显示，none文字不会被显示，block换行输出.5.@import合并央视文件可将多个css文件合并成一个css文件.
   本文链接http://www.cxybl.com/html/wyzz/CSS/20121121/34107.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:16:14</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-73.aspx</link>
        <title>php 变量作用域:js变量作用域</title>
        <description>站易建站</description>
        <text>请先看一下代码：        var scope = &amp;quot;global&amp;quot;;function f() {alert(scope);//dispaly &amp;quot;undefined&amp;quot; not &amp;quot;global&amp;quot;var scope = &amp;quot;local&amp;quot;;//Vaeiable initized here,but defined everywherealert(scope);//display &amp;quot;local&amp;quot;}f();为什么了？局部变量在整个函数体都是有定义的，这意味着在整个函数体中隐藏了同名的全局变量。虽然局部变量在整个函数体都是定义的，但在执行var语句钱，他是不会被初始化的，因此上面的函数f和下面的函数等价 function f() {var scope;//局部变量在函数头声明alert(scope); //此处该变量有定义，但值为 &amp;quot;undefined&amp;quot;scope = &amp;quot;local&amp;quot;; //初始化变量并赋值alert(scope);//此处该变量具有值}
   本文链接http://www.cxybl.com/html/wyzz/JavaScript_Ajax/20121203/34637.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:13:51</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-72.aspx</link>
        <title>fck编辑器:JavaScript 获取 FCK 编辑器...</title>
        <description>站易建站</description>
        <text>function getEditorContents(){var oEditor = FCKeditorAPI.GetInstance(&amp;quot;content&amp;quot;);alert(oEditor.GetXHTML(true));}//向编辑器插入指定代码function insertHTMLToEditor(codeStr){var oEditor = FCKeditorAPI.GetInstance(&amp;quot;content&amp;quot;);if (oEditor.EditMode==FCK_EDITMODE_WYSIWYG){oEditor.InsertHtml(codeStr);}else{return false;}}//统计编辑器中内容的字数function getLength(){var oEditor = FCKeditorAPI.GetInstance(&amp;quot;content&amp;quot;);var oDOM = oEditor.EditorDocument;var iLength ;if(document.all){iLength = oDOM.body.innerText.length;}else{var r = oDOM.createRange();r.selectNodeContents(oDOM.body);iLength = r.toString().length;}alert(iLength);}//执行指定动作function ExecuteCommand(commandName){var oEditor = FCKeditorAPI.GetInstance(&amp;quot;content&amp;quot;) ;oEditor.Commands.GetCommand(commandName).Execute() ;}//设置编辑器中内容function SetContents(codeStr){var oEditor = FCKeditorAPI.GetInstance(&amp;quot;content&amp;quot;) ;oEditor.SetHTML(codeStr) ;}
   本文链接http://www.cxybl.com/html/wyzz/JavaScript_Ajax/20121203/34634.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:13:51</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-71.aspx</link>
        <title>倒计时:javascript 倒计时</title>
        <description>站易建站</description>
        <text>&amp;lt;script LANGUAGE=&amp;quot;JavaScript&amp;quot;&amp;gt;var urodz= new Date(&amp;quot;January 1,2012&amp;quot;);vars=&amp;quot;元旦&amp;quot;;var now = new Date();var ile = urodz.getTime() - now.getTime();var dni = Math.floor(ile / (1000 * 60 * 60 * 24));if (dni &amp;gt; 1) document.write(&amp;quot;今天离&amp;quot;&amp;#43;s&amp;#43;&amp;quot;还有&amp;quot;&amp;#43;dni &amp;#43;&amp;quot;天&amp;quot;)else if (dni == 1) document.write(&amp;quot;只有2天啦！&amp;quot;)else if (dni == 0) document.write(&amp;quot;只有1天啦！&amp;quot;)elsedocument.write(&amp;quot;好象已经过了哦！&amp;quot;);&amp;lt;/script&amp;gt;
   本文链接http://www.cxybl.com/html/wyzz/JavaScript_Ajax/20121201/34604.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:13:51</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-74.aspx</link>
        <title>另外一款超棒的响应式布局jQuery插件</title>
        <description>站易建站</description>
        <text>在线演示我们曾经介绍过俩款知名的响应式布局插：isotope和masonary，今天我们这里再介绍一款相当不错的响应式布局插件 &amp;ndash; Freetile.js，使用它同样可以生成超酷的动态布局效果。相信大家一定会喜欢！主要特性Freetie来自于Assemblage 和 Assemblage Plus的内建布局引擎，设计灵感来自于Masonry，VGrid和Wookmark，但是和他们相比较，拥有以下独特的地方：允许包含任何尺寸的元素，并且不要求一个固定的列宽度，因此你不需要指定列宽度来迎合你的元素大小内建算法允许你很容易的自定义插入的位置，满足不同喜好的展示方式。例如，向左或者向右对齐，或者接近特定元素。智能的动画方式能够很好的判断是否需要动画特效。例如，刚加入的元素和不可见的元素。只要使用Assemblage 和 Assemblage Plus模板的网站都在使用它，所以说非常稳定。如何使用基本使用方式：1$(&amp;quot;#container&amp;quot;).freetile();启用动画特效：1$(&amp;quot;#container&amp;quot;).freetile({ animate:true, elementDelay:30});指定一个自定义的元素选择器：1$(&amp;quot;#container&amp;quot;).freetile({ selector:&amp;quot;.thumbs&amp;quot;});是不是很简答，希望大家喜欢这个插件，如果你有任何问题，请给我们留言！来源：另外一款超棒的响应式布局jQuery插件 &amp;ndash; Freetile.js</text>
        <image>http://www.alixixi.com/web/uploadpic/2012-12/201212512448612.jpg</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:13:51</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-67.aspx</link>
        <title>qtp自动化测试实践:【软件测试自动化-Q...</title>
        <description>站易建站</description>
        <text>上一次讲座我们简单介绍了下QTP中如何执行javascript，其实说穿了也就是借助QTP的封装方法来进行执行javascript，主要还是想照顾下新手所以简单介绍一下这块内容，可能对一些测试高手们来说不值一提，但是今天这次讲座相信一定会让你眼前一亮，应该可以说本次课程是领先技术讲座的高潮。擦亮你的眼睛，来看如何真正意义上在QTP编辑器中直接执行JAVASCRIPT，并把try catch应用到实际应用中。从此摆脱vbs那种渣一样的错误捕获。在这之前请允许我来介绍一个组件，它就是MSHTML组件，我们可以通过这个组件来执行jsJavascript执行脚本Set oHTML = CreateObject(&amp;quot;htmlfile&amp;quot;)Set Js = oHTML.parentWindowJs.execScript &amp;quot;alert(&amp;quot;test&amp;quot;)&amp;quot;分析：通过以上脚本我们可以非常轻松的执行javascript，执行结果会直接弹出test文本框。结果：那么我们是否可以在QTP中执行以下代码呢？Set oHTML = CreateObject(&amp;quot;htmlfile&amp;quot;)Set Js = oHTML.parentWindowJs.execScript _&amp;quot;Browser(&amp;quot;百度一下，你就知道&amp;quot;).Page(&amp;quot;百度一下，你就知道&amp;quot;).WebEdit(&amp;quot;wd&amp;quot;).set(&amp;quot;iquicktest&amp;quot;);&amp;quot;分析：我们现在要做的是通过以上javascript方式来控制QTP的对象模型，因为只有这样才有意义，不是吗？但是当你执行以上代码时，你会发现一件很恼火的事情，QTP直接抛了一个错误：为什么会出现如上图的错误呢，这是因为javascript脚本层与vbscript脚本层是在不同的两个空间之中的，虽然在vbscript脚本层中是可以直接控制Browser对象的，但是到了javascript中这个对象却是空的，根本没有这个对象存在，因此执行后回抛错，那么现在的问题是我们如何把vbscript脚本层中的测试对象模型直接传递到javascript脚本层呢，这就需要进行穿越了，只有空间扭曲才可以做到，呵呵，开个玩笑，其实很简单，来看以下脚本：QTP中任意对象的穿越Set oHTML = CreateObject(&amp;quot;htmlfile&amp;quot;)Set Js = oHTML.parentWindow&amp;quot;声明Browser对象Js.execScript &amp;quot;var Browser;&amp;quot;&amp;quot;把Browser对象层Set Js.Browser = BrowserJs.execScript _&amp;quot;Browser(&amp;quot;百度一下，你就知道&amp;quot;).Page(&amp;quot;百度一下，你就知道&amp;quot;).WebEdit(&amp;quot;wd&amp;quot;).set(&amp;quot;iquicktest&amp;quot;);&amp;quot;分析：执行以上脚本后，你会发现iquicktest被成功输入到百度文本框中了（别忘了先把对象都添加到对象库，这个我就不解释了），别急，还没玩，这才只是一个小小的开始，还有很多重量级的没有上台，怎么能就这样结束了呢。那么我在本文开头也说了，要让QTP真正意义上的执行javascript，那么现在就开始进入到我们的高潮部分。可能对于一些高手们我相信你应该已经想到我接下来需要怎么做了，来看下一段脚本。On error resume nextCall InitJSEngineFunction InitJSEngine()&amp;quot;创建htmlfile组件Set oHTML = createobject(&amp;quot;htmlfile&amp;quot;)&amp;quot;通过GetObject拿到qtp自动化模型实例Set qtapp = getobject(&amp;quot;&amp;quot;,&amp;quot;quicktest.application&amp;quot;)&amp;quot;定义js，以及一些需要穿越的对象set JS = oHTML.parentWindowjs.execScript &amp;quot;var Browser,Setting,Print;&amp;quot;set Js.Browser = BrowserSet Js.Print = PrintSet js.Setting = Setting&amp;quot;获取到QTPACTION1中的脚本内容并执行js.execScript qtapp.Test.Actions(&amp;quot;Action1&amp;quot;).GetScriptEnd Function分析：以上脚本中我们主要定义了一个函数，这个函数其实很简单，js执行部分其实和之前讲一样，主要是笔者通过aom方式把qtp脚本编辑器中的脚本内容直接捕获下来并通过js的方式执行，这一点对于熟悉aom的朋友应该很容易就能想到。那么把此文件命名为Js.qfl放入到Resources中：接着我们直接在QTP脚本编辑器中输入javascript脚本：function testflow(){var p = Browser(&amp;quot;百度一下，你就知道&amp;quot;).Page(&amp;quot;百度一下，你就知道&amp;quot;);p.WebEdit(&amp;quot;wd&amp;quot;).Set(&amp;quot;iquicktest&amp;quot;);p.WebButton(&amp;quot;百度一下&amp;quot;).Click();}testflow();效果图：那么接下来如果直接执行脚本，QTP会首先去验证脚本是不是符合vbs语法，如果出错会弹出错误框，导致执行中断：如图，QTP报错说存在无效字符串，因此我们需要把这类错误处理框进行过滤。进入Test Settings后，选择run选项如图，更改When error occurs during run session：选项为Stop Run，为什么这样设置？原因分析：QTP在执行测试脚本的顺序是首先执行Resources中的函数库，接着才开始执行脚本编辑器的。改写完毕之后，再次执行脚本，此时你会惊奇的发现，可以成功在QTP编辑器中直接执行javascript吧。嘿嘿，别急，还没完！！高潮怎么可以这么快就结束了呢，try catch还没有登场，这可是最最重量级的，脚本如下：function testflow(){//设置超时时间为100Setting.Item(&amp;quot;DefaultTimeOut&amp;quot;) = 100;Print (&amp;quot;********************* Javascript in QTP - Report ********************* &amp;quot;);//使用try catch语句对QTP脚本进行错误处理try{var p = Browser(&amp;quot;百度一下，你就知道&amp;quot;).Page(&amp;quot;百度一下，你就知道&amp;quot;);p.WebEdit(&amp;quot;wd&amp;quot;).Set(&amp;quot;iquicktest&amp;quot;); 本文链接http://www.cxybl.com/html/wyzz/JavaScript_Ajax/20121126/34400.html</text>
        <image>http://www.alixixi.com/web/uploadpic/2012-12/2012125124636762.gif</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:06:27</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-68.aspx</link>
        <title>ajax返回多个值:5个Ajax最佳实践</title>
        <description>站易建站</description>
        <text>导读：通过对5个最佳实践的学习，开发人员可将其应用到日常的Asynchronous JavaScript + XML（ Ajax ）开发工作中。文章包括了数据格式、错误处理、以及一些采用Ajax的Rich Internet Applications（RIAs)开发工具。掌握这些最佳实践，有助于开发人员编写更加高效且健壮的Ajax代码。本文所介绍的5个最佳实践，可以应用到Web应用程序Ajax开发工作中：一、最小化调用二、让数据变小三、预加载组件四、轻松实现错误处理五、使用现有工具这些最佳实践，有助于开发者编写更加健壮的JavaScript代码，并使您的Ajax代码执行的更快，这可以给用户带来益处。Ajax概述Ajax用于描述存在已久的技术：JavaScript代码、XML、以及能够通过HTTP进行异步调用的对象。Ajax常用于避免提交并重新加载整个网页，特别是在用户执行的动作不需要重新加载整个网页时。在过去几年中，支持Ajax的站点在不断的完善，作为此类站点的开发工具，Ajax的应用也越来越广泛。使用本文的实践通过Ajax和JavaScript来构建更优的Web应用程序。最小化调用听起来可能很明显，但使用Ajax技术提高Web应用程序性能，惟一能做的就是最小化的调用数量。最小化调用数量的方法之一是将大量调用合并成少量调用。如果数据量相对小（见&amp;ldquo;让数据变小&amp;rdquo;），那么在大多数网络中，主要问题就在于延迟。延迟是浏览器真正获取服务器与服务的连接所需的时间，有时它会占去大部分连接时间。用户所感受到的总延迟由几个部分组成，包括浏览器的缓存设置、DNS客户端、以及物理连接。没有简易公式或代码片段供阅读来了解如何减小Web应用程序调用。然而，只需一个简单的练习，就可以演示如何对从客户端到服务器的Ajax调用数量进行控制。考虑购买二手摩托车的Web应用程序（见图1）。图1.搜索二手摩托车的示例Web页面首先，用户选择摩托车的年份。然后，用户选择摩托车的构造。最后用户选择摩托车的型号。从始至终，Ajax一直在后台运行，更新Web应用程序中的下拉框来为用户过滤清单，以方便用户选择。要开始这一练习，首先要为客户端及服务器创建一个简单图表（有一个文本框）。然后为浏览器进行的Ajax调用画线，来从服务器获取用户数据，如图2所示。图2.绘制Ajax调用可通过将对品牌和型号进行的调用合并到一个调用中，来优化设计。不是对品牌进行一次调用，然后针对型号进行另一次调用，而是对型号进行缓存，这样，当用户选择品牌时，新代码只检索缓存中可用的型号列表。从本地缓存中获取数据要比从服务获取相同数据快得多。回避额外的服务调用，开发人员就可以避免服务调用的延迟。新的通信情况如图3所示。图3.合并获取品牌调用与获取型号调用后的Ajax调用到目前为止，新设计在浏览器与服务器之间的通信中去掉了一个调用。可利用清单1中的代码进一步减少调用数量，其中的一些关键行可用于存储在数组中检索到的数据，供以后查找使用。清单1.在缓存中存储本地数据varchoices=newArray(); functionfillChoiceBoxes(year){ //seeresourcesforlinkstodojotoolkit... if(dojo.indexOf(choices,year)==-1){ //gogetthe }else{ //maketheajaxcallandfillthechoices. choices[year]=result;//resultofajaxcall. } //callingafunctiontofillthevalues... fillSelect(dojo.byId(&amp;quot;makes&amp;quot;),choices[year]); }如果用户在反复考虑两个不同的型号，Web应用程序会使用本地缓存数据，而不是发起附加服务调用。仅缓存静态数据&amp;mdash;&amp;mdash;至少是在用户会话持续阶段。不要因为缓存了不应缓存的数据，而引起一系列问题。正如本例所展示的，可通过减少客户端与服务器之间的交互次数，以及在可能的情况下缓存数据，来最小化调用。让数组变得很小为提高数据处理性能，需要让服务器与客户端之间出传输的数据尽量的小。为高效地完成这一任务，必须已经控制了从服务层，到能够指定从服务到客户端的消息类型的部分。有充足的理由证明，XML适合作为客户端到服务器的通用消息格式。理由之一是存在足够多的库或者框架，来用于XML序列化。然而，当与JavaScript Serialized Object Notation（JSON）对比时，XML显得很冗长，而前者更加简明。目前已经有很多可以将消息方便地构建成JSON格式的库，这样就可以通过JSON的方式将数据从服务端传送的客户端。很多客户端库，比如Dojo Toolkit，允许定义服务所采用的传输格式。如果服务响应使用JSON，可通过提供一个参数来使用相同的客户端对象。仔细研究一下清单2中的代码，其展示了使用XML的摩托车对象的表示。清单2.使用XML的摩托车数据&amp;lt;motorcycle&amp;gt;&amp;lt;year&amp;gt;2010&amp;lt;/year&amp;gt;&amp;lt;make&amp;gt;Motocool&amp;lt;/make&amp;gt;&amp;lt;model&amp;gt;Uberfast&amp;lt;/model&amp;gt;&amp;lt;/motorcycle&amp;gt;现在来看一下清单3，其展示了使用JSON的相同数据。注意，它的代码量减少了大约25%（如果去掉空格）。清单3.使用JSON的摩托车数据{ &amp;quot;motorcycle&amp;quot;:{ &amp;quot;year&amp;quot;:&amp;quot;2010&amp;quot;, &amp;quot;make&amp;quot;:&amp;quot;Motocool&amp;quot;, &amp;quot;model&amp;quot;:&amp;quot;Uberfast&amp;quot; } }由于数据量变小了，不仅减少了从服务端到客户端的传输时间，而且，由于字符串的减小还节省了解析时间。在设计需要传输的数据时，其所包含的字符越少越好。预加载组件可通过在Ajax调用中加载JavaScript文件与图像之类的组件，来充分利用浏览器的缓存。需要注意的是，预加载JavaScript文件和图像，仅对那些开启缓存功能的用户有益，不过大多数用户的浏览器都开启了缓存功能。想要预加载外部JavaScript文件，将JavaScript文件包面中，但是，只有当该页面很小而且仅想优化少量资源时，才适合采用这一方式。例如，当有一个将工作流引入用户的相对轻量级的页面时，预加载非常有用。考虑最小化调用部分中购买摩托车的例子。可在流的早期页面中预加载用于包含下拉框的页面的、包含全部Ajax代码的JavaScript代码。如果要用Ajax调用的方法更新图片，预加载图像会提供很大方便。预加载图像后，当用户将鼠标移动到元素时、从下拉框中进行选择时、或者单击按钮时，不必等待浏览器对图像进行检索。即使Ajax以异步方式发生，也需要花费一些时间将图像从服务器传送到客户端，并且在图像全部下载完毕之前，它不会在客户端中显示。在清单4所展示的例子中，用户进行从清单中选择摩托车这一操作时，所采用的图像就是使用标准JavaScript代码预加载的。&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Preloadexample&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;!--webpage...--&amp;gt;&amp;lt;scripttype=&amp;quot;text/javascript&amp;quot;language=&amp;quot;javascript&amp;quot;&amp;gt;varimg=newImage(); img.src=&amp;quot;http://path/to/motocool.jpg&amp;quot;; &amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;为页面预加载图像时，JavaScript的位置很重要。开发人员一定不希望因为在HTML中加入了JavaScript代码而影响页面的加载速度。一般的规则是，可将&amp;lt;script&amp;gt;元素当中的JavaScript代码放到HTML页面的最后部分，因为在考虑可同时下载多少资源时，浏览器的能力就相对有限了。如果可能，将脚本加到HTML页面的最后部分，来帮助浏览器更快速加载图像和其他资源。在HTML5中，可使用&amp;lt;script&amp;gt;标记的新async属性。这将告诉浏览器异步运行JavaScript代码，这样，它可以在页面中运行其他东西时执行。轻松处理错误在JavaScript代码中定义的每个函数，都要假设会有恶意输入发生，因为，防御性能强的代码比使用try... catch语句所编写的代码更善于处理错误。例如，如果想使用JavaScript函数来根据用户输入进行计算，在计算前检查输入，如清单5所示。 本文链接http://www.cxybl.com/html/wyzz/JavaScript_Ajax/20121127/34435.html</text>
        <image>http://www.alixixi.com/web/uploadpic/2012-12/2012125124634965.png</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:06:27</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-69.aspx</link>
        <title>ajax调用后台:AJAX调用慎用POST方式，有...</title>
        <description>站易建站</description>
        <text>这个问题只存在客户端是IE或IE内核的情况，但是你无法控制客户端使用什么浏览器，所以仍然会给你的应用造成很大的性能问题。
我们先说现象：
服务端：我们只用一个静态的HTML页面ok.html，内容只返OK.
然后我们写一个ajax调用的html在客户端访问：
&amp;lt;script&amp;gt;
function send_request(method,url,param) {
 http_request = false;
 if (window.XMLHttpRequest) {
 http_request = new XMLHttpRequest();
 } else if (window.ActiveXObject) {
 try {
 http_request = new ActiveXObject(&amp;quot;Msxml2.XMLHTTP&amp;quot;);
 } catch (e) {
 try {
 http_request = new ActiveXObject(&amp;quot;Microsoft.XMLHTTP&amp;quot;);
 } catch (e) {
 }
 }
 }
 if (!http_request) {
 return;
 }
 http_request.open(method, url,true);
 http_request.send(param);
}
function get(){
 var url = &amp;quot;http://myhost/ok.html?name=axman&amp;test=123&amp;quot;;
 for(var i=0;i&amp;lt;1000;i++){
 send_request(&amp;quot;GET&amp;quot;,url,null);
 }
}
function post(){
 var url = &amp;quot;http://myhost/ok.html&amp;quot;;
 for(var i=0;i&amp;lt;1000;i++){
 send_request(&amp;quot;POST&amp;quot;,url,'name=axman&amp;test=123');
 }
}
&amp;lt;/script&amp;gt;
&amp;lt;input type=&amp;quot;button&amp;quot; name=&amp;quot;b1&amp;quot; value=&amp;quot;get&amp;quot; onclick=&amp;quot;get()&amp;quot;&amp;gt;
&amp;lt;input type=&amp;quot;button&amp;quot; name=&amp;quot;b2&amp;quot; value=&amp;quot;post&amp;quot; onclick=&amp;quot;post()&amp;quot;&amp;gt;
这个页面上两种方式访问和传递的参数完全一致，当我按下get按钮后，服务端收到了1000个访问记录。
[admin@vm-platform access_log]$ cat apache_access.log.4 wc -l
1000
然后我统计访问时间大于1ms的记录：
[admin@vm-platform access_log]$ cat apache_access.log.4 awk '{if($12 &amp;gt; 1000) print $0}'
结果是空。
现在我们再按下POST按钮：
[admin@vm-platform access_log]$ cat apache_access.log.4 wc -l
2000
当服务端显示2000时，说明访问完成。

    
        
             [admin@vm-platform access_log]$ cat apache_access.log.4 awk '{if($12 &amp;gt; 1000) print $0}'的结果：
            10.16.14.82  - - - [24/Nov/2011:16:08:55 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200  20 696078 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;  Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - -  [24/Nov/2011:16:08:55 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20  696045 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;  Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - -  [24/Nov/2011:16:08:55 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20  695776 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;  Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - -  [24/Nov/2011:16:08:55 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20  695332 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;  Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - -  [24/Nov/2011:16:08:55 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20  696500 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;  Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - -  [24/Nov/2011:16:08:55 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20  696484 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;  Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - -  [24/Nov/2011:16:08:55 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20  696215 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;  Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - -  [24/Nov/2011:16:08:55 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20  696235 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;  Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - -  [24/Nov/2011:16:08:55 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20  696182 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;  Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - -  [24/Nov/2011:16:08:55 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20  694964 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;  Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - -  [24/Nov/2011:16:08:58 +0800] &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20 1274  &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)&amp;quot; -  - &amp;quot;a=-; b=-; c=-&amp;quot; -
            10.16.14.82 - - - [24/Nov/2011:16:08:59 +0800]  &amp;quot;POST /myhost/ok.html HTTP/1.1&amp;quot; 200 20 1019 &amp;quot;-&amp;quot; &amp;quot;Mozilla/4.0  (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)&amp;quot; - - &amp;quot;a=-; b=-; c=-&amp;quot;  -
        
    


请注意apache %D记录的时间是从第一个头域（读到第一个换行回车开始）记时到响应输出（协议层，只要写到BUFF中，不一定已经发送到客户端）。这个时间单位是
微秒，请看一下其中有10条记录近700ms,是get方式的千倍。
因为这个现象给我们的两个应用带来性能问题，我开始分析这个原因，后来从网上搜索到文章说IE内核的浏览器在AJAX调用时，对POST方式采用两步发送，第一次发送
头域，第二次发送BODY。中间有很大的延迟，有时还会造成BODY包丢失，我们从网络抓包的情况看，确实存在只发送了HEADER，后面只有服务端超时返回的错误数据包，再也没有BODY的数据。这样的机率大约有1%.
这个问题在apache作为proxy时，proxy就不能在有效的时间内将客户端请求发送给backend，造成大量的内部错误输出。如果是SS还会引起数据时序混乱。在发送\r\n\r\n后头域还有尾巴没有发送完成，这些现象都是从网络抓包监控到的。
如果换成fireFox,同样的AJAX代码执行POST就没有问题，关键是你根本无法控制用户不使用IE。
网上给出的解决方案试了一下根本不起作用（也许IE6可以起作用，我用的IE8就没有细测IE6），关键是只要部分浏览器发生这个情况，就会给应用带来很大的性能问题。
所以尽量少使用AJAX的POST方式提交数据，但是有时服务端为了安全的原因只允许POST提交，可以动态构造FORM表单，而尽量少使用AJAX来调用POST。   本文链接http://www.cxybl.com/html/wyzz/JavaScript_Ajax/20121127/34459.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:06:27</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-70.aspx</link>
        <title>jquery的ajax:Ajax的工具类</title>
        <description>站易建站</description>
        <text>var Ajax={xhr: null,ok : true,xhrPool: [],createXHRObj : function(){var xhrObj;try {if(window.XMLHttpRequest){xhrObj = new XMLHttpRequest();}else if(window.ActiveXObject){var MSXML = [&amp;#39;MSXML2.XMLHTTP.5.0&amp;#39;, &amp;#39;MSXML2.XMLHTTP.4.0&amp;#39;, &amp;#39;MSXML2.XMLHTTP.3.0&amp;#39;, &amp;#39;MSXML2.XMLHTTP&amp;#39;, &amp;#39;Microsoft.XMLHTTP&amp;#39;,&amp;#39;MSXML2.XMLHTTP.6.0&amp;#39;];for(var i=0;i&amp;lt;MSXML.length;i++){try{xhrObj = new ActiveXObject(MSXML[i]);break;}catch(e){}}}if (xhrObj.readyState == null){xhrObj.readyState = 0;xhrObj.addEventListener(&amp;quot;load&amp;quot;, function (){xhrObj.readyState = 4;if (typeof xhrObj.onreadystatechange == &amp;quot;function&amp;quot;){xhrObj.onreadystatechange();}}, false);}return xhrObj;} catch (e) {alert(&amp;quot;XMLHttpRequest创建错误!&amp;quot;);}},getXhrInstance:function(){for(var i=0;i&amp;lt;this.xhrPool.length;i++){if (this.xhrPool[i].readyState == 0 this.xhrPool[i].readyState == 4){return this.xhrPool[i];}}this.xhrPool[this.xhrPool.length] = this.createXHRObj();return this.xhrPool[this.xhrPool.length-1];},init:function(){this.xhrPool = new Array();},setHeader:function(key, value){var xhrObj = this.xhr;try{xhrObj.setRequestHeader(key,value);}catch(e){alert(&amp;quot;设置Header异常:&amp;quot;+e.message);}},//按类型解析数据_parse:function(text,dtype){var _data = null;if(dtype == &amp;#39;JSON&amp;#39;){_data = text;return eval(&amp;#39;(&amp;#39;+ _data +&amp;#39;)&amp;#39;);}return text;},//cbobj必须包含callback函数sendDataForJson:function(data, url,method, cbobj){try{var xhrObj = this.getXhrInstance();var msg=&amp;quot;&amp;quot;;for(i=0;i&amp;lt;data.length;i++){var obj = data[i];if(i == data.length-1){var v = obj.value;msg += obj.key+&amp;quot;=&amp;quot;+encodeURIComponent(encodeURIComponent(v));}else{var v = obj.value;msg += obj.key+&amp;quot;=&amp;quot;+encodeURIComponent(encodeURIComponent(v))+&amp;quot;&amp;amp;&amp;quot;;}}if(method == &amp;quot;GET&amp;quot;){xhrObj.open(method,url+&amp;quot;?randnum=&amp;quot; + Math.random()+ &amp;quot;&amp;amp;&amp;quot; +msg,true);xhrObj.setRequestHeader(&amp;quot;Content-Type&amp;quot;, &amp;quot;text/html&amp;quot;);xhrObj.setRequestHeader(&amp;quot;Cache-Control&amp;quot;, &amp;quot;no-cache&amp;quot;);xhrObj.setRequestHeader(&amp;quot;CustomDataType&amp;quot;,&amp;quot;JSON&amp;quot;);xhrObj.send(null);}else if(method == &amp;quot;POST&amp;quot;){xhrObj.open(method,url+&amp;quot;?randnum=&amp;quot;+Math.random(),true);xhrObj.setRequestHeader(&amp;quot;Content-Type&amp;quot;, &amp;quot;application/x-www-form-urlencoded&amp;quot;);xhrObj.setRequestHeader(&amp;quot;Cache-Control&amp;quot;, &amp;quot;no-cache&amp;quot;);xhrObj.setRequestHeader(&amp;quot;Content-Length&amp;quot;,msg.length);xhrObj.setRequestHeader(&amp;quot;Connection&amp;quot;, &amp;quot;close&amp;quot;);xhrObj.setRequestHeader(&amp;quot;CustomDataType&amp;quot;,&amp;quot;JSON&amp;quot;);xhrObj.send(msg);}var returnText = &amp;quot;&amp;quot;;xhrObj.onreadystatechange = function(){if(xhrObj.readyState == 4){if(xhrObj.status == 200){returnText = xhrObj.responseText;returnText = decodeURIComponent(decodeURIComponent(returnText));cbobj.callback(Ajax._parse(returnText,xhrObj.getResponseHeader(&amp;quot;CustomDataType&amp;quot;)) );}}//xhrObj.abort();};return returnText;}catch(e){alert(&amp;#39;连接服务器异常,错误原因:&amp;#39; + e.name + &amp;quot; 描述:&amp;quot; +e.message );xhrObj.abort();}}}本文链接http://www.cxybl.com/html/wyzz/JavaScript_Ajax/20121127/34462.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:06:27</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-66.aspx</link>
        <title>struts2 json:json struts2 spring 问题...</title>
        <description>站易建站</description>
        <text>json struts2 方法名不能以set 或 get 开头~否则执行两次，spring 存在依赖注入时
&amp;lt;action name=&amp;quot;?&amp;quot; class=&amp;quot;?&amp;quot; method=&amp;quot;!get?!set?&amp;quot;&amp;gt;
&amp;lt;result type=&amp;quot;json&amp;quot;&amp;gt;
&amp;lt;param name=&amp;quot;excludeProperties&amp;quot;&amp;gt;(注入的属性名)&amp;lt;/param&amp;gt;
&amp;lt;/result&amp;gt;
&amp;lt;/action&amp;gt;   本文链接http://www.cxybl.com/html/wyzz/JavaScript_Ajax/20121126/34393.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:06:26</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-65.aspx</link>
        <title>getelementsbyclass:getElementsByClas...</title>
        <description>站易建站</description>
        <text>getElementsByClassName在IE下只能用于inputtextarea等控件不能用于divspan而FF可以使用prototype.js的$$方法可以做到兼容写法是varobjs=$$('span[class=&amp;quot;sp_indirectDep&amp;quot;]');&amp;lt;spanclass=&amp;quot;sp_indirectDep&amp;quot;&amp;gt;...&amp;lt;/span&amp;gt;
   本文链接http://www.cxybl.com/html/wyzz/JavaScript_Ajax/20121126/34392.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:06:26</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-64.aspx</link>
        <title>dtree:dtree重写 动态添加节点</title>
        <description>站易建站</description>
        <text>dTree.prototype.show=function(did){varaNodesData=this.aNodes;//alert(aNodesData);this.aNodes=newArray();this.aIndent=newArray();//DumporiginaldatatoaNodearrayfor(vari=0;i&amp;lt;aNodesData.length;i++){varoneNode=aNodesData[i];this.aNodes[i]=newNode(oneNode.id,oneNode.pid,oneNode.name,oneNode.url,oneNode.title,oneNode.target,oneNode.icon,oneNode.iconOpen,oneNode.open);}document.getElementById(did).innerHTML=d;};
   本文链接http://www.cxybl.com/html/wyzz/JavaScript_Ajax/20121126/34391.html</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:06:05</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-61.aspx</link>
        <title>是时候使用filter:drop-shadow了</title>
        <description>站易建站</description>
        <text>前些天在做一个项目的时候，用到了阴影，阴影是个方向都有的，于是写了一大坨box-shadow来实现，然后今天看到bricss说到filter:drop-shadow，豁然开朗。
具体的实现不用不细讲了，直接看代码：
box-shadow方案：

1
2
3
.box-shadow
						&amp;#123;
box-shadow: rgba&amp;#40;0,0,0,.5&amp;#41;
						0
						1px
						5px;
&amp;#125;

drop-shadow滤镜方案：

1
2
3
4
5
6
7
.filter-drop-shadow
						&amp;#123;
-webkit-filter: drop-shadow&amp;#40;0
						1px
						5px rgba&amp;#40;0,0,0,.5&amp;#41;&amp;#41;;
-moz-filter: drop-shadow&amp;#40;0
						1px
						5px rgba&amp;#40;0,0,0,.5&amp;#41;&amp;#41;;
-ms-filter: drop-shadow&amp;#40;0
						1px
						5px rgba&amp;#40;0,0,0,.5&amp;#41;&amp;#41;;
-o-filter: drop-shadow&amp;#40;0
						1px
						5px rgba&amp;#40;0,0,0,.5&amp;#41;&amp;#41;;
filter: drop-shadow&amp;#40;0
						1px
						5px rgba&amp;#40;0,0,0,.5&amp;#41;&amp;#41;;
&amp;#125;

效果对比：

线上demo：http://dabblet.com/gist/3820382
关于drop-shadow这个滤镜：

不了解filter的同学请访问：-webkit-filter是神马？
chrome从21版本开始支持（现在主流版本是22），Safari 6和ios 6中Safari也都支持
firefox、Opera、ie继续用box-shadow吧

filter规范现在由webkit和adobe在推，firefox在跟进，ie10也支持一点点了，所以在webkit上，可以实现更好的效果，为什么不用呢？
参考：http://bricss.net/post/33158273857</text>
        <image>http://www.alixixi.com/web/uploadpic/2012-12/2012125124044749.jpg</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:02:26</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-59.aspx</link>
        <title>媒体查询与http请求</title>
        <description>站易建站</description>
        <text>Jason Grigsby发表了篇文章，《CSS Media Query for Mobile is Fool’s Gold》对媒体查询(media query)吐槽，大意是在移动设备上使用媒体查询会造成很多资源的浪费——浏览器请求到很多用不到的图片等资源，然后写了一些测试用例测试一些可用方法。然后Tim Kadlec写了篇《Media Query &amp; Asset Downloading Results》，用js自动化的测试了Jason Grigsby的用例。
本文主要整理自Tim的这篇文章。我们来看看到底会不会浪费资源，并寻找下最优的方案。
直接看结果吧~~
测试一：img标签
运行测试
本测试尝试通过对img标签的父级元素使用display:none来隐藏图片。HTML和CSS代码如下：

1
2
3
&amp;lt;div id=&amp;quot;test1&amp;quot;&amp;gt;
	&amp;lt;img src=&amp;quot;images/test1.png&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt;
&amp;lt;/div&amp;gt;


1
2
3
@media all and (max-width: 600px) {
	#test1 &amp;#123; display:none; &amp;#125;
&amp;#125;

测试结果
如果有一种应该100%避免的隐藏图片的方法，那就是display:none。它基本上是没有用的。貌似Opera Mobile和Opera mini不会下载图片，而其它浏览器都会下载。Opera可以比较好的控制资源的下载，对于用户看不到的内容，它不会预先下载。

.testResults{
	border-spacing:0;
}
.testResults td{
	padding:5px 0;
	width:120px;
}
.testResults td:last-child{
	text-align:center;
}
.fail{
	background-color:red;
	color:#FFF;
}
.pass{
	background-color:green;
	color:#FFF;
}




浏览器
请求图片




Android 2.1+
请求


Blackberry (6.0+)
请求


Chrome (4.1)+
请求


Chrome Mobile
请求


Fennec (10.0+)
请求


Firefox (3.6+)
请求


IE
请求


iOS (4.26+)
请求


Kindle (3.0)
请求


Opera (11.6+)
请求


Opera Mini (6.5+)
不请求


Opera Mobile (11.5)
不请求


RockMelt
请求


Safari (4+)
请求



结论
很简单：不要这样用。
测试二：背景图片display:none
运行测试
在本例中，div被设置了background-image。如果屏幕宽度小于600px，div就被设置为display:none。HTML和CSS代码如下：

1
&amp;lt;div id=&amp;quot;test2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;


1
2
3
4
5
6
7
8
#test2 &amp;#123;
	background-image:url&amp;#40;'images/test2.png'&amp;#41;;
	width:200px;
	height:75px;
&amp;#125;
@media all and (max-width: 600px) {
	#test2 &amp;#123;display:none;&amp;#125;
&amp;#125;

测试结果
结果和测试一一样：除了Opera mini和Opera Mobile和Firefox，所有浏览器都会下载图片。



浏览器
请求图片




Android 2.1+
请求


Blackberry (6.0+)
请求


Chrome (4.1)+
请求


Chrome Mobile
请求


Fennec (10.0+)
请求


Firefox (3.6+)
不请求


IE
请求


iOS (4.26+)
请求


Kindle (3.0)
请求


Opera (11.6+)
请求


Opera Mini (6.5+)
不请求


Opera Mobile (11.5)
不请求


RockMelt
请求


Safari (4+)
请求


Silk
请求



结论
同样：不要这样做。不过，像后面其它的测试，有其它的方法可以隐藏背景图片同时避免多余请求。
测试三：背景图片的父级元素被设置为display:none
运行测试
本测试中，对一个div标签设置背景图片，然后对其父元素(也是个div)在浏览器宽度小于600px时设置display:none。HTML和CSS代码如下：

1
2
3
&amp;lt;div id=&amp;quot;test3&amp;quot;&amp;gt;
	&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;


1
2
3
4
5
6
7
8
9
10
#test3 div &amp;#123;
	background-image:url&amp;#40;'images/test3.png'&amp;#41;;
	width:200px;
	height:75px;
&amp;#125;
@media all and (max-width: 600px) {
	#test3 &amp;#123;
		display:none;
	&amp;#125;
&amp;#125;

测试结果
表面上，这个测试貌似和测试二没太明显的区别，但是结论是这个方法是比较靠谱的。。。



浏览器
请求图片




Android 2.1+
不请求


Blackberry (6.0+)
不请求


Chrome (16+)
不请求


Chrome Mobile
不请求


Fennec (10.0+)
请求


Firefox (3.6+)
不请求


IE 9+
不请求


iOS (4.26+)
不请求


Kindle (3.0)
不请求


Opera (11.6+)
不请求


Opera Mini (6.5+)
不请求


Opera Mobile (11.5)
不请求


Safari (4+)
不请求



结论
这个方法不错。除了不太成熟的Fennec，其它浏览器都不请求不必要显示的图片。
测试四：背景图片层叠
运行测试
本测试中，一个div被设置了背景图片。如果浏览器宽度小于600px，该div会被给到另一个背景图片。该测试用来检测是否两个图片都会被请求，还是只请求需要的。HTML和CSS代码如下：

1
&amp;lt;div id=&amp;quot;test4&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;


1
2
3
4
5
6
7
8
9
10
#test4 &amp;#123;
	background-image:url&amp;#40;'images/test4-desktop.png'&amp;#41;;
	width:200px;
	height:75px;
&amp;#125;
@media all and (max-width: 600px) {
	#test4 &amp;#123;
		background-image:url&amp;#40;'images/test4-mobile.png'&amp;#41;;
	&amp;#125;
&amp;#125;

测试结果
比设置display:none好一些，这种方法的结果有点儿乱：



浏览器
同时请求




Android 2.1-3.0?
请求


Android 4.0
不请求


Blackberry 6.0
请求


Blackberry 7.0
不请求


Chrome (16+)
不请求


Chrome Mobile
不请求


Fennec (10.0+)
请求


Firefox (3.6+)
不请求


IE 9+
不请求


iOS (4.26+)
不请求


Kindle (3.0)
请求


Opera (11.6+)
不请求


Opera Mini (6.5+)
不请求


Opera Mobile (11.5)
不请求


Safari 4.0
请求


Safari 5.0+
不请求



结论
我会避免使用这种方法。尽管环境在改善，但是在Android市场中占主导地位的Android 2.x版本依然会像Fennec和Kindle一样同时下载两个图片。三者中，尤其因为Android(的碎片化)，我会推荐寻找别的方案。
测试五：大背景图片被设置min-width
运行测试
本测试中，一个div元素在浏览器宽度大于601px时被设置一个背景图片，然后在浏览器宽度小于600px时被设置为另一个背景图片。HTML和CSS代码如下：

1
&amp;lt;div id=&amp;quot;test5&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;


1
2
3
4
5
6
7
8
9
10
11
12
13
14
@media all and (min-width: 601px) {
	#test5 &amp;#123;
		background-image:url&amp;#40;'images/test5-desktop.png'&amp;#41;;
		width:200px;
		height:75px;
	&amp;#125;
&amp;#125;
@media all and (max-width: 600px) {
	#test5 &amp;#123;
		background-image:url&amp;#40;'images/test5-mobile.png'&amp;#41;;
		width:200px;
		height:75px;
	&amp;#125;
&amp;#125;

测试结果
这种方案好一点儿：



浏览器
同时请求




Android 2.1+
不请求


Blackberry (6.0+)
不请求


Chrome (16+)
不请求


Chrome Mobile
不请求


Fennec (10.0+)
请求


Firefox (3.6+)
不请求


IE 9+
不请求


iOS (4.26+)
不请求


Kindle (3.0)
不请求


Opera (11.6+)
不请求


Opera Mini (6.5+)
不请求


Opera Mobile (11.5)
不请求


Safari (4+)
不请求



结论
这次更多的浏览器一起玩了。但是，Fennec一如既往得不能自已。Android 2.x比较怪异。它会同时请求两个图片——但只有在屏幕宽度大于600px匹配到min-width时才这样。这种行为貌似在Android 3.0版本中被改进了。这是件诡异的事情，我很好奇它为什么会这样。 其实，有个好消息。Jason Grigsby 说他的对本例的测试结果和我的不太一样。所以我又在一些Android 2.x机器上跑了一下这个测试。结论是，我最初的测试结果不太正确，Android 2.x表现很好，我最初测试的那个平台有问题。这不仅仅对于开发者来说是个好消息，对我本人来说更是恢复了对人类的信心。。。。。。。
但是这依然不够，你将需要对IE8以下浏览器提供替代方案，那些版本的浏览器不支持media query，所以没有图片会被显示。当然，这个问题可以用条件注释来简单的兼容一下。
测试六：背景图片display:none(max-device-width)
运行测试
本测试和测试二类似，但是使用了max-device-width来替代max-width。HTML和CSS代码如下：

1
&amp;lt;div id=&amp;quot;test6&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;


1
2
3
4
5
6
7
8
9
10
#test6 &amp;#123;
	background-image:url&amp;#40;'images/test6.png'&amp;#41;;
	width:200px;
	height:75px;
&amp;#125;
@media all and (max-device-width: 600px) {
	#test6 &amp;#123;
		display:none;
	&amp;#125;
&amp;#125;

结论
好吧，不用浪费时间了，这个测试结果和测试二的基本一致。
测试七：层叠覆盖高分辨率
运行测试
最后一个测试，是为了new ipad提供的，它使用了retina屏幕，这样它就要使用更高分辨率的图片了。
本例中，一个div被给到一个背景图片。然后，通过使用min-device-pixel-ratio属性，如果比例大于1.5，一个新的背景图片将会被用到。
HTML和CSS代码如下：

1
&amp;lt;div id=&amp;quot;test7&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;


1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
#test7 &amp;#123;
	background-image:url&amp;#40;'images/test7-lowres.png'&amp;#41;;
	width:200px;
	height:75px;
&amp;#125;
@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
only screen and &amp;#40;-moz-min-device-pixel-ratio: 1.5&amp;#41;,
only screen and &amp;#40;-o-min-device-pixel-ratio: 3/2&amp;#41;,
only screen and &amp;#40;min-device-pixel-ratio: 1.5&amp;#41; &amp;#123;
	#test7 &amp;#123;
		background-image:url&amp;#40;'images/test7-highres.png'&amp;#41;;
		width:200px;
		height:75px;
	&amp;#125;
&amp;#125;

测试结果



浏览器
同时请求




Android 2.1-3.0?
请求


Android 4.0
不请求


Blackberry 6.0
不请求


Blackberry 7.0
不请求


Chrome (16+)
不请求


Chrome Mobile
不请求


Fennec (10.0+)
不请求


Firefox (3.6+)
不请求


IE 9+
不请求


iOS (4.26+)
不请求


Kindle (3.0)
不请求


Opera (11.6+)
不请求


Opera Mini (6.5+)
不请求


Opera Mobile (11.5)
不请求


Safari 4.0+
不请求



结论
为了安全，这个方案可以多测试一些。看起来这种方法在绝大多数情况下是可用的。但是不幸的是，貌似Android 2.x会同时下载两个图片如果设备像素比大于或等于1.5时(或者你在media query中设置的别的任何值)。所以，在本例中，如果你使用了一个高分辨率的Android 2.x的设备，会比较苦逼。。。
好消息是，到目前位置，我还没听说有那一款Android 2.x的设备的屏幕比例超过1.5.所以如果你的项目面向使用retina屏幕的ios设备，你可以将min-device-pixel-ratio设置到2或者更高，这样会比较安全一点儿。。。
推荐

如果你要隐藏一张内容图片，display:none是无效的，所以我推荐使用javascript方案或者服务器端实现；
如果你要隐藏一张背景图片，最好的方法是隐藏其父级元素。如果你不方便这样做，那就用一个层叠样式覆盖掉它吧(就像上面的第五个方案)，然后将设置background-image:none；
如果你要切换多张图片，就把他们全部用media query定义吧。

关于响应式设计的思考
媒体查询现在最大的用处就是响应式设计了，神飞翻译这篇文章也是因为最近在思考响应式设计的效率问题。通过这些测试结果，我们在实现响应式设计的网站时，最好先处理移动设备，然后再向高分辨率设备升级。然后使用图片等外部资源的选择器，一定要写到媒体查询中去。
反馈
如果你觉得这些测试结果有任何错误的地方，欢迎在评论中提出，然后这些测试用例Tim都在GitHub上开源了，感兴趣的话可以fork下。。。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:02:26</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-60.aspx</link>
        <title>HTML5的hidden属性</title>
        <description>站易建站</description>
        <text>我们已经知道了很多HTML5新增的属性，比如placeholder、download、autofocus等，还有个新的可能会常用的属性hidden，也是蛮好用的，这里简单介绍下~~用法很简单：123&amp;lt;div hidden&amp;gt;You can&amp;#39;t see me!&amp;lt;/div&amp;gt;这个属性的表现类似css的display:none，用了这个属性后，元素会被隐藏，块级元素也会折叠起来不再占位，和visible:hidden不一样。所以，对于不支持HTML5的浏览器来说，也可以做下简单的兼容：1*[hidden]{display:none;}嗯，之前我们的通用做法是直接给目标元素一个style=&amp;rdquo;display:none&amp;rdquo;或者定义一个.none之类的选择器，现在我们又多了一种选择。是否好用，还要看项目实际需要吧~~</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:02:26</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-62.aspx</link>
        <title>非响应式设计的viewport</title>
        <description>站易建站</description>
        <text>大家已经非常熟悉响应式网页设计了吧，但是我们通常会忽略很多旧的没有采用响应式设计的网站，其实这类网站在移动终端的用户体验更为关键&amp;mdash;&amp;mdash;因为它们没有对移动设备做任何优化。通用viewport对于响应式网站，大家通常都会这样定义：1&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;非响应式网站但是你或许会知道，iPhone（包括android）通常会把网站默认以980px的宽度来渲染，这就是说，如果你没有定义viewport，如果你的网站的宽度大于980或者小于980，iPhone会把它默认以980px的窗口来缩放和渲染，这样就会有各种问题。比如：前面图片是没有设置viewport的情况，页面宽度大于980px的部分会被截断，后面的是设置了实际宽度(1024)以后的表现，嗯，只是简单的把页面的viewport设置成实际宽度：1&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=1024&amp;quot;&amp;gt;页面实际宽度过小的时候也会有问题：容器的宽度是700px，所以会默认留白，而设置了viewport之后，页面就看起来酥服多了：1&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=720&amp;quot;&amp;gt;&amp;lt;pre lang=&amp;quot;css&amp;quot; line=&amp;quot;1&amp;quot;&amp;gt;常见错误1&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;initial-scale=1, maximum-scale=1, user-scalable=no&amp;quot;&amp;gt;一个很常见的错误是，很多人常常使用initial-scale=1到非响应式网站上，这会让网站以100%宽度渲染而不会自动缩放，用户需要手动移动页面或者缩放。最差的是和initial-scale=1同时使用user-scalable=no或maximum-scale=1，这将使你的网站不能被缩放&amp;mdash;&amp;mdash;用户不能放大/缩小网页来看到全部的内容。所以，请记住：如果你的网站不是响应式的，请不要使用initial-scale或者禁用缩放。</text>
        <image>http://www.alixixi.com/web/uploadpic/2012-12/2012125124041495.jpg</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:02:26</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-58.aspx</link>
        <title>网页设计规范总结:一套不错的网页制作规...</title>
        <description>站易建站</description>
        <text>规范目的为提高团队协作效率, 便于后台人员添加功能及前端后期优化维护, 输出高质量的文档, 特制订此文档. 本规范文档一经确认, 前端开发人员必须按本文档规范进行前台页面开发. 本文档如有不对或者不合适的地方请及时提出, 经讨论决定后方可更改.基本准则符合web标准, 语义化html, 结构表现行为分离, 兼容性优良. 页面性能方面, 代码要求简洁明了有序, 尽可能的减小服务器负载, 保证最快的解析速度.文件规范1. html, css, js, images文件均归档至&amp;lt;系统开发规范&amp;gt;约定的目录中;2. html文件命名: 英文命名, 后缀.htm. 同时将对应界面稿放于同目录中, 若界面稿命名为中文, 请重命名与html文件同名, 以方便后端添加功能时查找对应页面;3. css文件命名: 英文命名, 后缀.css. 共用base.css, 首页index.css, 其他页面依实际模块需求命名.;4. Js文件命名: 英文命名, 后缀.js. 共用common.js, 其他依实际模块需求命名.html书写规范1. 文档类型声明及编码: 统一为html5声明类型&amp;lt;!DOCTYPE html&amp;gt;; 编码统一为&amp;lt;meta charset=&amp;quot;gbk&amp;quot; /&amp;gt;, 书写时利用IDE实现层次分明的缩进;2. 非特殊情况下样式文件必须外链至&amp;lt;head&amp;gt;...&amp;lt;/head&amp;gt;之间;非特殊情况下JavaScript文件必须外链至页面底部;3. 引入样式文件或JavaScript文件时, 须略去默认类型声明, 写法如下:&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;...&amp;quot; /&amp;gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&amp;lt;script src=&amp;quot;...&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;4. 引入JS库文件, 文件名须包含库名称及版本号及是否为压缩版, 比如jquery-1.4.1.min.js; 引入插件, 文件名格式为库名称+插件名称, 比如jQuery.cookie.js;5. 所有编码均遵循xhtml标准, 标签 &amp;amp; 属性 &amp;amp; 属性命名 必须由小写字母及下划线数字组成, 且所有标签必须闭合, 包括 br (&amp;lt;br /&amp;gt;), hr(&amp;lt;hr /&amp;gt;)等; 属性值必须用双引号包括;6. 充分利用无兼容性问题的html自身标签, 比如span, em, strong, optgroup, label,等等; 需要为html元素添加自定义属性的时候, 首先要考虑下有没有默认的已有的合适标签去设置, 如果没有, 可以使用须以&amp;quot;data-&amp;quot;为前缀来添加自定义属性，避免使用&amp;quot;data:&amp;quot;等其他命名方式;7. 语义化html, 如 标题根据重要性用h*(同一页面只能有一个h1), 段落标记用p, 列表用ul, 内联元素中不可嵌套块级元素;8. 尽可能减少div嵌套, 如&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;welcome&amp;quot;&amp;gt;欢迎访问XXX, 您的用户名是&amp;lt;div class=&amp;quot;name&amp;quot;&amp;gt;用户名&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;完全可以用以下代码替代: &amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;&amp;lt;p&amp;gt;欢迎访问XXX, 您的用户名是&amp;lt;span&amp;gt;用户名&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;;9. 书写链接地址时, 必须避免重定向，例如：href=&amp;quot;http://itaolun.com/&amp;quot;, 即须在URL地址后面加上&amp;ldquo;/&amp;rdquo;；10. 在页面中尽量避免使用style属性,即style=&amp;quot;&amp;hellip;&amp;quot;;11. 必须为含有描述性表单元素(input, textarea)添加label, 如&amp;lt;p&amp;gt;姓名: &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;name&amp;quot; name=&amp;quot;name&amp;quot; /&amp;gt;&amp;lt;/p&amp;gt;须写成:&amp;lt;p&amp;gt;&amp;lt;label for=&amp;quot;name&amp;quot;&amp;gt;姓名: &amp;lt;/label&amp;gt;&amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;name&amp;quot; /&amp;gt;&amp;lt;/p&amp;gt;12. 能以背景形式呈现的图片, 尽量写入css样式中;13. 重要图片必须加上alt属性; 给重要的元素和截断的元素加上title;14. 给区块代码及重要功能(比如循环)加上注释, 方便后台添加功能;15. 特殊符号使用: 尽可能使用代码替代: 比如 &amp;lt;(&amp;lt;) &amp;amp; &amp;gt;(&amp;gt;) &amp;amp; 空格( ) &amp;amp; &amp;raquo;(&amp;raquo;) 等等;16. 书写页面过程中, 请考虑向后扩展性;17. class &amp;amp; id 参见 css书写规范.css书写规范1. 编码统一为utf-8;2. 协作开发及分工: i会根据各个模块, 同时根据页面相似程序, 事先写好大体框架文件, 分配给前端人员实现内部结构&amp;amp;表现&amp;amp;行为; 共用css文件base.css由i书写, 协作开发过程中, 每个页面请务必都要引入, 此文件包含reset及头部底部样式, 此文件不可随意修改;3. class与id的使用: id是唯一的并是父级的, class是可以重复的并是子级的, 所以id仅使用在大的模块上, class可用在重复使用率高及子级中; id原则上都是由我分发框架文件时命名的, 为JavaScript预留钩子的除外;4. 为JavaScript预留钩子的命名, 请以 js_ 起始, 比如: js_hide, js_show;5. class与id命名: 大的框架命名比如header/footer/wrapper/left/right之类的在2中由i统一命名.其他样式名称由 小写英文 &amp;amp; 数字 &amp;amp; _ 来组合命名, 如i_comment, fontred, width200; 避免使用中文拼音, 尽量使用简易的单词组合; 总之, 命名要语义化, 简明化.6. 规避class与id命名(此条重要, 若有不明白请及时与i沟通):a） 通过从属写法规避, 示例见d;b）取父级元素id/class命名部分命名, 示例见d;c）重复使用率高的命名, 请以自己代号加下划线起始, 比如i_clear;d）a,b两条, 适用于在2中已建好框架的页面, 如, 要在2中已建好框架的页面代码&amp;lt;div id=&amp;quot;mainnav&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;中加入新的div元素,按a命名法则: &amp;lt;div id=&amp;quot;mainnav&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;firstnav&amp;quot;&amp;gt;...&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;,样式写法: #mainnav .firstnav{.......}按b命名法则: &amp;lt;div id=&amp;quot;mainnav&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;main_firstnav&amp;quot;&amp;gt;...&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;,样式写法: .main_firstnav{.......}7. css属性书写顺序, 建议遵循: 布局定位属性--&amp;gt;自身属性--&amp;gt;文本属性--&amp;gt;其他属性. 此条可根据自身习惯书写, 但尽量保证同类属性写在一起. 属性列举: 布局定位属性主要包括: display &amp;amp; list-style &amp;amp; position（相应的 top,right,bottom,left） ＆ float &amp;amp; clear ＆ visibility ＆ overflow； 自身属性主要包括: width &amp;amp; height &amp;amp; margin &amp;amp; padding &amp;amp; border &amp;amp; background; 文本属性主要包括：color &amp;amp; font &amp;amp; text-decoration &amp;amp; text-align &amp;amp; vertical-align &amp;amp; white- space &amp;amp; 其他 &amp;amp; content; 我所列出的这些属性只是最常用到的, 并不代表全部;8. 书写代码前, 考虑并提高样式重复使用率;9. 充分利用html自身属性及样式继承原理减少代码量, 比如:&amp;lt;ul class=&amp;quot;list&amp;quot;&amp;gt;&amp;lt;li&amp;gt;这儿是标题列表&amp;lt;span&amp;gt;2010-09- 15&amp;lt;/span&amp;gt;&amp;lt;/ul&amp;gt;定义ul.list li{position:relative} ul.list li span{position:absolute; right:0}即可实现日期居右显示10. 样式表中中文字体名, 请务必转码成unicode码, 以避免编码错误时乱码;11. 背景图片请尽可能使用sprite技术, 减小http请求, 考虑到多人协作开发, sprite按模块制作;12. 使用table标签时(尽量避免使用table标签), 请不要用width/ height/cellspacing/cellpadding等table属性直接定义表现, 应尽可能的利用table自身私有属性分离结构与表现 , 如thead,tr,th,td,tbody,tfoot,colgroup,scope; (cellspaing及cellpadding的css控制方法:table{border:0;margin:0;border-collapse:collapse;} table th, table td{padding:0;}, base.css文件中我会初始化表格样式)13. 杜绝使用&amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=7&amp;quot; /&amp;gt; 兼容 ie8;14. 用png图片做图片时, 要求图片格式为png-8格式,若png-8实在影响图片质量或其中有半透明效果, 请为ie6单独定义背景:_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader (sizingMethod=crop, src=http://www.webjx.com/css/&amp;rsquo;img/bg.png&amp;rsquo;);15. 避免兼容性属性的使用, 比如text-shadow css3的相关属性;16. 减少使用影响性能的属性, 比如position:absolute float ;17. 必须为大区块样式添加注释, 小区块适量注释;18. 代码缩进与格式: 建议单行书写, 可根据自身习惯, 后期优化i会统一处理;JavaScript书写规范1. 文件编码统一为utf-8, 书写过程过, 每行代码结束必须有分号; 原则上所有功能均根据XXX项目需求原生开发, 以避免网上down下来的代码造成的代码污染(沉冗代码 与现有代码冲突 ...);2. 库引入: 原则上仅引入jQuery库, 若需引入第三方库, 须与团队其他人员讨论决定;3. 变量命名: 驼峰式命名. 原生JavaScript变量要求是纯英文字母, 首字母须小写, 如iTaoLun;jQuery变量要求首字符为&amp;quot;_&amp;quot;, 其他与原生JavaScript 规则相同, 如: _iTaoLun;另, 要求变量集中声明, 避免全局变量.4. 类命名: 首字母大写, 驼峰式命名. 如 ITaoLun;5. 函数命名: 首字母小写驼峰式命名. 如iTaoLun();6. 命名语义化, 尽可能利用英文单词或其缩写;7. 尽量避免使用存在兼容性及消耗资源的方法或属性, 比如eval_r() &amp;amp; innerText;8. 后期优化中, JavaScript非注释类中文字符须转换成unicode编码使用, 以避免编码错误时乱码显示;9. 代码结构明了, 加适量注释. 提高函数重用率;10. 注重与html分离, 减小reflow, 注重性能.图片规范1. 所有页面元素类图片均放入img文件夹, 测试用图片放于img/demoimg文件夹;2. 图片格式仅限于gif png jpg;3. 命名全部用小写英文字母 数字 _ 的组合，其中不得包含汉字 空格 特殊字符；尽量用易懂的词汇, 便于团队其他成员理解; 另, 命名分头尾两部分, 用下划线隔开, 比如ad_left01.gif btn_submit.gif;4. 在保证视觉效果的情况下选择最小的图片格式与图片质量, 以减少加载时间;5. 尽量避免使用半透明的png图片(若使用, 请参考css规范相关说明);6. 运用css sprite技术集中小的背景图或图标, 减小页面http请求, 但注意, 请务必在对应的sprite psd源图中划参考线, 并保存至img目录下.注释规范1. html注释: 注释格式 &amp;lt;!--这儿是注释--&amp;gt;, &amp;quot;--&amp;quot;只能在注释的始末位置,不可置入注释文字区域;2. css注释: 注释格式 ;3. JavaScript注释, 单行注释使用&amp;quot;//这儿是单行注释&amp;quot; ,多行注释使用 ;开发及测试工具约定建议使用Aptana Dw Vim , 亦可根据自己喜好选择, 但须遵循如下原则:1. 不可利用IDE的视图模式&amp;quot;画&amp;quot;代码;2. 不可利用IDE生成相关功能代码, 比如Dw内置的一些功能js;3. 编码必须格式化, 比如缩进;测试工具: 前期开发仅测试FireFox &amp;amp; IE6 &amp;amp; IE7 &amp;amp; IE8 , 后期优化时加入Opera &amp;amp; Chrome &amp;amp; Safari;建议测试顺序: FireFox--&amp;gt;IE7--&amp;gt;IE8--&amp;gt;IE6--&amp;gt;Opera--&amp;gt;Chrome--&amp;gt;Safari, 建议安装firebug及IE Tab Plus插件.其他规范1. 开发过程中严格按分工完成页面, 以提高css复用率, 避免重复开发;2. 减小沉冗代码, 书写所有人都可以看的懂的代码. 简洁易懂是一种美德. 为用户着想, 为服务器着想.</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:00:50</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-57.aspx</link>
        <title>网页设计师和平面设计师参考:颜色代码总...</title>
        <description>站易建站</description>
        <text>css颜色代码大全：（网页设计师和平面设计师常用） 现在给大家献上颜色对照码：FFFFFF#DDDDDD#AAAAAA#888888#666666#444444#000000#FFB7DD#FF88C2#FF44AA#FF0088#C10066#A20055#8C0044#FFCCCC#FF8888#FF3333#FF0000#CC0000#AA0000#880000#FFC8B4#FFA488#FF7744#FF5511#E63F00#C63300#A42D00#FFDDAA#FFBB66#FFAA33#FF8800#EE7700#CC6600#BB5500#FFEE99#FFDD55#FFCC22#FFBB00#DDAA00#AA7700#886600#FFFFBB#FFFF77#FFFF33#FFFF00#EEEE00#BBBB00#888800#EEFFBB#DDFF77#CCFF33#BBFF00#99DD00#88AA00#668800#CCFF99#BBFF66#99FF33#77FF00#66DD00#55AA00#227700#99FF99#66FF66#33FF33#00FF00#00DD00#00AA00#008800#BBFFEE#77FFCC#33FFAA#00FF99#00DD77#00AA55#008844#AAFFEE#77FFEE#33FFDD#00FFCC#00DDAA#00AA88#008866#99FFFF#66FFFF#33FFFF#00FFFF#00DDDD#00AAAA#008888#CCEEFF#77DDFF#33CCFF#00BBFF#009FCC#0088A8#007799#CCDDFF#99BBFF#5599FF#0066FF#0044BB#003C9D#003377#CCCCFF#9999FF#5555FF#0000FF#0000CC#0000AA#000088#CCBBFF#9F88FF#7744FF#5500FF#4400CC#2200AA#220088#D1BBFF#B088FF#9955FF#7700FF#5500DD#4400B3#3A0088#E8CCFF#D28EFF#B94FFF#9900FF#7700BB#66009D#550088#F0BBFF#E38EFF#E93EFF#CC00FF#A500CC#7A0099#660077#FFB3FF#FF77FF#FF3EFF#FF0 0FF#CC00CC#990099#770077顏色名稱代碼顏色maroon #800000darkred#8B0000brown#A52A2Afirebrick #B22222crimson#DC143Cred#FF0000桃紅~紛紅顏色名稱代碼顏色mediumvioletred#C71585palevioletred#D87093deeppink #FF1493fuchsia(magenta)#FF00FFhotpink#FF69B4pink#FFC0CB lightpink #FFB6C1mistyrose#FFE4E1lavenderblush#FFF0F5紫顏色名稱代碼顏色indigo#4B0082purple#800080darkmagenta#8B008B darkorchid #9932CCblueviolet#8A2BE2darkviolet#9400D3slateblue#6A5ACDmediumpurple#9370DBmediumslateblue#7B68EE mediumorchid#BA55D3violet #EE82EEplum#DDA0DDthistle#D8BFD8 lavender#E6E6FA褐~橘~米白顏色名稱代碼顏色saddlebrown#8B4513sienna#A0522D chocolate#D2691Eindianred#CD5C5Crosybrown#BC8F8Flightcorol #F08080 salmon#FA8072lightsalmon#FFA07Aorangered#FF4500tomato#FF6347 coral#FF7F50darkorange#FF8C00sandybrown#F4A460peru#CD853Ftan#D2B48Cburlywood#DEB887wheat#F5DEB3 moccasin#FFE4B5navajowhite#FFDEADpeachpuff#FFDAB9bisque #FFE4C4antuquewhite#FAEBD7papayawhip#FFEFD5cornsilk#FFF8DC oldlace#FDF5E6linen#FAF0E6seashell#FFF5EEsnow #FFFAFAfloralwhite#FFFAF0ivory#FFFFF0 mintcream#F5FFFA金~黃顏色名稱代碼顏色darkgoldenrod#B8860Bgoldenrod#DAA520gold #FFD700yellow#FFFF00darkkhaki#BDB76Bkhaki#F0E68Cpalegoldenrod#EEE8AA beige#F5F5DClemonchiffon#FFFACDlightgoldenrodyellow#FAFAD2lightyellow #FFFFE0~黃 綠顏色名稱代碼顏色darkslategray#2F4F4Fdarkolivegreen#556B2Folive #808000darkgreen#006400forestgreen#228B22seagreen#2E8B57 green(teal)#008080lightseagreen#20B2AAmadiumaquamarine#66CDAAmediumseagreen#3CB371darkseagreen#8FBC8Fyellowgreen #9ACD32limegreen#32CD32lime#00FF00chartreuse#7FFF00lawngreen#7CFC00greenyellow#ADFF2F mediumspringgreen#00FA9Aspringgreen#00FF7Flightgreen #90EE90palegreen#98F898aquamarine#7FFFD4honeydew#F0FFF0藍顏色名稱代碼顏色midnightblue#191970navy#000080darkblue#00008Bdarkslateblue#483D8Bmediumblue#0000CDroyalblue#4169E1dodgerblue#1E90FFcornflowerblue#6495EDdeepskyblue#00BFFFlightskyblue#87CEFAlightsteelblue#B0C4DElightblue#ADD8E6steelblue#4682B4darkcyan#008B8Bcadetblue#5F9EA0darkturquoise#00CED1mediumturquoise#48D1CCturquoise#40E0D0skyblue#87CECBpowderblue#B0E0E6paleturquoise#AFEEEElightcyan#E0FFFFazure#F0FFFFaliceblue#F0F8FFaqua(cyan)#00FFFF黑~灰~白顏色名稱代碼顏色black#000000dimgray#696969gray#808080slategray#708090lightslategray#778899darkgray#A9A9A9silver#C0C0C0lightgray#D3D3D3gainsboro#DCDCDCwhitesmoke#F5F5F5ghostwhite#F8F8FFwhite#FFFFFF</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 11:00:08</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-56.aspx</link>
        <title>【原创:DHTML】初学prototype,发个JS接...</title>
        <description>站易建站</description>
        <text>以下是HTML网页特效代码，点击运行按钮可查看效果： 以下是程序代码&amp;lt;script&amp;gt;
function request(key)
&amp;#123;
if(typeof(this)=="undefined")return false;
if(this.length&amp;gt;0) 
&amp;#123; 
var s = this.split("&amp;"); 
for(var i in s) 
&amp;#123; 
var sp=s[i].split("=")
if(sp[0]==key)return(sp[1]);
&amp;#125; 
return false;
&amp;#125; 
else return false
&amp;#125;
function getAllKey()
&amp;#123;
if(typeof(this)=="undefined")return false;
var arr=new Array;
if(this.length&amp;gt;0) 
&amp;#123; 
var s = this.split("&amp;"); 
for(var i in s) 
&amp;#123; 
var sp=s[i].split("=");
arr.push(sp[0]);
&amp;#125; 
return arr;
&amp;#125; 
else return false
&amp;#125;
String.prototype.request=request
String.prototype.getAllKey=getAllKey
//===================================================
var url=location.search.substr(1) //action=reply&amp;forum=3&amp;topic=1469
var arg=url.getAllKey()
alert(arg)
document.write("提交参数:"+arg)
for(var cou in arg )
document.write("&amp;lt;br&amp;gt;参数"+arg[cou]+"的值为:"+url.request(arg[cou])+"&amp;lt;br&amp;gt;")
&amp;lt;/script&amp;gt;&amp;lt;/font&amp;gt;
&amp;lt;a href="http://js.alixixi.com/"&amp;gt;欢迎访问阿里西西网页特效代码站，js.alixixi.com&amp;lt;/a&amp;gt;   [Ctrl+A 全部选择 提示：你可先修改部分代码，再按运行]</text>
        <image>http://www.alixixi.com/images/pic/html.gif</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:41</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-55.aspx</link>
        <title>HTML之影像地图</title>
        <description>站易建站</description>
        <text>■ 影像地图&amp;lt;MAP&amp;gt; &amp;lt;AREA&amp;gt; 　　欲明白本篇【HTML彻底剖析】之标记分类，请看 【标记一览】。 　　也请先明白围堵标记与空标记的分别，请看 【HTML概念】。 ■ &amp;lt;MAP&amp;gt; &amp;lt;AREA&amp;gt;： 　　相信不会太多人手动设定 Image Map，通常使用网页编辑部工具的向导，那是很方便的方法，至于 &amp;lt;MAP&amp;gt; &amp;lt;AREA&amp;gt; 的详细的介绍，我们以后有空会补上。 </text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:41</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-54.aspx</link>
        <title>用好HTML的帧窗口标记</title>
        <description>站易建站</description>
        <text>帧窗口是一种复杂的页面技术，应用帧窗口使得用户可以在同一个浏览器窗口中浏览不同网站的内容，可以在一个小窗口中发出查询命令而在另一个小窗口中接收查询结果。实现帧窗口的思路是将浏览器窗口按照功能分割成多个小窗口。每个窗口都对应有自己的HTML页面，按照一定的组合方式组合在一起，以实现特殊的效果。　　在HTML中用&amp;lt;frameset&amp;gt;（分割窗口标记）来分割窗口，&amp;lt;frameset&amp;gt;在多窗口页面中的地位就相当于&amp;lt;body&amp;gt;在普通单窗口页面中的地位，在页面中用&amp;lt;frameset&amp;gt;……&amp;lt;/frameset&amp;gt;标志页面主体部分的起止位置。而且，&amp;lt;frameset&amp;gt;标记决定了怎样划分窗口，以及每个窗口的位置和大小。其基本语法结构如下：&amp;lt;framesetcols＝nrows=nframeborder=yes|noborder＝nbordercolor＝#nframespacing=n&amp;gt;cols和rows：是决定页面如何分割的两个参数。分割左右窗口用cols，各帧的左右宽度用占窗口宽度的百分比来表示。比如：cols="30%,40%,*"就表示水平方向分割成三个窗口，各自所占总宽度的百分比依次是30%，40%和30%。其中"*"表示剩余部分，也就是说"*"对应的小窗口宽度为剩余的宽度。分割上下窗口用rows，同样采用百分比的设定方法。frameborder：是指定各分窗口是（ye）否（no）要加边框；如果加过框的话，则用 border参数指定边框的宽度，bordercolor指定边框的颜色。framespacing：用于设定各分窗口之间的间隔大小，默认值是0。　　用&amp;lt;frameset&amp;gt;标记把窗口分割好后，各窗口的属性是用HTML的&amp;lt;frame&amp;gt;标记来定义的，所以&amp;lt;frameset&amp;gt;标记中必须包含&amp;lt;frame&amp;gt;标记，用以定义各分窗口的属性。其语法如下：&amp;lt;framealign=left|center|right|top|bottomv name=framenamesrc＝urlnoresizescrolling＝yes|on|autoframeborder=yes|nobordercolor＝＃nmarginheight=nmarginwidth＝n&amp;gt;align：设定分窗口的位置是靠左（left）、靠右（right）、居中（center）、靠上（top）还是靠底（bottom）。name：用于指定分窗口的名称，src则用于指定分窗口所对应的HTML页面地址。noresize：是对用户来说的，当&amp;lt;frame&amp;gt;标记中包含此参数的时候，用户就不能用鼠标调整修改各分窗口的大小。scrolling：设定分窗口是否要滚动条。scrolling=no时不要滚动条，scrolling＝yes时表示要滚动条，scrolling＝auoto时表示根据实际情况自动设置滚动条。frameborder和bordercolor：是设定分窗口有无边框和边框颜色的。但对象只限于用&amp;lt;frame&amp;gt;标记的分窗口。marginheight和marginwidth：分别用于设定分窗口的上下边缘和左右边缘的宽度。　　用上面的两个标记，就能够实现多窗口页面，下面将举例说明。1、左小右大两窗口　　这种页面一般在左边的窗口放一个网站导航页，右面放网站页面内容。制作方法：　　先用&amp;lt;frameset&amp;gt;标记并通过设置其cols参数，沿水平方向分割成两个窗口，左边的窗口占20%，右边的窗口取剩余部分，再用&amp;lt;frame&amp;gt;标记分别定义两个窗口的属性。完成后的分帧页面源代码如下：&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;分帧窗口示例&amp;lt;/title&amp;gt;&amp;lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312"&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;frameset cols="20%,*" &amp;gt; &amp;lt;frame name="leftFrame" noresize src="http://www.alixixi.comahtml.htm"&amp;gt;&amp;lt;frame name="mainFrame" noresize src="http://www.alixixi.combhtml.htm"&amp;gt;&amp;lt;/frameset&amp;gt;&amp;lt;noframes&amp;gt;&amp;lt;body&amp;gt;&amp;lt;p&amp;gt;很抱歉！这是一个分帧页面，但由于你的浏览器不支持，所以不能浏览！ &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Sorry!This page uses frames,but your browser doesn't support them .&amp;lt;/body&amp;gt;&amp;lt;/noframes&amp;gt;&amp;lt;/html&amp;gt; 　　从上面的代码看，设计帧窗口页面并没有想象得那么复杂，但以下几点在具体操作时要注意：　　1）用&amp;lt;frame&amp;gt;标记定义分窗口属性时，要注意其在&amp;lt;frameset&amp;gt;标记中的顺序，切不要搞乱了；　　2）分窗口的名称虽可随意定，但最好是以其所在位置命名比较好；　　3）分窗口的scrolling（滚动条）一般取其默认值"auto"比较好；　　4）虽然在最终往往不要分窗口的边框，但在设计阶段，还是设置为有边框比较好，这样在编辑时一目了然；　　5）上面页面代码中后面那句话一般加上为好，因为有的浏览器版本不支持分帧页面，若没加那名话，用户的浏览器若不支持分帧时，看到的是一片空白，不知是怎么一回事了，有那句话提示一下就明白了。　　2、一顶一左一右页面　　先看这种分帧页面的源代码：&amp;lt;frameset rows="20%,*"&amp;gt; &amp;lt;frame name="topFrame" scrolling="NO" noresize src="toppage.htm" &amp;gt;&amp;lt;frameset cols="18%,*"&amp;gt; &amp;lt;frame name="leftFrame" noresize src="http://www.alixixi.comleftpage.htm"&amp;gt;&amp;lt;frame name="mainFrame" src="http://www.alixixi.commainpage.htm"&amp;gt;&amp;lt;/frameset&amp;gt;&amp;lt;/frameset&amp;gt; 　　从上面的代码中可看出，建立复杂分帧页面的方法是由简到繁，如本例中，先用&amp;lt;frameset&amp;gt;定义其“rows”参数，把窗口分成上下两个窗口，再用&amp;lt;frame&amp;gt;标记定义上部窗口，因下部窗口还需再分，所以不用&amp;lt;frame&amp;gt;定义其属性，而是用&amp;lt;frameset&amp;gt;标记设置其cols参数，把它再分成左右两个窗口，因已达目的，所以开始用&amp;lt;frame&amp;gt;标记定义左右两个窗口的属性。　　只要记住：先粗分，后细分，cols横向分， rows纵向分，无需再分的窗口用&amp;lt;frame&amp;gt;定义属性，这些基本原则，制作分帧窗口页面就会轻松自如。</text>
        <image>http://www.alixixi.com/uploadpic/2007-2/200721222352818.gif</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:41</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-53.aspx</link>
        <title>WHATWG发布HTML5标准草案</title>
        <description>站易建站</description>
        <text>据最新消息，World Wide Web Consortium (W3C)正在考虑激活已经沉睡多年的HTML标准。　　一个2004年建立的名为 WHATWG (Web Hypertext Application Technology Working Group)的开发团体正着眼于解决这些问题，他们发布了 HTML5 的标准草案，计划取代现有的HTML4和XHTML标准。　　消息称这一工作得到了包括苹果，Opera和Mozilla的支持。　　附相关信息：　　HTML在1999年最后一次更新，XHTML在2002年更新，之后的数年时间里，尽管发现了众多问题，但都没有去修改过。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:41</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-51.aspx</link>
        <title>XHTML 1.0：标记新的开端</title>
        <description>站易建站</description>
        <text>　　新标准的熟悉和入门内容： 还在用 HTML 编写文档？如果是的话，就不符合当前标准了。2000 年 1 月 26 日，XHTML 1.0 成为万维网联盟(W3C) 的建议。根据 W3C，HTML 不再是 Web 标记标准。取而代之，XHTML 1.0 已替代旧宠儿，标志着通信技术令人兴奋的新时代已经来临。 　　那么，XHTML 1.0 到底是什么？对 Web 开发人员来说，它意味着什么？下面从 W3C 的描述讲起：XHTML 1.0 是 XML 应用程序的 HTML 再形成。这意味着，如果用 XHTML 1.0 编制文档，则将 XML 固有的规则和概念应用到 Web 标记。很自然，还有个摇摆的问题：现在可以用 XHTML 1.0 标记 Web 文档吗？答案很明确：“是的”。所要做的全部只是学会正确组织文档结构，选择所需的正确文档类型定义 (DTD)，以及学会几种管理代码开发的新方法。但是，XHTML 1.0 怎么会如此轻易上手呢？在编写文档时，您将看到，它使用您所熟悉的 HTML 作为其词汇。在方法上有较小的变化，而在思路上有主要的不同，XHTML 1.0 允许 Web 作者依据标准进行编码，并开始改变有关未来发展和更改的观点。 　　为什么需要另一种标记语言？ 　　HTML 使用起来相当好。确实，我们一直受到提出确实管用的跨浏览器、跨平台解决方案的挑战。但是，在 Web 从 90 年代的早期形式发展到今天我们所知的充满活力的活动 Web 的过程中，也意味着在前进途中消耗、破坏甚至制造了新的HTML 规则。 　　学过 HTML 4.0 准则的开发人员都知道，在 HTML 4.0 标准出现时，已经确定了改进 HTML 准则的最终目标。HTML 4.0 的一些主要考虑包括： 通过将基本格式化与样式分离，来整理文档反对使用随心所欲或有问题的元素 要求声明文档类型（并希望在声明中，作者遵循 HTML 4.0 的三个 DTD 中的规则） 这些原则都在 XHTML 1.0 中存在，但是它们与 XML 中的概念组合在一起，这些概念帮助改进标记超出只加强其基本语法的作用。XHTML 1.0 的目标很多，但是，包括以下几个： 　　提供 Web 标记中可扩展性的基础　　通过过去、现在和将来的浏览器，提供相同或更好的互操作性　　通过即将来临的 XHTML 版本、其它 XML 应用和刚刚出现的技术（如无线和新型设备开发），使作者为不断发展的机遇作好准备。采用 XHTML 1.0 最有说服力的理由恐怕是：开发人员（特别是通过 HTML 自学、或依靠可视设计工具来实现其目标的开发人员)可以通过学习该标准，来轻易地移至其它 XML 应用。然后，他们就可以看到 XML 和可扩展性的力量。因为过程相似：即 HTML 词汇加上一些新的结构和语法方法，所以，XHTML 1.0 使 XML 及其应用的领域不再令人畏惧。通过使用熟悉的语言和一些新的概念，很容易转入不太熟悉的领域。例如，XHTML 1.0 的知识可以简化转移到即将出现的XHTML 版本以及无线和其它应用的相关 XML 技术的过程（如 WML（无线标记语言）、SMIL（同步多媒体语言）和 SVG（可伸缩矢量图形））。 　　探询根源 　　探询 XHTML 根源有助于理解 XHTML 的基本原理及指引它的规则。　　XML 和 HTML 的根源相同，都是 SGML，即标准通用标记语言 (Standardized General Markup Language)。有一点很重要：SGML 本身不是一门语言。它是人们所知的元语言 -- 即包含开发其它语言所依据规则的语言。 　　XML 与其根源 SGML 一样，也是元语言。正如这样，其规则用于创建 XML 应用。而 XHTML 是将另一门 SGML 语言，HTML，用作其词汇的 XML 应用。 　　如果关系看起来有些复杂，那是因为它确实有些复杂。SGML 首先产生 HTML，然后是 XML。当觉察到 HTML 的担心和限制时，XML 规则就很明显地可以使 HTML 成长为帮助开发人员脱离这些限制的标记语言。　　首先，需求为了使 XHTML 1.0 文档符合其元语言 (XML)，必须考虑几个需求和规则。如下所示：　　建议、但不要求使用 XML 声明将 XHTML 1.0 文档声明成 XML 文档。要求 XHTML 1.0 文档包含一个 DOCTYPE，指明这是XHTML 1.0 文档，并指出该文档所用的 DTD。XHTML 1.0 文档有一个根元素 &amp;lt;html&amp;gt;。该 HTML 元素的开始标记应该包含 XML 名称空间 xmlns 和该名称空间的合适值。 文档的语法和结构必须符合 XHTML 语法规则。实现该目标的第一步是正确组织 XHTML 1.0 文档的结构。将从添加正确的声明和文档信息开始。 　　文档声明、类型和名称空间 　　XHTML 1.0 文档可以包含几个结构元素，以便被认为是正确的：一个 XML 声明、一个 DOCTYPE 声明，并包括名称空间。 　　XML 声明允许作者将其文档声明成 XML，并包括文档所用的编码。 &amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt; 　　如前面提到的，建议使用此声明，但这不是必需的。不强制使用的部分原因是：如果使用，则某些浏览器（包括 IE 4.5for Mac 和 Netscape 4.0 for Windows）将显示不正确的 XHTML 页面。因此，大多数对互操作性感兴趣的 XHTML 1.0 作者不使用它。但是，因为编码信息在很多情况下很重要（特别在使用国际化文档时），所以，如果不使用 XML 声明，则鼓励在 meta 标记中添加编码信息（在后面的清单 2 中显示）。 　　在 XML 文档声明的下面 - 如果选择不使用它，则位于文档顶部 - 必须放置 DOCTYPE 声明。DOCTYPE 允许作者声明所用的文档类型。在本例中，文档类型是 XHTML 1.0，该文档要符合的特定 XHTML 1.0 DTD 为 strict。 　　XHTML 1.0 中只有三种 DTD。它们来自 HTML 4.0，其内容如下： 　　Strict：Strict 遵循最严格的 XHTML 规则。在以该类型编写的文档中，只允许出现当前元素、属性和字符实体。不允许出现 HTML 4.0 所反对的元素（如 font 或 center）。也不允许过时的元素。Strict 声明如下： &amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1- strict.dtd"&amp;gt; Transitional：transitional XHTML 1.0 文档更宽容一些，它允许作者使用所反对的和当前的方法。可以在transitional 文档中使用 font 或 center，或任何其它所反对的标记，只要文档本身标记正确即可。不应该使用过时的元素。如果在用 XHTML 1.0 编写 transitional 文档，将包括以下声明： &amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1- transitional.dtd"&amp;gt; Frameset: frameset DTD 只为 frameset 文档保留。符合该 DTD 的 frameset 文档可以使用 strict 或 transitional标记。要以 XHTML 1.0 创建 frameset 文档，在文档顶部包括这个 DOCTYPE： &amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd"&amp;gt; 确定了是否使用 XML 声明，并且添加了定义要遵循的标记规则的 DOCTYPE 声明之后，需要将 HTML 根添加到文档，并相应设置 XHTML 名称空间： &amp;lt;html xmlns="http://www.w3.org/1999/xhtml"&amp;gt; 此时，要添加一些必需的结构元素，如 head、title 和 body。清单 1 显示包括 XML 声明的 XHTML 1.0 transitional文档外壳。在清单 2 中，将看到不带 XML 声明的 transitional 文档，但是，有一个 meta 标记来声明所用字符集。 清单 1：带有 XML 声明的 Transitional DTD 格式的 XHTML 1.0 文档 &amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt; &amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&amp;gt; &amp;lt;html xmlns="http://www.w3.org/1999/xhtml"&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Transitional Document with XML Declaration&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; 在清单 2 中，将看到不带 XML 声明的 transitional 文档，但是，有一个 meta 标记来声明所用字符集。 清单 2：不带 XML 声明的 Transitional DTD 格式的 XHTML 1.0 文档 &amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&amp;gt; &amp;lt;html xmlns="http://www.w3.org/1999/xhtml"&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Transitional Document without XML Declaration&amp;lt;/title&amp;gt; &amp;lt;meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 语法事项 一旦 XHTML 文档包含必需的声明和结构信息，就可以检查由 XML 在 Web 标记上的影响而导致的语法更改。这些语法更改包括是否区分大小写、正确格式的标记元素、空和非空元素，以及引号的使用。大小写 如您所知，HTML 不区分大小写。这意味着，HTML 元素和属性名称可以是大写、小写或大小写混合的。因此，可以写成：&amp;lt;body background="http://www.webjx.com/htmldata/2006-03-03/my.gif"&amp;gt; 或 &amp;lt;BODY BACKGROUND="http://www.webjx.com/htmldata/2006-03-03/my.gif"&amp;gt; 甚至 &amp;lt;BoDy background="http://www.webjx.com/htmldata/2006-03-03/my.gif"&amp;gt; 所有这些示例的功能相同。另一方面，XML 却是区分大小写的。因此，XHTML 要求有特定的大小写。在 XHTML 1.0 中，所有元素和属性名称必须是小写的： &amp;lt;body background="http://www.webjx.com/htmldata/2006-03-03/my.gif"&amp;gt; 除元素和属性名称之外，其它不必遵循 XHTML 1.0。请注意，属性值（例如 "http://www.webjx.com/htmldata/2006-03-03/my.gif"）可以是大小写混合的。如果文件所在服务器的文件系统是区分大小写的，或者在应用中使用大小写混合的代码（例如那些用 Microsoft 的活动服务器页面 (ASP)、ASP+ 或 ColdFusion 编写的代码），则尤其如此。 良好的格式 虽然很多 HTML 浏览器很宽容，但是，很多 HTML 工具不符合标准。就这样，某些作者养成了坏习惯，如不正确的标记嵌套。下例在很多浏览器中可以使用： &amp;lt;b&amp;gt;&amp;lt;i&amp;gt;Welcome to MySite.Com&amp;lt;/b&amp;gt;&amp;lt;/i&amp;gt; 在宽容的浏览器中，它将显示粗体和斜体。但是，如果拿起笔来，从粗体的开始标记到其结束标记画一个弧，然后，再从斜体的开始标记到其结束标记画一个弧，将看到，两条弧线相交。这展示了不正确的标记嵌套，我们认为，这是坏格式。 在 XHTML 1.0 中，不接受这样的坏格式标记。必须在“每个元素必须正确嵌套”方面符合良好格式的概念。前面示例用XHTML 1.0 表示为： &amp;lt;b&amp;gt;&amp;lt;i&amp;gt;Welcome to MySite.Com&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt; 现在，再画弧，将看到，弧线不再相交。这些标记以正确顺序放置，并被认为是正确的格式。 非空和空元素 非空元素包含一个元素和一些内容： &amp;lt;p&amp;gt;This is the content within a non-empty element.&amp;lt;/p&amp;gt; 相反，空元素没有内容，只有元素及其属性，如 &amp;lt;hr&amp;gt; 和 &amp;lt;img&amp;gt;。 XML 规则指出，空元素和非空元素必须完全关闭。在 HTML 中，可以看到非空元素通常有一些可选的结束标记。上段可以这样写： &amp;lt;p&amp;gt;This is the content within a non-empty element. 在HTML中，认为这是正确的。XHTML 1.0 要求，非空元素要完全关闭。另一个例子是&amp;lt;li&amp;gt;（列表项）元素。在HTML中，可以写成： &amp;lt;li&amp;gt;The first item in my list. &amp;lt;li&amp;gt;The second item in my list. 或 &amp;lt;li&amp;gt;The first item in my list. &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;The second item in my list. &amp;lt;/li&amp;gt; 在 XHTML 1.0 中，只允许后一种方法。 在 XML 中，用斜杠终止空元素。因此，变成 &amp;lt;br/&amp;gt;。由于某些习惯于解释 HTML 的浏览器在使用该方法时有问题，所以，引入了替代方法，即在斜杠之前添加一个空格：&amp;lt;br /&amp;gt;。 这是一个图像元素的 XHTML 示例，它是空元素： &amp;lt;img src="http://www.webjx.com/htmldata/2006-03-03/my.gif" height="55" width="25" border="0" alt="picture of me" /&amp;gt; 其它要注意的空元素是 meta 和 link。 引号 HTML 中的引号是任意的，即，可以在属性值前后使用引号，也可以不使用，并且不会导致太多麻烦。没有规则说：不用引号将值括起为非法。下例在 HTML 中完全可接受： &amp;lt;table border=0 width="90%" cellpadding=10 cellspacing="10"&amp;gt; 尽管有些属性值用引号括起，有些没有，但浏览器将正确显示该标记。但是，如果要遵循 XHTML 1.0，则必须将所有属性值用引号括起。 &amp;lt;table border="0" width="90" cellpadding="10" cellspacing="10"&amp;gt; 如您可见，这些更改都不大。还有点儿烦，是的，但是，一旦开始使用这种方法，将会发现，这种标记要方便得多。一致 性是使 XHTML 1.0 如此吸引人的原因之一 -- 它提供了构建未来结构的坚实基础。 XHTML 的未来 既然 XHTML 如此易用，为什么这么长时间才被采用呢？这是很多关心标准的人在问的问题。该问题的部分原因可能是宣传得不够 -- 没有太多人了解 XHTML 1.0。甚至即使听说过，也可能没意识到：现在使用它有多简单。 另一个原因是：目前用于 HTML 开发的软件工具（如 Adobe GoLive、Macromedia Dreamweaver、Microsoft FrontPage 等）不支持 XTHML，很多喜爱这些工具或必须在工作中使用这些工具的 Web 作者对此感到担心。 但是，尽管有这些困难，XHTML 1.0 正在前进。事实上，下一版本，XHTML 1.1，已经相当完善，并包含 Web 标记作者某些新的、不同的概念。模块化（将语言分成彼此独立的模块）是 XHTML 1.1 的主要部分。而且，更多类似于 XML 的优势在发挥作用。例如，为 XHTML 文档编写自己的 DTD 或者使用模式 (schema) 的能力将带来真正的可扩展性。 XHTML 1.0 是当今的 Web 标记标准。如果还没使用它，至少应该好好尝试一下。在与 XML 相关的技术领域发生的进展（特别是无线领域）强有力而令人信服地表明：标记语言的作者越灵活，其前景就越被看好。XHTML 1.0 是开阔您眼界的极佳方法。够熟悉，就有意义；够强大，可以帮助您创建适用于今天、更为明天激动人心的机遇作好准备的稳定、可互操作的 Web 站点。</text>
        <image>http://www.webjx.com/htmldata/2006-03-03/my.gif</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:40</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-50.aspx</link>
        <title>玩flash游戏时，按键盘方向键ie浏览器滚...</title>
        <description>站易建站</description>
        <text>今天在调试一个FLASH游戏网站的游戏页面,发现在玩FLASH游戏的时候,鼠标放在FLASH上面后,用键盘操控FLASH上赛车游戏前进方向,突然发现,在按键盘上下方向键时,IE的滚动条竟然跟着翻动起来,通过QQ群很多技术员咨询后,依然没得到答案，调试了半天,在按上下方向键的时候,浏览器右边的滚动条还是跟着一上一下的滚动.
最后,再仔细的分析了情况,理论上鼠标放在FLASH上面,键盘的焦点应该锁定在FLASH游戏里了,一定是FLASH调用代码有问题,在查阅了大量的相关资料后,终于找到解决方法：
把flash播放器代码&amp;lt;object ...&amp;gt;...&amp;lt;param name="wmode" value="opaque" /&amp;gt;...&amp;lt;/object&amp;gt;里面的&amp;lt;param name="wmode" value="opaque" /&amp;gt;这一行去掉。
wmode的"opaque"或"Transparent”值会使 HTML 页的背景可以透过应用程序的所有透明部分进行显示，但是它会将flash与html层交互，导致浏览器的滚动条跟着滚动。
删除这一行后,就可以解决按键盘方向键ie浏览器滚动条会跟着滚动的问题了!</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:40</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-49.aspx</link>
        <title>SHTML完全教程</title>
        <description>站易建站</description>
        <text>
什么是 SHTML
使用SSI（Server Side Include）的html文件扩展名，SSI（Server Side Include），通常称为“服务器端嵌入”或者叫“服务器端包含”，是一种类似于ASP的基于服务器的网页制作技术。
SSI工作原理：
将内容发送到浏览器之前，可以使用“服务器端包含 (SSI)”指令将文本、图形或应用程序信息包含到网页中。例如，可以使用 SSI 包含时间/日期戳、版权声明或供客户填写并返回的表单。对于在多个文件中重复出现的文本或图形，使用包含文件是一种简便的方法。将内容存入一个包含文件中即可，而不必将内容输入所有文件。通过一个非常简单的语句即可调用包含文件，此语句指示 Web 服务器将内容插入适当网页。而且，使用包含文件时，对内容的所有更改只需在一个地方就能完成。
因为包含 SSI 指令的文件要求特殊处理，所以必须为所有 SSI 文件赋予 SSI 文件扩展名。默认扩展名是 .stm、.shtm 和 .shtml。
Web 服务器在处理网页的同时处理 SSI 指令。当 Web 服务器遇到 SSI 指令时，直接将包含文件的内容插入 HTML 网页。如果“包含文件”中包含 SSI 指令，则同时插入此文件。除了用于包含文件的基本指令之外，还可以使用 SSI 指令插入文件的相关信息（如文件的大小）或者运行应用程序或 shell 命令。
网站维护常常碰到的一个问题是，网站的结构已经固定，却为了更新一点内容而不得不重做一大批网页。SSI提供了一种简单、有效的方法来解决这一问题，它将一个网站的基本结构放在几个简单的HTML文件中（模板），以后我们要做的只是将文本传到服务器，让程序按照模板自动生成网页，从而使管理大型网站变得容易。
所以，利用SHTML格式的页面目的和 ASP 差不多，但是因为是 API 所以运转速度更快，效率更高，比ASP快，比HTML慢，但由于可以使用服务器端包含，因此使页面更新容易（特别是批量更新banner，版权等），想象一下吧，你有一段 HTML，要在中间穿插一些特殊的服务端脚本，比如插入其他 HTML 段落，你选择 ASP 来完成这个任务，但是如果任务更繁重，需要更多的时间，比如 5 s，这个时候你不用 ASP 而用 SHTML，或许处理时间就只用 4s 了。
SSI有什么用？
之所以要扯到 SSI，是因爲 Shtml - Server-Parsed HTML 的首字母缩略词。包含有嵌入式服务器方包含命令的 HTML 文本。在被传送给浏览器之前，服务器会对 SHTML 文档进行完全地读取、分析以及修改。shtml和asp 有一些相似，以shtml命名的文件里，使用了ssi的一些指令，就像asp中的指令，你可以在SHTML文件中写入SSI指令，当客户端访问这些shtml文件时，服务器端会把这些SHTML文件进行读取和解释，把SHTML文件中包含的SSI指令解释出来比如：你可以在SHTML文件中用SSI指令引用其他的html文件（#include ），服务器传送给客户端的文件，是已经解释的SHTML不会有SSI指令。它实现了HTML所没有的功能，就是可以实现了动态的SHTML，可以说是HTML的一种进化吧。像新浪的新闻系统就是这样的，新闻内容是固定的但它上面的广告和菜单等就是用#include引用进来的。
目前，主要有以下几种用用途：

显示服务器端环境变量&amp;lt;#echo&amp;gt; 
将文本内容直接插入到文档中&amp;lt;#include&amp;gt; 
显示WEB文档相关信息&amp;lt;#flastmod #fsize&amp;gt; (如文件制作日期/大小等) 
直接执行服务器上的各种程序&amp;lt;#exec&amp;gt;(如CGI或其他可执行程序) 
设置SSI信息显示格式&amp;lt;#config&amp;gt;(如文件制作日期/大小显示方式) 
高级SSI&amp;lt;XSSI&amp;gt;可设置变量使用if条件语句。
使用SSI
SSI是为WEB服务器提供的一套命令，这些命令只要直接嵌入到HTML文档的注释内容之中即可。如：
&amp;lt;!--#include file="info.htm"--&amp;gt;
就是一条SSI指令，其作用是将"info.htm"的内容拷贝到当前的页面中，当访问者来浏览时，会看到其它HTML文档一样显示info.htm其中的内容。其它的SSI指令使用形式基本同刚才的举例差不多，可见SSI使用只是插入一点代码而已，使用形式非常简单。当然，如果WEB服务器不支持SSI，它就会只不过将它当作注释信息，直接跳过其中的内容；浏览器也会忽略这些信息。
如何在我的WEB服务器上配置SSI功能？
在一些WEB服务器上（如IIS 4.0/SAMBAR 4.2），包含 #include 指令的文件必须使用已被映射到 SSI 解释程序的扩展名；否则，Web 服务器将不会处理该SSI指令；默认情况下，扩展名 .stm、.shtm 和 .shtml 被映射到解释程序（Ssinc.dll）。Apache则是根据你的设置情况而定，修改srm.conf如：
AddType text/x-server-parsed-html .shtml 将只对.shtml扩展名的文件解析SSI指令AddType text/x-server-parsed-html .html 将对所有HTML文档解析SSI指令
Netscape WEB服务器直接使用 Administration Server(管理服务器)可打开SSI功能。Website 使用 Server Admin 程序中的 Mapping 标签，扩展名添加内容类型为：wwwserver/html-ssiCern 服务器不支持SSI，可用SSI诈骗法，到 http://sw.cse.bris.ac.uk/WebTools/fakessi.html 上下载一个PERL脚本，即可使你的CERN服务器使用一些SSI指令。（不支持exec指令。）
SSI指令基本格式
程序代码：
&amp;lt;!-- 指令名称="指令参数"&amp;gt;
示例：
&amp;lt;!--#include file="info.htm"--&amp;gt;
说明：


&amp;lt;!-- --&amp;gt;是HTML语法中表示注释，当WEB服务器不支持SSI时，会忽略这些信息。

#include 为SSI指令之一。

file 为include的参数， info.htm为参数值，在本指令中指将要包含的文档名。
注意：


&amp;lt;!--与#号间无空格，只有SSI指令与参数间存在空格。

上面的标点=""，一个也不能少。

SSI指令是大小写敏感的，因此参数必须是小写才会起作用。
SSI指令使用详解
#echo 示范
作用：将环境变量插入到页面中。
语法：
&amp;lt;!--#echo var="变量名称"--&amp;gt;
示例：
&amp;lt;!--#echo var="DOCUMENT_NAME"--&amp;gt; 本文档名称&amp;lt;!--#echo var="DATE_LOCAL"--&amp;gt; 现在时间&amp;lt;!--#echo var="REMOTE_ADDR"--&amp;gt; 你的IP地址
#include 示范
作用：将文本文件的内容直接插入到文档页面中。
语法：
&amp;lt;!--#include file="文件名称"--&amp;gt;&amp;lt;!--#include virtual="文件名称"--&amp;gt;
file 文件名是一个相对路径，该路径相对于使用 #include 指令的文档所在的目录。被包含文件可以在同一级目录或其子目录中，但不能在上一级目录中。如表示当前目录下的的nav_head.htm文档，则为file="nav_head.htm"。virtual 文件名是 Web 站点上的虚拟目录的完整路径。如表示相对于服务器文档根目录下hoyi目录下的nav_head.htm文件；则为file="/hoyi/nav_head.htm"
参数：
file 指定包含文件相对于本文档的位置virtual 指定相对于服务器文档根目录的位置
注意：

文件名称必须带有扩展名。 
被包含的文件可以具有任何文件扩展名，我觉得直接使用htm扩展名最方便，微软公司推荐使用 .inc 扩展名（这就看你的爱好了）。 
示例：
&amp;lt;!--#include file="nav_head.htm"--&amp;gt; 将头文件插入到当前页面&amp;lt;!--#include file="nav_foot.htm"--&amp;gt; 将尾文件插入到当前页面
#flastmod 和 #fsize 示范
作用：
#flastmod 文件最近更新日期#fsize 文件的长度
语法：
&amp;lt;!--#flastmod file="文件名称"--&amp;gt;&amp;lt;!--#fsize file="文件名称"--&amp;gt;
参数：
file 指定包含文件相对于本文档的位置 如 info.txt 表示当前目录下的的info.txt文档virtual 指定相对于服务器文档根目录的位置 如 /hoyi/info.txt 表示
注意：文件名称必须带有扩展名。
示例：
&amp;lt;!--#flastmod file="news.htm"--&amp;gt; 将当前目录下news.htm文件的最近更新日期插插入到当前页面&amp;lt;!--#fsize file="news.htm"--&amp;gt; 将当前目录下news.htm的文件大小入到当前页面
#exec 示范
作用：将某一外部程序的输出插入到页面中。可插入CGI程序或者是常规应用程序的输入，这取决于使用的参数是cmd还是cgi。
语法：
&amp;lt;!--#exec cmd="文件名称"--&amp;gt;&amp;lt;!--#exec cgi="文件名称"--&amp;gt;
参数：
cmd 常规应用程序cgi CGI脚本程序
示例：
&amp;lt;!--#exec cmd="cat /etc/passwd"--&amp;gt; 将会显示密码文件&amp;lt;!--#exec cmd="dir /b"--&amp;gt; 将会显示当前目录下文件列表&amp;lt;!--#exec cgi="/cgi-bin/gb.cgi"--&amp;gt; 将会执行CGI程序gb.cgi。&amp;lt;!--#exec cgi="/cgi-bin/access_log.cgi"--&amp;gt; 将会执行CGI程序access_log.cgi。
注意：从上面的示例可以看出，这个指令相当方便，但是也存在安全问题。
禁止方法：


Apache，将access.conf中的"Options Includes ExecCGI"这行代码删除；

在IIS中，要禁用 #exec 命令，可修改 SSIExecDisable 元数据库；
#config
作用： 指定返回给客户端浏览器的错误信息、日期和文件大小的格式。
语法：
&amp;lt;!--#config errmsg="自定义错误信息"--&amp;gt;&amp;lt;!--#config sizefmt="显示单位"--&amp;gt;&amp;lt;!--#config timefmt="显示格式"--&amp;gt;
参数：
errmsg 自定义SSI执行错误信息，可以为任何你喜欢的方式。sizefmt 文件大小显示方式，默认为字节方式("bytes")可以改为千字节方式("abbrev")timefmt 时间显示方式，最灵活的配置属性。
示例：显示一个不存在文件的大小
&amp;lt;!--#config errmsg="服务器执行错误，请联系管理员 yiho@126.com，谢谢！"--&amp;gt;&amp;lt;!--#fsize file="不存在的文件.htm"--&amp;gt;
以千字节方式显示文件大小
语法：
&amp;lt;!--#config sizefmt="abbrev"--&amp;gt;&amp;lt;!--#fsizefile="news.htm"--&amp;gt;
以特定的时间格式显示时间
&amp;lt;!--#config timefmt="%Y年/%m月%d日 星期%W 北京时间%H:%M:%s，%Y年已过去了%j天 今天是%Y年的第%U个星期"--&amp;gt;&amp;lt;!--#echo var="DATE_LOCAL"--&amp;gt; 显示今天是星期几，几月，时区&amp;lt;!--#config timefmt="今天%A， %B ，服务器时区是 %z，是"--&amp;gt;&amp;lt;!--#echo var="DATE_LOCAL"--&amp;gt;
XSSI
XSSI（Extended SSI）是一组高级SSI指令，内置于Apache 1.2或更高版本的mod-include模块之中。其中可利用的的指令有：
#printenv#set#if
#printenv
作用： 显示当前存在于WEB服务器环境中的所有环境变量。
语法：
&amp;lt;!--#printenv--&amp;gt;
#set
作用：可给变量赋值，以用于后面的if语句。
语法：
&amp;lt;!--#set var="变量名" value="变量值"--&amp;gt;
示例：
&amp;lt;!--#set var="color" value="红色"--&amp;gt;
#if
作用：创建可以改变数据的页面，这些数据根据使用if语句时计算的要求予以显示。
语法：
&amp;lt;!--#if expr="&amp;#36;变量名=\"变量值A\""--&amp;gt; 显示内容&amp;lt;!--#elif expr="&amp;#36;变量名=\"变量值B\""--&amp;gt; 显示内容&amp;lt;!--#else--&amp;gt; 显示内容&amp;lt;!--#endif"--&amp;gt;
示例：
&amp;lt;!--#if expr="&amp;#36;SERVER_NAME=\"www.baidu.com\""--&amp;gt; 欢迎光临 http://www.baidu.com&amp;lt;!--#elif expr="&amp;#36;SERVER_NAME=\"www.google.com\"" --&amp;gt; 欢迎光临 http://www.google.com&amp;lt;!--#else--&amp;gt; 欢迎光临 Afly's Blog！&amp;lt;!--#endif"--&amp;gt;
注意：用于前面指令中的反斜杠，是用来代换内部的引号，以便它们不会被解释为结束表达式。不可省略。
1、Config 命令
Config 命令主要用于修改SSI的默认设置。其中：
Errmsg：设置默认错误信息。为了能够正常的返回用户设定的错误信息，在HTML文件中Errmsg参数必须被放置在其它SSI命令的前面，否则客户端只能显示默认的错误信息，而不是由用户设定的自定义信息。
&amp;lt;!--#config errmsg="Error! Please email webmaster@mydomain.com" --&amp;gt;
Timefmt：定义日期和时间的使用格式。Timefmt参数必须在echo命令之前使用。
&amp;lt;!--#config timefmt="%A， %B %d， %Y"--&amp;gt;&amp;lt;!--#echo var="LAST_MODIFIED" --&amp;gt;
显示结果为：
Wednesday， April 12， 2000
也许用户对上例中所使用的%A %B %d感到很陌生，下面我们就以表格的形式总结一下SSI中较为常用的一些日期和时间格式。
Sizefmt：决定文件大小是以字节、千字节还是兆字节为单位表示。如果以字节为单位，参数值为"bytes"；对于千字节和兆字节可以使用缩写形式。同样，sizefmt参数必须放在fsize命令的前面才能使用。
&amp;lt;!--#config sizefmt="bytes" --&amp;gt;&amp;lt;!--#fsize file="index.html" --&amp;gt;
2、Include 命令
Include 命令可以把其它文档中的文字或图片插入到当前被解析的文档中，这是整个SSI的关键所在。通过Include命令只需要改动一个文件就可以瞬间更新整个站点！
Include 命令具有两个不同的参数：
Virtual：给出到服务器端某个文档的虚拟路径。File：给出到当前目录的相对路径，其中不能使用"../"，也不能使用绝对路径。
&amp;lt;!--#include virtual="/includes/header.html" --&amp;gt;&amp;lt;!--#include file="header.html" --&amp;gt; 这就要求每一个目录中都包含一个header.html文件。
3、Echo 命令
Echo 命令可以显示以下各环境变量：
DOCUMENT_NAME：显示当前文档的名称。DOCUMENT_URI：显示当前文档的虚拟路径。例如：
&amp;lt;!--#echo var="DOCUMENT_NAME" --&amp;gt;&amp;lt;!--#echo var="DOCUMENT_URI" --&amp;gt;
随着网站的不断发展，那些越来越长的URL地址肯定会让人头疼。如果使用SSI，一切就会迎刃而解。因为我们可以把网站的域名和SSI命令结合在一起显示完整的URL，即：
http://YourDomain&amp;lt;!--#echo var="DOCUMENT_URI" --&amp;gt;
QUERY_STRING_UNESCAPED：显示未经转义处理的由客户端发送的查询字串，其中所有的特殊字符前面都有转义符"\"。例如：
&amp;lt;!--#echo var="QUERY_STRING_UNESCAPED" --&amp;gt;
DATE_LOCAL：显示服务器设定时区的日期和时间。用户可以结合config命令的timefmt参数，定制输出信息。例如：
&amp;lt;!--#config timefmt="%A， the %d of %B， in the year %Y" --&amp;gt;&amp;lt;!--#echo var="DATE_LOCAL" --&amp;gt;
显示结果为：
Saturday， the 15 of April， in the year 2000
DATE_GMT：功能与DATE_LOCAL一样，只不过返回的是以格林尼治标准时间为基准的日期。例如：
&amp;lt;!--#echo var="DATE_GMT" --&amp;gt;
LAST_MODIFIED：显示当前文档的最后更新时间。同样，这是SSI中非常实用的一个功能，只要在HTML文档中加入以下这行简单的文字，就可以在页面上动态的显示更新时间。
&amp;lt;!--#echo var="LAST_MODIFIED" --&amp;gt;
CGI环境变量
除了SSI环境变量之外，echo命令还可以显示以下CGI环境变量：
SERVER_SOFTWARE：显示服务器软件的名称和版本。例如：&amp;lt;!--#echo var="SERVER_SOFTWARE" --&amp;gt;SERVER_NAME： 显示服务器的主机名称，DNS别名或IP地址。例如：&amp;lt;!--#echo var="SERVER_NAME" --&amp;gt;SERVER_PROTOCOL：显示客户端请求所使用的协议名称和版本，如HTTP/1.0。例如：&amp;lt;!--#echo var="SERVER_PROTOCOL" --&amp;gt;SERVER_PORT：显示服务器的响应端口。例如：&amp;lt;!--#echo var="SERVER_PORT" --&amp;gt;REQUEST_METHOD：显示客户端的文档请求方法，包括GET， HEAD， 和POST。例如：&amp;lt;!--#echo var="REQUEST_METHOD" --&amp;gt;REMOTE_HOST：显示发出请求信息的客户端主机名称。&amp;lt;!--#echo var="REMOTE_HOST" --&amp;gt;REMOTE_ADDR：显示发出请求信息的客户端IP地址。&amp;lt;!--#echo var="REMOTE_ADDR" --&amp;gt;AUTH_TYPE：显示用户身份的验证方法。&amp;lt;!--#echo var="AUTH_TYPE" --&amp;gt;REMOTE_USER：显示访问受保护页面的用户所使用的帐号名称。&amp;lt;!--#echo var="REMOTE_USER" --&amp;gt;
4、Fsize：显示指定文件的大小，可以结合config命令的sizefmt参数定制输出格式。
&amp;lt;!--#fsize file="index_working.html" --&amp;gt;
5、Flastmod：显示指定文件的最后修改日期，可以结合config 命令的timefmt参数控制输出格式。
&amp;lt;!--#config timefmt="%A， the %d of %B， in the year %Y" --&amp;gt;&amp;lt;!--#flastmod file="file.html" --&amp;gt;
这里，我们可以利用flastmod参数显示出一个页面上所有链接页面的更新日期。方法如下：
&amp;lt;!--#config timefmt=" %B %d， %Y" --&amp;gt;&amp;lt;A HREF="/directory/file.html"&amp;gt;File&amp;lt;/A&amp;gt;&amp;lt;!--#flastmod virtual="/directory/file.html" --&amp;gt;&amp;lt;A HREF="/another_directory/another_file.html"&amp;gt;Another File&amp;lt;/A&amp;gt;&amp;lt;!--#flastmod virtual="/another_directory/another_file.html" --&amp;gt;
显示结果为：
File April 19， 2000Another File January 08， 2000
6、Exec
Exec命令可以执行CGI脚本或者shell命令。使用方法如下：
Cmd：使用/bin/sh执行指定的字串。如果SSI使用了IncludesNOEXEC选项，则该命令将被屏蔽。Cgi：可以用来执行CGI脚本。例如，下面这个例子中使用服务端cgi-bin目录下的counter.pl脚本程序在每个页面放置一个计数器：
&amp;lt;!--#exec cgi="/cgi-bin/counter.pl" --&amp;gt;
关于SHTML和HTML的区别
让我们先来看看SHTML和HTML的区别，如果用一句话来解释就是:SHTML 不是HTML而是一种服务器 API，shtml是服务器动态产成的html.
虽然两者都是超文本格式，但shtml是一种用于SSI技术的文件。也就是Server Side Include--SSI 服务器端包含指令。如果Web Server有SSI功能的话，大多数（尤其是基于Unix平台）的WEB服务器，如Netscape Enterprise Server等均支持SSI命令。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:40</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-48.aspx</link>
        <title>简易网页调色板功能调用代码</title>
        <description>站易建站</description>
        <text>简易网页调色板功能调用代码colorSelect(&amp;#39;色值输入框ID&amp;#39;,&amp;#39;显示色值的容器ID&amp;#39;,event)调用起来很简单，任何物品onClick就可以。以下是HTML网页特效代码，点击运行按钮可查看效果：以下是程序代码&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt; &amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot; /&amp;gt; &amp;lt;title&amp;gt;红辣椒的调色板&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; #colorBoard{position:absolute; padding:10px; width:256px; height:220px; background:#f3f3f3; border:#d9d9d9 1px solid;} #colorBank{ clear:both; border:#d9d9d9 1px solid; background:#FFF; width:252px; padding:0 0 2px 2px; overflow:hidden; margin:0 auto 0 auto;} #colorBank div{ overflow:hidden; height:12px; width:12px; margin:2px 2px 0 0; float:left; overflow:hidden; cursor:pointer;} #colorViews{width:80px; height:20px; float:left;border:#d9d9d9 1px solid; background:#000; display:block; margin: 0 10px 10px 0;} #colorInput{width:70px; height:18px; float:left; font-family:Verdana; font-size:13px; color:#333; display:block; border:none; background:#FFF;border:#d9d9d9 1px solid;margin: 0 10px 10px 0;} #colorClose{width:80px; color:#999999; height:22px; float:left;display:block; background:#f3f3f3;cursor:pointer;border:#d9d9d9 1px solid; border-top:#FFF 1px solid; border-left:#FFF 1px solid;} &amp;lt;/style&amp;gt; &amp;lt;script&amp;gt; //红辣椒的调色板 function colorSelect(now,page,e){ if(document.getElementById(&amp;quot;colorBoard&amp;quot;)){ return; } //关于出现位置 e=e||event; var scrollpos = getScrollPos(); var l = scrollpos.l + e.clientX; var t = scrollpos.t + e.clientY + 10; if (l &amp;gt; getBody().clientWidth-253){ l = getBody().clientWidth-253; } //创建DOM var nowColor = document.getElementById(now); var pageColorViews = document.getElementById(page); var ColorHex=new Array(&amp;#39;00&amp;#39;,&amp;#39;33&amp;#39;,&amp;#39;66&amp;#39;,&amp;#39;99&amp;#39;,&amp;#39;CC&amp;#39;,&amp;#39;FF&amp;#39;); var SpColorHex=new Array(&amp;#39;FF0000&amp;#39;,&amp;#39;00FF00&amp;#39;,&amp;#39;0000FF&amp;#39;,&amp;#39;FFFF00&amp;#39;,&amp;#39;00FFFF&amp;#39;,&amp;#39;FF00FF&amp;#39;); var colorBank = document.createElement(&amp;quot;div&amp;quot;); colorBank.setAttribute(&amp;quot;id&amp;quot;,&amp;quot;colorBank&amp;quot;); var colorViews = document.createElement(&amp;quot;div&amp;quot;); colorViews.setAttribute(&amp;quot;id&amp;quot;,&amp;quot;colorViews&amp;quot;); var colorInput = document.createElement(&amp;quot;input&amp;quot;); colorInput.setAttribute(&amp;quot;id&amp;quot;,&amp;quot;colorInput&amp;quot;); colorInput.setAttribute(&amp;quot;type&amp;quot;,&amp;quot;text&amp;quot;); colorInput.setAttribute(&amp;quot;disabled&amp;quot;,&amp;quot;disabled&amp;quot;); var colorClose = document.createElement(&amp;quot;input&amp;quot;); colorClose.setAttribute(&amp;quot;id&amp;quot;,&amp;quot;colorClose&amp;quot;); colorClose.setAttribute(&amp;quot;value&amp;quot;,&amp;quot;取消&amp;quot;); colorClose.setAttribute(&amp;quot;type&amp;quot;,&amp;quot;button&amp;quot;); colorClose.onclick=function(){document.body.removeChild(colorBoard)}; var colorBoard =document.createElement(&amp;quot;div&amp;quot;); colorBoard.id=&amp;quot;colorBoard&amp;quot;; colorBoard.style.left = l+&amp;quot;px&amp;quot;; colorBoard.style.top = t+ &amp;quot;px&amp;quot;; colorBoard.appendChild(colorViews); colorBoard.appendChild(colorInput); colorBoard.appendChild(colorClose); colorBoard.appendChild(colorBank); document.body.appendChild(colorBoard); //循环出调色板 for(b=0;b&amp;lt;6;b++){ for(a=0;a&amp;lt;3;a++){ for(i=0;i&amp;lt;6;i++){ colorItem = document.createElement(&amp;quot;div&amp;quot;); colorItem.style.backgroundColor=&amp;quot;#&amp;quot;+ColorHex[a]+ColorHex[i]+ColorHex[b]; colorBank.appendChild(colorItem); } } } for(b=0;b&amp;lt;6;b++){ for(a=3;a&amp;lt;6;a++){ for(i=0;i&amp;lt;6;i++){ colorItem = document.createElement(&amp;quot;div&amp;quot;); colorItem.style.backgroundColor=&amp;quot;#&amp;quot;+ColorHex[a]+ColorHex[i]+ColorHex[b]; colorBank.appendChild(colorItem); } } } for(i=0;i&amp;lt;6;i++){ colorItem = document.createElement(&amp;quot;div&amp;quot;); colorItem.style.backgroundColor=&amp;quot;#&amp;quot;+ColorHex[0]+ColorHex[0]+ColorHex[0]; colorBank.appendChild(colorItem); } for(i=0;i&amp;lt;6;i++){ colorItem = document.createElement(&amp;quot;div&amp;quot;); colorItem.style.backgroundColor=&amp;quot;#&amp;quot;+ColorHex[i]+ColorHex[i]+ColorHex[i]; colorBank.appendChild(colorItem); } for(i=0;i&amp;lt;6;i++){ colorItem = document.createElement(&amp;quot;div&amp;quot;); colorItem.style.backgroundColor=&amp;quot;#&amp;quot;+SpColorHex[i]; colorBank.appendChild(colorItem); } var colorItems = colorBank.getElementsByTagName(&amp;quot;div&amp;quot;); for(i=0; i&amp;lt;colorItems.length;i++){ colorItems[i].onmouseover = function(){ a = this.style.backgroundColor; if(a.length&amp;gt;7){ a = formatRgb(a);// } colorViews.style.background = a.toUpperCase(); colorInput.value = a.toUpperCase(); } colorItems[i].onclick = function(){ a = this.style.backgroundColor; if(a.length&amp;gt;7){ a = formatRgb(a);// } nowColor.value = a.toUpperCase(); pageColorViews.style.background = a.toUpperCase(); document.body.removeChild(colorBoard); } } } //格式化函数 function formatRgb(rgb){ rgb = rgb.replace(&amp;quot;rgb&amp;quot;,&amp;quot;&amp;quot;);rgb = rgb.replace(&amp;quot;(&amp;quot;,&amp;quot;&amp;quot;);rgb = rgb.replace(&amp;quot;)&amp;quot;,&amp;quot;&amp;quot;); format = rgb.split(&amp;quot;,&amp;quot;); a = eval(format[0]).toString(16); b = eval(format[1]).toString(16); c = eval(format[2]).toString(16); rgb = &amp;quot;#&amp;quot;+checkFF(a)+checkFF(b)+checkFF(c); function checkFF(str){ if(str.length == 1){ str = str+&amp;quot;&amp;quot;+str; return str; }else{ return str; } } return rgb; } //getBody() function getBody(){ var Body; if (typeof document.compatMode != &amp;#39;undefined&amp;#39; &amp;amp;&amp;amp; document.compatMode != &amp;#39;BackCompat&amp;#39;) { Body = document.documentElement; } else if (typeof document.body != &amp;#39;undefined&amp;#39;) { Body = document.body; } return Body; } //scrollPos function getScrollPos(){ var t,l; if (typeof window.pageYOffset != &amp;#39;undefined&amp;#39;){ t = window.pageYOffset; l = window.pageXOffset; } else{ t = getBody().scrollTop; l = getBody().scrollLeft; } return {t:t,l:l}; } &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;table width=&amp;quot;500&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&amp;lt;input type=&amp;quot;text&amp;quot; value=&amp;quot;&amp;quot; id=&amp;quot;nowColor&amp;quot; /&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;&amp;lt;div id=&amp;quot;pageColorViews&amp;quot; style=&amp;quot;background:#000; width:30px; height:30px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot; onclick=&amp;quot;colorSelect(&amp;#39;nowColor&amp;#39;,&amp;#39;pageColorViews&amp;#39;,event)&amp;quot;&amp;gt;点我就出调色板&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;&amp;lt;/font&amp;gt; &amp;lt;a href=&amp;quot;http://js.alixixi.com/&amp;quot;&amp;gt;欢迎访问阿里西西网页特效代码站，js.alixixi.com&amp;lt;/a&amp;gt;[Ctrl+A 全部选择 提示：你可先修改部分代码，再按运行]</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:40</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-52.aspx</link>
        <title>网页HTML中br元素及nobr元素的实际应用...</title>
        <description>站易建站</description>
        <text>　　我们在进行网页制作中，一定会遇到文本编辑的内容，而且一定会面对换行的问题。在HTML中有换行元素和非换行空格符来解决换行问题。我们在52CSS.com中介绍了很多关于CSS的知识，但对于基础的HTML知识我们也需要有足够的了解，这样才能制作出高水平的网页，让我们的水平更加的专业。遇到这类问题，我们不可避免的需要应用br元素或nobr元素。我们来看这两个元素的意义及应用。br：　　Inserts a line break. 　　插入一个换行符。 　　这是我们最常用的换行方法。　　对于HTML我们可以写成：&amp;lt;br&amp;gt;　　若更规范，应该写成：&amp;lt;br /&amp;gt;nobr：　　Renders text without line breaks. 　　不换行显示文本。 　　nobr在 Internet Explorer 4.0 及以上版本的 HTML 和脚本中可用。 　　nobr不改变显示。 　　nobr元素需要关闭标签，即&amp;lt;nobr&amp;gt;&amp;lt;/nobr&amp;gt;成对出现。关于换行：　　在文本的任何一点（甚至可以在网页的任何地方）都可插入换行标签&amp;lt;br&amp;gt;来换行。 例如：webjx.com&amp;lt;br /&amp;gt;CSS Web Design&amp;lt;br /&amp;gt;关于不换行：　　有时可能要求浏览器不按正常情况下进行换行，例如，显示的公司名很长，或标签文字挺多。但又希望浏览器的显示页面很窄也不要换行，为达到这一目的，单词之间就不能使用常规的空格符，而要用一种特殊的非换行空格符。在HTML代码中非换行空格符事实上不是单个字符，单它的显示效果就跟普通的空格符一样，非换行空格符也是一种归类的标签。我们用一种新的标记实体(entity)来标记非换行空格符。实体用来表示在HTML代码中不易表示的特殊字符，实体的格式为“&amp;XXXX”，在此“XXXX”是用来标识特定实体的字符串，非换行空格表示为“ ”。Netscape为了防止换行还增加 了另一种元素：&amp;lt;NOBR&amp;gt; &amp;lt;/NOBR&amp;gt;.但这种标签 只对Netscape有效。</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:40</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-46.aspx</link>
        <title>如何区分处理两个提交按钮</title>
        <description>站易建站</description>
        <text>一个FORM表单中有两个SUBMIT按钮（例如“修改”“删除”），只有一个ACTION处理页面在此ACTION页面中如何区分是处理“修改”呢还是处理“删除”？ 

方法1：假如FORM表单是这样的：&amp;lt;INPUT Type="Submit" Name="Action" value="修改"&amp;gt; &amp;lt;INPUT Type="Submit" Name="Action" value="删除"&amp;gt; 

你可以在ASP中读取Request("Action")的值，如果用户选择“修改”，则这个变量是"修改"。 
方法2：可以做一个脚本函数，比如： 
&amp;lt;Script Language="javascript"&amp;gt; function modify() &amp;#123; document.form1.action="modify.jsp"; document.form1.submit(); &amp;#125; function delete() &amp;#123; document.form1.action="delete.jsp"; document.form1.submit(); &amp;#125; &amp;lt;/Script&amp;gt; &amp;lt;form name="form1" action=""&amp;gt; &amp;lt;INPUT Type="Button" Name="Modify" value="修 改 " &amp;gt; &amp;lt;INPUT Type="Button" Name="Delete" value="删 除 " &amp;gt; &amp;lt;/form&amp;gt; 

这样可以实现将多个按钮发送到不同网页中。 </text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:39</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-45.aspx</link>
        <title>vml绘图(图表)功能示例</title>
        <description>站易建站</description>
        <text>VML折线图，曲线图都很方便,不需要任何插件，VML只支持IE
以下是HTML网页特效代码，点击运行按钮可查看效果： 以下是程序代码&amp;lt;html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns="http://www.w3.org/TR/REC-html40";;;;&amp;gt;
&amp;lt;title&amp;gt;利用vml实现曲线图的简单例子&amp;lt;/title&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta http-equiv="Content-Language" content="zh-cn"&amp;gt;
&amp;lt;style&amp;gt;
v\:*     &amp;#123; behavior: url(#default#VML) &amp;#125;
o\:*     &amp;#123; behavior: url(#default#VML) &amp;#125;
.shape    &amp;#123; behavior: url(#default#VML) &amp;#125;
.node&amp;#123;font-size:11px;font-family:Verdana;width:1px;color:#000000;&amp;#125;
.node a&amp;#123;color:#000000;text-decoration:none&amp;#125;
.node a:hover&amp;#123;color:#FF0000;text-decoration:underline&amp;#125;
.highlight&amp;#123;background-color:#FFFFFF;color:#2D6197;border:0px&amp;#125;
.highlight a&amp;#123;color:#2D6197&amp;#125;
img&amp;#123;border:0&amp;#125;
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
           &amp;lt;div style="position:relative;left:0px;Top:0px;height:240px;font-family:Verdana;font-size:11px"&amp;gt;
           &amp;lt;v:rect id="BackRect" style='position:absolute;left:30px;Top:20px;width:538px;height:215px;z-index:1;'/&amp;gt;
           
           &amp;lt;v:rect style='position:absolute;left:30px;top:0px;width:12px;height:12px;z-index:3;' fillcolor="#E7F3FF"/&amp;gt;
           &amp;lt;span   style="position:absolute;left:50px;top:0px;width:100px;z-index:3" nowrap&amp;gt;访问页面数&amp;lt;/span&amp;gt;
           
           &amp;lt;v:rect style='position:absolute;left:130px;top:0px;width:12px;height:12px;z-index:3;' fillcolor="#9CC7FF"/&amp;gt;
           &amp;lt;span   style="position:absolute;left:150px;top:0px;width:100px;z-index:3" nowrap&amp;gt;访问ＩＰ数&amp;lt;/span&amp;gt;
                 &amp;lt;span style="position:absolute;left:0px;Top:166px;z-index:2;width:30px"&amp;gt;1350&amp;lt;/span&amp;gt;
           
                 &amp;lt;span style="position:absolute;left:0px;Top:116px;z-index:2;width:30px"&amp;gt;2700&amp;lt;/span&amp;gt;
           
                 &amp;lt;span style="position:absolute;left:0px;Top:66px;z-index:2;width:30px"&amp;gt;4050&amp;lt;/span&amp;gt;
           
                 &amp;lt;span style="position:absolute;left:0px;Top:16px;z-index:2;width:30px"&amp;gt;5400&amp;lt;/span&amp;gt;
           
           &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:2' from="1px,50px" to="537px,50px" strokecolor="#808080"&amp;gt;
                 &amp;lt;v:stroke src="http://www.alixixi.com./images/image001.gif" title="" filltype="pattern"/&amp;gt;
           &amp;lt;/v:line&amp;gt;
           
           &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:2' from="1px,100px" to="537px,100px" strokecolor="#808080"&amp;gt;
                 &amp;lt;v:stroke src="http://www.alixixi.com./images/image001.gif" title="" filltype="pattern"/&amp;gt;
           &amp;lt;/v:line&amp;gt;
           
           &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:2' from="1px,150px" to="537px,150px" strokecolor="#808080"&amp;gt;
                 &amp;lt;v:stroke src="http://www.alixixi.com./images/image001.gif" title="" filltype="pattern"/&amp;gt;
           &amp;lt;/v:line&amp;gt;&amp;lt;span style="position:absolute;left:40px;Top:222px;z-index:2;width:30px"&amp;gt;0&amp;lt;/span&amp;gt;
                 &amp;lt;span style="position:absolute;left:62px;Top:222px;z-index:2;width:30px"&amp;gt;1&amp;lt;/span&amp;gt;
                 &amp;lt;span style="position:absolute;left:84px;Top:222px;z-index:2;width:30px"&amp;gt;2&amp;lt;/span&amp;gt;
                 &amp;lt;span style="position:absolute;left:106px;Top:222px;z-index:2;width:30px"&amp;gt;3&amp;lt;/span&amp;gt;
                 
                 &amp;lt;span style="position:absolute;left:128px;Top:222px;z-index:2;width:30px"&amp;gt;4&amp;lt;/span&amp;gt;
                 &amp;lt;span style="position:absolute;left:150px;Top:222px;z-index:2;width:30px"&amp;gt;5&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="98px,176.074074074074px" to="120px,186.888888888889px" strokecolor="#00659C"/&amp;gt;
                       
                 &amp;lt;span style="position:absolute;left:172px;Top:222px;z-index:2;width:30px"&amp;gt;6&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="120px,186.888888888889px" to="142px,193.407407407407px" strokecolor="#00659C"/&amp;gt;
                       
                 &amp;lt;span style="position:absolute;left:194px;Top:222px;z-index:2;width:30px"&amp;gt;7&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="142px,193.407407407407px" to="164px,195.111111111111px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:216px;Top:222px;z-index:2;width:30px"&amp;gt;8&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="164px,195.111111111111px" to="186px,191px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:238px;Top:222px;z-index:2;width:30px"&amp;gt;9&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="186px,191px" to="208px,181.62962962963px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:260px;Top:222px;z-index:2;width:30px"&amp;gt;10&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="208px,181.62962962963px" to="230px,164.555555555556px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:282px;Top:222px;z-index:2;width:30px"&amp;gt;11&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="230px,164.555555555556px" to="252px,147.555555555556px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:304px;Top:222px;z-index:2;width:30px"&amp;gt;12&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="252px,147.555555555556px" to="274px,127.962962962963px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:326px;Top:222px;z-index:2;width:30px"&amp;gt;13&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="274px,127.962962962963px" to="296px,109.333333333333px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:348px;Top:222px;z-index:2;width:30px"&amp;gt;14&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="296px,109.333333333333px" to="318px,97.5925925925926px" strokecolor="#00659C"/&amp;gt;
                 
                 &amp;lt;span style="position:absolute;left:370px;Top:222px;z-index:2;width:30px"&amp;gt;15&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="318px,97.5925925925926px" to="340px,92.3333333333333px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:392px;Top:222px;z-index:2;width:30px"&amp;gt;16&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="340px,92.3333333333333px" to="362px,78.2962962962963px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:414px;Top:222px;z-index:2;width:30px"&amp;gt;17&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="362px,78.2962962962963px" to="384px,67.8888888888889px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:436px;Top:222px;z-index:2;width:30px"&amp;gt;18&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="384px,67.8888888888889px" to="406px,60.5555555555555px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:458px;Top:222px;z-index:2;width:30px"&amp;gt;19&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="406px,60.5555555555555px" to="428px,53.4814814814815px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:480px;Top:222px;z-index:2;width:30px"&amp;gt;20&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="428px,53.4814814814815px" to="450px,40.4074074074074px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:502px;Top:222px;z-index:2;width:30px"&amp;gt;21&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="450px,40.4074074074074px" to="472px,33.2592592592593px" strokecolor="#00659C"/&amp;gt;
                       
                 
                 &amp;lt;span style="position:absolute;left:524px;Top:222px;z-index:2;width:30px"&amp;gt;22&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="472px,33.2592592592593px" to="494px,25.4814814814815px" strokecolor="#00659C"/&amp;gt;
                       
                                   &amp;lt;span style="position:absolute;left:546px;Top:222px;z-index:2;width:30px"&amp;gt;23&amp;lt;/span&amp;gt;
                 
                       &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="494px,25.4814814814815px" to="516px,25.1481481481482px" strokecolor="#00659C"/&amp;gt;
                       
           
           &amp;lt;v:line style='position:absolute;left:30px;Top:20px;z-index:3' from="0px,109px" to="538px,109px" strokecolor=red&amp;gt;
                 &amp;lt;v:stroke src="http://www.alixixi.com./images/image001.gif" title="" filltype="pattern"/&amp;gt;
           &amp;lt;/v:line&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; &amp;lt;/font&amp;gt;
&amp;lt;a href="http://js.alixixi.com/"&amp;gt;欢迎访问阿里西西网页特效代码站，js.alixixi.com&amp;lt;/a&amp;gt;   [Ctrl+A 全部选择 提示：你可先修改部分代码，再按运行]</text>
        <image>http://www.alixixi.com/images/pic/html.gif</image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:39</pubDate>
    </item>
    
    <item>
        <link>http://localhost:816http://localhost:816/content-44.aspx</link>
        <title>HTML 初学者指南(3)</title>
        <description>站易建站</description>
        <text>列表ListsHTML 支持不编号 unnumbered, 编号numbered, 和定义definition 三种列表. 你也可以嵌套列表, 但是不要嵌套过多，否则会使读者感到不清晰。 不编号列表Unnumbered Lists 制作一个不编号的，公告式列表, 用开始标记 &amp;lt;UL&amp;gt; ( unnumbered list 的简记) 开始 输入 &amp;lt;LI&amp;gt; (list item) 标记，后面跟独立的项; 不需使用 &amp;lt;/LI&amp;gt; 标记 用 &amp;lt;/UL&amp;gt; 标记结束整个列表 下面是一个有三个项的列表: &amp;lt;UL&amp;gt;&amp;lt;LI&amp;gt; apples&amp;lt;LI&amp;gt; bananas&amp;lt;LI&amp;gt; grapefruit&amp;lt;/UL&amp;gt; 输出形式为: apples bananas grapefruit &amp;lt;LI&amp;gt; 项可以含有多个段落. 用段落标记 &amp;lt;P&amp;gt; 指明. 编号列表Numbered Lists 编号列表 (也称为 有序列表ordered list) 和不编号列表相同, 只是用 &amp;lt;OL&amp;gt; 代替 &amp;lt;UL&amp;gt;. 各项同样用 &amp;lt;LI&amp;gt; 标记. 下面的 HTML 代码: &amp;lt;OL&amp;gt;&amp;lt;LI&amp;gt; oranges&amp;lt;LI&amp;gt; peaches&amp;lt;LI&amp;gt; grapes&amp;lt;/OL&amp;gt; 产生的输出为: oranges peaches grapes 定义列表Definition Lists 定义列表 (编码为 &amp;lt;DL&amp;gt;) 通常含有交替出现的 定义术语definition term (编码为 &amp;lt;DT&amp;gt;) 和定义描述definition definition (编码为 &amp;lt;DD&amp;gt;). Web 浏览器通常另起一行显示定义描述. 下面是一个定义列表的例子: &amp;lt;DL&amp;gt;&amp;lt;DT&amp;gt; NCSA&amp;lt;DD&amp;gt; NCSA, the National Center for Supercomputing Applications,is located on the campus of the University of Illinois at Urbana-Champaign. &amp;lt;DT&amp;gt; Cornell Theory Center&amp;lt;DD&amp;gt; CTC is located on the campus of Cornell University in Ithaca,New York. &amp;lt;/DL&amp;gt; 输出形式为: NCSA NCSA, the National Center for Supercomputing Applications, is located on the campus of the University of Illinois at Urbana-Champaign. Cornell Theory Center CTC is located on the campus of Cornell University in Ithaca, New York. &amp;lt;DT&amp;gt; 和 &amp;lt;DD&amp;gt; 项可以包含多个段落 (用 &amp;lt;P&amp;gt; 标记指示), 列表, 或其他的定义信息. COMPACT 属性可能会被经常使用，如果你的定义术语很简短的话. 例如，如果你想显示一些计算机选项, 它们可以和定义的开始处于同一行中. &amp;lt;DL COMPACT&amp;gt;&amp;lt;DT&amp;gt; -i&amp;lt;DD&amp;gt;invokes NCSA Mosaic for Microsoft Windows using the initialization file defined in the path&amp;lt;DT&amp;gt; -k&amp;lt;DD&amp;gt;invokes NCSA Mosaic for Microsoft Windows in kiosk mode&amp;lt;/DL&amp;gt; 输出形式为: -i invokes NCSA Mosaic for Microsoft Windows using the initialization file defined in the path. -k invokes NCSA Mosaic for Microsoft Windows in kiosk mode. 嵌套列表Nested Lists 列表可以嵌套. 在每个列表项中，你还可以含有多个段落，每个段落含有嵌套列表.</text>
        <image></image>
        <keywords>站易建站</keywords>
        <author>funnyzak</author>
        <source>互联网</source>
        <pubDate> 2012-12-08 10:58:39</pubDate>
    </item>
    
</document>